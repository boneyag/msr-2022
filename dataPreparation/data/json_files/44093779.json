{"tags": ["javascript", "jquery", "mysql", "json", "ajax"], "comments": [{"score": 1, "creation_date": 1495347868, "post_id": 44093779, "comment_id": 75209003, "body": "What is the reason for needing to replace the double quotes? As far as I can tell when you do that you won&#39;t be returning  valid JSON response"}, {"score": 0, "creation_date": 1495349364, "post_id": 44093779, "comment_id": 75209276, "body": "I just want to do, pass this values with url parameters and server-side does not belong with that values.  Because with double quote I can not match the syntax."}, {"score": 2, "creation_date": 1495349701, "post_id": 44093779, "comment_id": 75209338, "body": "The syntax of what?"}], "answers": [{"score": 1, "last_activity_date": 1495348286, "answer_id": 44093862, "question_id": 44093779, "body": "<p>valid JSON format requires keys to be strings in double quotes. When you do str_replace and remove double quotes, you JSON becomes invalid and browser cannot parse it</p>\n\n<p>If you want to convert <code>cnumber</code> from string to int then you should do it <strong>before</strong> passing <code>$data</code> to <code>json_encode</code></p>\n"}, {"comments": [{"score": 0, "creation_date": 1495349369, "post_id": 44093869, "comment_id": 75209277, "body": "Thanks for your idea. I just want to do, pass this values with url parameters and server-side does not belong with that values.  Because with double quote I can not match the syntax."}, {"score": 0, "creation_date": 1495349738, "post_id": 44093869, "comment_id": 75209349, "body": "@Roketvai What?  Your comment makes no sense to me... can you add more details and try again?  JSON can contain any valid string, which includes URLs with parameters."}], "score": 2, "last_activity_date": 1495348318, "answer_id": 44093869, "question_id": 44093779, "body": "<blockquote>\n  <p>I replace the double quote \"\" from my json_encode result.</p>\n</blockquote>\n\n<p>This is not a smart thing to do.</p>\n\n<p>You're basically destroying any sense of a useful serialization format.  The quotes are required.  How else would you reliably separate the data from the structure?  How will you differentiate between a comma in a string and a comma as a control character telling you when the next field is to start?  This isn't as simple as doing a string replace.  If you want to invent your own format... I suppose you could do that... but you must take these things into consideration.</p>\n\n<p>You should stick to formats that already exist and are well tested.  JSON is a widely compatible format, which is why it's so heavily used.  If for some reason you need something more compact, consider CBOR or similar.</p>\n\n<blockquote>\n  <p>How can I display without double quote json array data in jquery</p>\n</blockquote>\n\n<p>If you wanted to <strong>display</strong> something differently, you wouldn't wreck your data server-side like you're doing now... you'd simply reformat it for display later.</p>\n\n<p>It's acceptable to remove those quotes client-side in your JavaScript.  It's a completely horrible idea to do it server-side where you still need to get useful structured data to the client.</p>\n"}, {"score": 0, "last_activity_date": 1495349436, "answer_id": 44093966, "question_id": 44093779, "body": "<p>Try</p>\n\n<pre><code>$json_string = json_encode($data);\necho $json_string\n</code></pre>\n\n<p>And then in the <code>success</code> callback,</p>\n\n<pre><code>$('#num').append(data.map(function(d) {\n  return d.cnumber;\n}).join(','));\n</code></pre>\n\n<p>As Brad pointed out, don't replace the double quotes on the server side.</p>\n"}], "is_answered": true, "answer_count": 3, "score": 0, "last_activity_date": 1495362095, "creation_date": 1495347478, "question_id": 44093779, "title": "How can I display without double quote json array data in jquery", "body": "<p>I replace the double quote \"\" from my json_encode result. </p>\n\n<pre><code>$json_string = json_encode($data);\n$json_string = str_replace('\"','',$json_string);\necho $json_string;\n</code></pre>\n\n<p>And I fetch data using for loop. code like this:</p>\n\n<pre><code>$(\"#gnumbers\").change(function() { \n    var id = $(this).find(\":selected\").val();\n    var dataString = 'grpid='+ id;    \n    $.ajax({                \n        url: 'getGroupNumbers.php',\n        dataType: \"json\",\n        data: dataString,  \n        cache: false,\n        success: function (data) {  \n            var i, l;\n            for (i = 0, l = data.length; i &lt; l; i++) { \n                $(\"#num\").append(data[i].cnumber + \",\");\n                //console.log(data[i].cnumber);\n            }\n        } \n    });\n});\n</code></pre>\n\n<p>I checked console.log return nothing but network result something like this: <strong>[{cnumber:8801752992444,group_id:3},{cnumber:8801795978968,8801936761915,group_id:3}]</strong></p>\n\n<p>Without str_replace i can display data correctly. Even you can see I append multiple rows with comma separated.\nMy question is how can i display this output result? \nPlease help. Thanks</p>\n"}
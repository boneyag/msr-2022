{"tags": ["regex"], "comments": [{"score": 0, "creation_date": 1520229321, "post_id": 49104270, "comment_id": 85213570, "body": "Why don&#39;t you <a href=\"http://www.regex101.com\" rel=\"nofollow noreferrer\">try it</a> ?"}, {"score": 0, "creation_date": 1520229348, "post_id": 49104270, "comment_id": 85213576, "body": "Im just confused about the backslash in the beginning"}, {"score": 0, "creation_date": 1520229360, "post_id": 49104270, "comment_id": 85213580, "body": "You have two different expressions in the title and the question. Pick one."}, {"score": 2, "creation_date": 1520229366, "post_id": 49104270, "comment_id": 85213583, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/36982512/meaning-of-regular-expressions-like-d-d-etc\">Meaning of regular expressions like - \\\\d , \\\\D, ^ , $ etc</a>"}, {"score": 0, "creation_date": 1520229378, "post_id": 49104270, "comment_id": 85213587, "body": "and  <a href=\"https://stackoverflow.com/questions/22937618/reference-what-does-this-regex-mean\" title=\"reference what does this regex mean\">stackoverflow.com/questions/22937618/&hellip;</a>"}, {"score": 0, "creation_date": 1520229381, "post_id": 49104270, "comment_id": 85213589, "body": "The regex in the header and description is different, which one are you interested to know."}, {"score": 0, "creation_date": 1520229382, "post_id": 49104270, "comment_id": 85213590, "body": "They are just escaping the literal open/close parentheses."}, {"score": 0, "creation_date": 1520229471, "post_id": 49104270, "comment_id": 85213619, "body": "The one in the header @HassanImam"}, {"score": 0, "creation_date": 1520229488, "post_id": 49104270, "comment_id": 85213629, "body": "<a href=\"https://regex101.com/r/kDEwvq/1\" rel=\"nofollow noreferrer\">click me</a>"}, {"score": 0, "creation_date": 1520229717, "post_id": 49104270, "comment_id": 85213695, "body": "Another example, \\\\d. This regex does not accept a single digit, say 5. How different is it from \\d? @TimBiegeleisen"}, {"score": 0, "creation_date": 1520229788, "post_id": 49104270, "comment_id": 85213718, "body": "<code>(\\(\\d\\d\\d\\)\\s)?</code> means do a non-greedy regex search for 3 digits inside parenthesis followed by a space."}, {"score": 0, "creation_date": 1520231489, "post_id": 49104270, "comment_id": 85214308, "body": "Originally, a backslash always escaped any character, so <code>\\.</code> matches a literal dot, <code>\\[</code> matches an opening square bracket, etc. At some point, shorthands like <code>\\t</code> (tab) were loaned from C, and then the floodgates were open. In Perl-style regex, <i>generally</i> a backslash before an alphabetic represents a character class, while backslashes before punctuation quotes it. A backslash before a backslash, of course, also quotes it, so <code>\\\\ </code> (still) matches a literal backslash."}], "answers": [{"score": 0, "last_activity_date": 1520229509, "answer_id": 49104318, "question_id": 49104270, "body": "<p>have a look at this site\n<a href=\"https://regex101.com/r/yS5fU8/2\" rel=\"nofollow noreferrer\">https://regex101.com/r/yS5fU8/2</a></p>\n\n<p>1st Capturing Group (\\d\\d\\d)</p>\n\n<ul>\n<li>p (\\d\\d\\d) \\d matches a digit (equal to [0-9]) </li>\n<li>\\d matches a digit (equal to [0-9]) </li>\n<li>\\d matches a digit (equal to [0-9])</li>\n<li>\\d matches a digit (equal to [0-9])</li>\n</ul>\n\n<p>and\n- \\s matches any whitespace character (equal to [\\r\\n\\t\\f\\v ])</p>\n"}, {"score": 1, "last_activity_date": 1520229716, "answer_id": 49104356, "question_id": 49104270, "body": "<p>\\d matches the digits. it is all about the langugae you are using.\nIn python3, [0-9] matches only 0123456789 characters, while \\d matches [0-9] and other digit characters, for example Eastern Arabic numerals \u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669.</p>\n\n<ul>\n<li>\\s matches any whitespace character </li>\n</ul>\n"}, {"score": 1, "last_activity_date": 1520230544, "answer_id": 49104493, "question_id": 49104270, "body": "<p>\\d matches digits from [0-9].</p>\n\n<p>\\s matches white-space characters like [ \\t\\n\\r]</p>\n\n<p>? is means optional, it matches even if the following regex are not present.</p>\n\n<p>() are used for grouping.</p>\n\n<p>Now the question is what does  <strong>((\\d\\d\\d)\\s)?</strong> match?\n\\d\\d\\d matches 3 consecutive digits and group them to $1.</p>\n\n<p>((\\d\\d\\d)\\s) matches 3 consecutive followed by space and this is grouped to $2.</p>\n\n<p>since we have ? at the end of the regex, it matches digits followed with space and also if there are no such match.</p>\n\n<p>In case if there is no match, it points to start of the line.</p>\n"}, {"score": 1, "last_activity_date": 1520231239, "answer_id": 49104620, "question_id": 49104270, "body": "<p>The regex expression : <a href=\"https://i.stack.imgur.com/EYsrx.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/EYsrx.png\" alt=\"enter image description here\"></a></p>\n\n<p>The first backslash escapes the open parenthesis that follows, as it is a special character, so the regex will search for an open and a close parenthesis in the input string</p>\n\n<p>Example : (111)</p>\n"}], "is_answered": true, "answer_count": 4, "score": -1, "last_activity_date": 1520231239, "creation_date": 1520229239, "question_id": 49104270, "title": "What does this (\\(\\d\\d\\d\\)\\s)? regex match?", "body": "<p>What does this ((\\d\\d\\d)\\s)? regex match?</p>\n"}
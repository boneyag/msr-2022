{"tags": ["json", "regex", "matlab"], "comments": [{"score": 0, "creation_date": 1447859041, "post_id": 33783429, "comment_id": 55333517, "body": "It hardly thepends on witch character are admittend inside the &quot;property names&quot; and in &quot;values&quot;"}, {"score": 1, "creation_date": 1447859041, "post_id": 33783429, "comment_id": 55333518, "body": "Language? JavaScript I suppose. Why a regex?"}, {"score": 3, "creation_date": 1447859059, "post_id": 33783429, "comment_id": 55333530, "body": "<b><i>Decode</i></b> the JSON into whatever native array/object type your language of choice has and simply access the key...!?"}, {"score": 0, "creation_date": 1447859153, "post_id": 33783429, "comment_id": 55333600, "body": "See <a href=\"http://ideone.com/7QzW8l\" rel=\"nofollow noreferrer\">Python demo</a> (just to show how easy it is with a JSON parser)."}, {"score": 0, "creation_date": 1447859172, "post_id": 33783429, "comment_id": 55333612, "body": "I agree with @deceze. Parsing the json with a fitting library (depends on the language you&#39;re working in) is the proper way to do this."}, {"score": 0, "creation_date": 1447859266, "post_id": 33783429, "comment_id": 55333690, "body": "You&#39;re probably asking the wrong question. You&#39;re trying to deal with a string of JSON? As @deceze mentions, your best bet is probably to parse the JSON string, and then just access the value by key."}, {"score": 0, "creation_date": 1447859430, "post_id": 33783429, "comment_id": 55333828, "body": "i&#39;m using matlab and the json parser is slow.  since i always only want the value after <code>l_fix</code> i figure a regex would be a faster way to grab the data i want."}, {"score": 2, "creation_date": 1447859604, "post_id": 33783429, "comment_id": 55333958, "body": "\u2192 <a href=\"http://stackoverflow.com/q/26420725/476\">stackoverflow.com/q/26420725/476</a>?!"}], "answers": [{"comments": [{"score": 0, "creation_date": 1447861072, "post_id": 33783638, "comment_id": 55335102, "body": "I had tried this also but i only want to return the number after <code>l_fix</code> and not the key itself.  I thought that <code>?:</code> would do the trick but it doesn&#39;t seem to make a difference."}, {"score": 0, "creation_date": 1447861491, "post_id": 33783638, "comment_id": 55335448, "body": "See the SO post I linked. You need <code>&#39;tokens&#39;</code> instead of <code>&#39;match&#39;</code>"}], "score": 4, "last_activity_date": 1592942307, "last_edit_date": 1592942307, "answer_id": 33783638, "question_id": 33783429, "body": "<p>A regex doesn't seem to be what you need, however if you want to do it with a regex it could be this one: <code>&quot;l_fix&quot;\\s*:\\s*&quot;(.+?)&quot;</code>. Then, in the first group you'll have the value you are looking for.</p>\n<p><a href=\"http://regexr.com/3c850\" rel=\"nofollow noreferrer\">See it working here</a></p>\n<p>Also, <a href=\"https://stackoverflow.com/a/17574550/310276\">see this SO post about regex groups in matlab</a>.</p>\n"}, {"comments": [{"score": 0, "creation_date": 1511471312, "post_id": 33784289, "comment_id": 81881288, "body": "bad answer; in my case I&#39;m trying to parse log files. I don&#39;t want to load up each line of the log, parse the JSON and then find the data I need, it&#39;s time-consuming and memory intensive to do that. Using a regex seems possible to do and it is <i>faster</i> and uses <i>less memory</i>."}, {"score": 0, "creation_date": 1511640103, "post_id": 33784289, "comment_id": 81935169, "body": "&quot;Log file case&quot; it is your case. In this question does not means log file"}], "score": -3, "last_activity_date": 1447861186, "answer_id": 33784289, "question_id": 33783429, "body": "<p>Why regex, best way using JSON parser.\nExample in JavaScript:</p>\n\n<pre><code>var str = '{ \"id\": \"626307\" ,\"t\" : \".INX\" ,\"e\" : \"INDEXSP\" ,\"l\" : \"2,050.59\" ,\"l_fix\" : \"2050.59\" ,\"l_cur\" : \"2,050.59\" ,\"s\": \"0\" ,\"ltt\":\"3:08PM EST\" ,\"lt\" : \"Nov 17, 3:08PM EST\" ,\"lt_dts\" : \"2015-11-17T15:08:33Z\" ,\"c\" : \"-2.60\" ,\"c_fix\" : \"-2.60\" ,\"cp\" : \"-0.13\" ,\"cp_fix\" : \"-0.13\" ,\"ccol\" : \"chr\" ,\"pcls_fix\" : \"2053.19\" }';\nvar parsedStr = JSON.parse(str);\nalert(parsedStr.l_fix);\n</code></pre>\n\n<p>Other languages also has JSON parser.</p>\n"}], "is_answered": true, "answer_count": 2, "score": 2, "last_activity_date": 1592942307, "creation_date": 1447858950, "question_id": 33783429, "title": "regex for json key value", "body": "<p>Hi i'm new to regex and i'm trying to grab the value after <code>l_fix</code> in the following json:</p>\n\n<pre><code>{ \"id\": \"626307\" ,\"t\" : \".INX\" ,\"e\" : \"INDEXSP\" ,\"l\" : \"2,050.59\" ,\"l_fix\" : \"2050.59\" ,\"l_cur\" : \"2,050.59\" ,\"s\": \"0\" ,\"ltt\":\"3:08PM EST\" ,\"lt\" : \"Nov 17, 3:08PM EST\" ,\"lt_dts\" : \"2015-11-17T15:08:33Z\" ,\"c\" : \"-2.60\" ,\"c_fix\" : \"-2.60\" ,\"cp\" : \"-0.13\" ,\"cp_fix\" : \"-0.13\" ,\"ccol\" : \"chr\" ,\"pcls_fix\" : \"2053.19\" }\n</code></pre>\n\n<p>right now i'm using <code>\\d[,](?:\\d*\\.)?\\d+</code>\nhowever this seems a bit brute force and i'm sure it can be done better.</p>\n"}
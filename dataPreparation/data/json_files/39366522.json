{"tags": ["json", "regex", "r"], "comments": [{"score": 0, "creation_date": 1473241751, "post_id": 39366522, "comment_id": 66061472, "body": "Can&#39;t you read this in a similar manner <a href=\"http://stackoverflow.com/questions/24183007/is-it-possible-to-read-geojson-or-topojson-file-in-r-to-draw-a-choropleth-map\">to this</a>?"}, {"score": 0, "creation_date": 1473245026, "post_id": 39366522, "comment_id": 66063495, "body": "@RomanLu\u0161trik unfortunately not. The json output just have those polylines encoded as a field, you need to decode it later and only then reach the coordinates.This json is not a spatial data file. I tried the solutions proposed there, but it didn&#39;t worked. thanks."}, {"score": 0, "creation_date": 1473247039, "post_id": 39366522, "comment_id": 66064811, "body": "a <code>dput(out)</code> would help to reproduce the error. As it&#39;s hard to create a bad string from scratch."}, {"score": 0, "creation_date": 1473252550, "post_id": 39366522, "comment_id": 66068694, "body": "@Tensibai Sorry for my ignorance, but do I attach, or better what is the &quot;right&quot; way to attach/bring the dput(out) here?"}, {"score": 1, "creation_date": 1473252749, "post_id": 39366522, "comment_id": 66068855, "body": "Did you run the command ? A copy paste here should do, I&#39;m unsure it will be usable, but worth trying. That said, SymbolixAU answer sounds the way to go (calling fromJSON on the url)"}, {"score": 0, "creation_date": 1473254094, "post_id": 39366522, "comment_id": 66069873, "body": "@Tensibai I have edited the question to include the code for the json output."}, {"score": 2, "creation_date": 1473281005, "post_id": 39366522, "comment_id": 66085274, "body": "You should note that while it&#39;s possible to make calls to Google&#39;s API without a key (for backwards compatibility), they now state that <a href=\"https://developers.google.com/maps/documentation/directions/get-api-key\" rel=\"nofollow noreferrer\">&quot;all Google Maps Directions API applications require authentication&quot;</a>"}], "answers": [{"comments": [{"score": 0, "creation_date": 1473252961, "post_id": 39368664, "comment_id": 66069037, "body": "Thanks, but I&#39;ve got to decode overview_polyline$points already, the issue came as I tried to flatten the directions output from google maps api to a data frame. And jsonlite gives the error displayed in the question &quot;fromJSON(out) Error: lexical error: inside a string,&quot;.  Apparently it doesn&#39;t handle the &quot;unexpected scaped sequences&quot;, but RJSONIO does."}, {"score": 1, "creation_date": 1473254763, "post_id": 39368664, "comment_id": 66070343, "body": "@jcarlos try <code>jsonlite::fromJSON(callUrl)</code>"}, {"score": 0, "creation_date": 1473255481, "post_id": 39368664, "comment_id": 66070844, "body": "@Tensibai  Sorry for the ignorance, again. So should I grant this answer as the correct?"}, {"score": 1, "creation_date": 1473255841, "post_id": 39368664, "comment_id": 66071096, "body": "@jcarlos I think so"}], "score": 2, "last_activity_date": 1473248151, "last_edit_date": 1473248151, "answer_id": 39368664, "question_id": 39366522, "body": "<p>If you're using Google Maps API then my <code>googleway</code> package handles this for you</p>\n\n<pre><code>library(googleway)\n\n## your valid Google API key\nkey &lt;- read.dcf(\"~/Documents/.googleAPI\", fields = \"GOOGLE_API_KEY\")\n\ndirections &lt;- google_directions(origin = \"Melbourne International Airport, Melbourne, Austrlia\",\n                                destination = \"MCG, Melbourne, Australia\",\n                                key = key)\n\n## and to decode the polyline:\ndf_route &lt;- decode_pl(directions$routes$overview_polyline$points)\nhead(df_route)\n#         lat      lon\n# 1 -37.67477 144.8494\n# 2 -37.67473 144.8494\n# 3 -37.67417 144.8493\n# 4 -37.67411 144.8493\n# 5 -37.67409 144.8494\n# 6 -37.67409 144.8495\n</code></pre>\n\n<p>Alternatively, if you want to do this yourself, you're better off using the <code>jsonlite</code> package: <code>jsonlite::fromJSON(your_url)</code> to read the JSON directly.</p>\n"}], "is_answered": true, "answer_count": 1, "score": 2, "last_activity_date": 1473254044, "creation_date": 1473241563, "question_id": 39366522, "title": "How to escape backslash just in some parts of a string - R", "body": "<p>I'm trying to use jsonlite to flatten the results from google maps directions api.</p>\n\n<p>The results are in json format and they have some sections like these here:</p>\n\n<pre><code>\\\"polyline\\\" : {\\n                        \\\"points\\\"\n : \\\"xdyQtaqmJb@Ab@?|@AfBAtA?l@At@@D?F?D?\\\"\\n        \n             },\\n                    \n \\\"start_location\\\" : {\\n                       \n \\\"lat\\\" : -3.0831712,\\n \n\n\n\\\"polyline\\\" : {\\n                        \\\"points\\\"\n :\n \\\"b}yQ`iqmJFD@@?@@@?@?@?@?B?@?@CXAPAJATCZ?@?@?@?@@@?\n @@B@@@?@@@@@?@?@?@?bBH\\\"\\n                     },\\n \n                    \\\"start_location\\\" : {\\n    \n</code></pre>\n\n<p>in most of then I have \"\\\" inside the coding for points which in turn makes jsonlite to crash with the error</p>\n\n<pre><code>&gt; fromJSON(out)\nError: lexical error: inside a string, '\\' occurs before a character which it may not.\n               \"points\" : \"rsuQnzomJhBD\\@lAF\"                      }, \n                     (right here) ------^\n</code></pre>\n\n<p>I need some directions on how to double escape \\ just inside the pair of double quotes after  <code>\\\"points\\\" : \\</code></p>\n\n<p>Here the code I use to get the json output</p>\n\n<pre><code>  origin=\"-3.06010901,-60.04375624\"\n  destination=\"-3.0876276,-60.06031519\" \n  mode=\"walking\"\n  units=\"metric\"\n  language=\"en-EN\"\n\n  baseURL &lt;- \"https://maps.googleapis.com/maps/api/directions/json?\"\n  callURL &lt;- paste0(baseURL,\"origin=\", origin, \n                             \"&amp;destination=\", destination,\n                             \"&amp;units=\", tolower(units),\n                             \"&amp;mode=\", tolower(mode),\n                             \"&amp;language=\",language)\n\n  tmout=10\n  opts = RCurl::curlOptions(connecttimeout=tmout)\n  out &lt;- RCurl::getURL(callURL, .opts = opts)\n</code></pre>\n\n<p>Well, I still don't have an easy answer to flatten this output to a data frame, but with the examples from this post [A biased comparsion of JSON packages in R] I've got to retrive the output with <code>RJSONIO::fromJSON(jsonOutput,unexpected.escape = \"keep\")</code> </p>\n\n<p><a href=\"https://rstudio-pubs-static.s3.amazonaws.com/31702_9c22e3d1a0c44968a4a1f9656f1800ab.html\" rel=\"nofollow\">1</a></p>\n\n<p>Thanks</p>\n"}
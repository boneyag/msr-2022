{"tags": ["regex", "swift"], "answers": [{"score": 0, "last_activity_date": 1424272949, "answer_id": 28587147, "question_id": 28586929, "body": "<p>Looks like your regex name is wrong. You declare it as <code>regEx</code> but in your <code>NSPredicate</code> you use <code>emailRegEx</code>.</p>\n"}, {"score": 3, "last_activity_date": 1424274507, "answer_id": 28587738, "question_id": 28586929, "body": "<p>I recommend using the <code>NSRegularExpression</code> class instead of <code>NSPredicate</code>.  The format for the regular expressions is from the <a href=\"http://userguide.icu-project.org/strings/regexp\" rel=\"nofollow\">ICU</a>.</p>\n\n<p>Here is one way to do it:</p>\n\n<pre><code>let pattern = \"(\\\\+[a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\\\.[a-zA-Z0-9._-]+)\"\nlet regexp = NSRegularExpression(pattern: pattern, options: NSRegularExpressionOptions.CaseInsensitive, error: nil)\n\nlet str = \"+abc@gmail.com heyyyyy cool +def@gmail.com\" as NSString\n\nvar results = [String]()\nregexp?.enumerateMatchesInString(str, options: NSMatchingOptions(0), range: NSRange(location: 0, length: str.length), usingBlock: { (result: NSTextCheckingResult!, _, _) in\n    results.append(str.substringWithRange(result.range))\n})\n\n// Gives [+abc@gmail.com, +def@gmail.com]\n</code></pre>\n"}, {"score": 3, "last_activity_date": 1624287580, "last_edit_date": 1624287580, "answer_id": 39139118, "question_id": 28586929, "body": "<p>These code worked for me. You can checkout email regex from <a href=\"http://emailregex.com/\" rel=\"nofollow noreferrer\">here</a>.</p>\n<p><strong>SWIFT 5</strong></p>\n<pre><code>func extractEmailAddrIn(text: String) -&gt; [String] {\n    var results = [String]()\n\n    let emailRegex = &quot;[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,6}&quot;\n    let nsText = text as NSString\n    do {\n        let regExp = try NSRegularExpression(pattern: emailRegex, options: .caseInsensitive)\n        let range = NSMakeRange(0, text.count)\n        let matches = regExp.matches(in: text, options: .reportProgress, range: range)\n\n        for match in matches {\n            let matchRange = match.range\n            results.append(nsText.substring(with: matchRange))\n        }\n    } catch (let error) {\n        print(error)\n    }\n\n    return results\n}\n</code></pre>\n<p><strong>SWIFT 3</strong></p>\n<pre><code>func extractEmailAddrIn(text: String) -&gt; [String] {\n    var results = [String]()\n    \n    let emailRegex = &quot;[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,6}&quot;\n    let nsText = text as NSString\n    do {\n        let regExp = try NSRegularExpression(pattern: emailRegex, options: NSRegularExpressionOptions.CaseInsensitive)\n        let range = NSMakeRange(0, text.characters.count)\n        let matches = regExp.matchesInString(text, options: .ReportProgress, range: range)\n        \n        for match in matches {\n            let matchRange = match.range\n            results.append(nsText.substringWithRange(matchRange))\n        }\n        \n    } catch _ { \n    }\n    \n    return results\n}\n</code></pre>\n"}, {"score": 0, "last_activity_date": 1472596443, "answer_id": 39238109, "question_id": 28586929, "body": "<p>Do you need the plus sign in the mail address?</p>\n\n<p><strong>Without + sign in the address:</strong></p>\n\n<p><code>([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\\\.[a-zA-Z0-9._-]+)</code></p>\n\n<p>Result: [\"abc@gmail.com\", \"def@gmail.com\"]</p>\n\n<p><strong>With + sign in the address:</strong></p>\n\n<p><code>([\\\\+a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\\\.[a-zA-Z0-9._-]+)</code></p>\n\n<p>Result: [\"+abc@gmail.com\", \"+def@gmail.com\"]</p>\n"}, {"comments": [{"score": 0, "creation_date": 1617830309, "post_id": 53189483, "comment_id": 118420663, "body": "why the  <code>.replacingOccurrences(of: &quot;&quot;, with: &quot;&quot;)</code>"}], "score": 0, "last_activity_date": 1619139331, "last_edit_date": 1619139331, "answer_id": 53189483, "question_id": 28586929, "body": "<p>Here is the String extensions I have created to extract emails from It works well in swift 4.</p>\n<pre><code> extension String {    \n  func getEmails() -&gt; [String] {\n    if let regex = try? NSRegularExpression(pattern: &quot;[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,6}&quot;, options: .caseInsensitive)\n    {\n        let string = self as NSString\n        \n        return regex.matches(in: self, options: [], range: NSRange(location: 0, length: string.length)).map {\n            string.substring(with: $0.range).lowercased()\n        }\n    }\n    return []\n  }\n}\n</code></pre>\n<p><strong>Usage</strong></p>\n<pre><code>let test = &quot;Precision Construction John Smith cONSTRUCTION WORKER 123 Main St, Ste. 30o \nwww.precsioncontructien.com adil@gmail.com fraz@gmail.pk janesmit@precisiencenstruction.com 555.555.5SS5&quot;\n            let emails = test.getEmails()\n print(emails)\n</code></pre>\n<p>// results [&quot;adil@gmail.com&quot;, &quot;fraz@gmail.pk&quot;, &quot;janesmit@precisiencenstruction.com&quot;]</p>\n"}], "is_answered": true, "answer_count": 5, "score": 1, "last_activity_date": 1624287580, "creation_date": 1424272347, "question_id": 28586929, "title": "How to extract all email address from text in swift", "body": "<p>I have a text</p>\n\n<p>var txt = \"+abc@gmail.com heyyyyy cool +def@gmail.com\"</p>\n\n<p>I want to extract the email address from the text and store it in an array. I want to do it with regular expression. I found the regular expression, but i am not able to save the email in to an array.</p>\n\n<p>i tried </p>\n\n<pre><code>let regEx = \"/(\\\\+[a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\\\.[a-zA-Z0-9._-]+)/gi\"\nif let email = NSPredicate(format: \"SELF MATCHES %@\", regEx) {\n        //what to do here\n}\n</code></pre>\n\n<p>Or am i doing wrong?\nI know this is a basic question. Please help</p>\n\n<p>Thanks in advance.</p>\n"}
{"tags": ["python", "regex"], "answers": [{"comments": [{"score": 0, "creation_date": 1529806490, "post_id": 51006400, "comment_id": 89006187, "body": "Downvoter? Can you let me know whether this doesn&#39;t work, or something else?"}], "score": 3, "last_activity_date": 1529805912, "answer_id": 51006400, "question_id": 51006347, "body": "<p>Use <code>re.sub</code> with a callback that performs the actual replacement:</p>\n\n<pre><code>import re\n\nlist_of_strings = [...]\n\np = re.compile('^ +')\nfor i, l in enumerate(list_of_strings): \n    list_of_strings[i] = p.sub(lambda x: x.group().replace(' ', '&amp;nbsp;'), l)\n</code></pre>\n\n<p></p>\n\n<pre><code>print(list_of_strings)\n['&amp;nbsp;1 white space before string',\n '&amp;nbsp;&amp;nbsp;2 white spaces before string',\n '&amp;nbsp;&amp;nbsp;&amp;nbsp;3 white spaces before string'\n]\n</code></pre>\n\n<p>The pattern used here is <code>'^ +'</code> and will search for, and replace whitespaces as long as they're at the start of your string.</p>\n"}, {"comments": [{"score": 0, "creation_date": 1529806671, "post_id": 51006417, "comment_id": 89006210, "body": "Nice idea) but I do not exclude that some whitespaces can be at the end of some line also"}, {"score": 2, "creation_date": 1529806741, "post_id": 51006417, "comment_id": 89006217, "body": "@MaxCore Whitespace at the end of the line is fine, <code>lstrip</code> will only trim from the left side/leading edge of the string.  My qualification of &quot;<i>If you know it&#39;s just spaces as leading whitespace</i>&quot; was trying to point out that it will also strip and replace non-space whitespace characters (tabs, newlines, etc)."}], "score": 2, "last_activity_date": 1529806100, "answer_id": 51006417, "question_id": 51006347, "body": "<p>If you know it's just spaces as leading whitespace, you could do something like this:</p>\n\n<pre><code>l = '&amp;nbsp;' * (len(l) - len(l.lstrip())) + l.lstrip()\n</code></pre>\n\n<p>Not the most efficient though.  This would be a bit better:</p>\n\n<pre><code>stripped = l.strip()\nl = '&amp;nbsp;' * (len(l) - len(stripped)) + stripped\nprint(l)\n</code></pre>\n\n<p>It's one way to do it without the <code>re</code> overhead.</p>\n\n<p>For example:</p>\n\n<pre><code>lines = [\n    ' 1 white space before string',\n    '  2 white spaces before string',\n    '   3 white spaces before string',\n]\n\nfor l in lines:\n    stripped = l.strip()\n    l = '&amp;nbsp;' * (len(l) - len(stripped)) + stripped\n    print(l)\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>&amp;nbsp;1 white space before string\n&amp;nbsp;&amp;nbsp;2 white spaces before string\n&amp;nbsp;&amp;nbsp;&amp;nbsp;3 white spaces before string\n</code></pre>\n"}], "is_answered": true, "answer_count": 2, "score": 2, "last_activity_date": 1529806100, "creation_date": 1529804932, "question_id": 51006347, "title": "Python: match and replace all whitespaces at the beginning of each line", "body": "<p>I need to convert text like this:</p>\n\n<pre><code>' 1 white space before string'\n'  2 white spaces before string'\n'   3 white spaces before string'\n</code></pre>\n\n<p>Into a:</p>\n\n<pre><code>'&amp;nbsp;1 white space before string'\n'&amp;nbsp;&amp;nbsp;2 white spaces before string'\n'&amp;nbsp;&amp;nbsp;&amp;nbsp;3 white spaces before string'\n</code></pre>\n\n<p>Whitespaces between words and at the end of the line should not be matched, only at the beginning. Also, no need to match tabs. Big thx for help</p>\n"}
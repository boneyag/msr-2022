{"tags": ["javascript", "php", "json", "laravel"], "answers": [{"comments": [{"score": 1, "creation_date": 1442834292, "post_id": 32693723, "comment_id": 53230733, "body": "Yep {!! $users !!} worked @JoelHinz which means that i can use this as a json file right?"}, {"score": 0, "creation_date": 1442835466, "post_id": 32693723, "comment_id": 53231412, "body": "Sure. And if you ever want to send just json in the response, no html or javascript or anything, have a look at <a href=\"http://laravel.com/docs/5.1/responses#json-responses\" rel=\"nofollow noreferrer\">laravel.com/docs/5.1/responses#json-responses</a> :)"}, {"score": 0, "creation_date": 1442835685, "post_id": 32693723, "comment_id": 53231555, "body": "any Idea on how to store {!! $user !!} output  in an array and convert in into associative array further?"}, {"score": 1, "creation_date": 1442843813, "post_id": 32693723, "comment_id": 53237320, "body": "Should work just tacking on <code>-&gt;toArray()</code> after the <code>get()</code> call."}, {"score": 0, "creation_date": 1480848827, "post_id": 32693723, "comment_id": 69124887, "body": "You&#39;ve saved one life!"}, {"score": 0, "creation_date": 1599133718, "post_id": 32693723, "comment_id": 112683009, "body": "Nice xss vulnerability, now you can use <code>@json($users)</code>"}], "score": 64, "last_activity_date": 1442833837, "answer_id": 32693723, "question_id": 32693688, "body": "<p>You're escaping the data with <code>{{ }}</code> automatically in Laravel 5. Use <code>{!! $users !!}</code> instead.</p>\n"}, {"comments": [{"score": 0, "creation_date": 1539188953, "post_id": 52744430, "comment_id": 92414223, "body": "It would be nice, if you shows exactly how this code should be after the implementation you suggested. This will improve your answer."}, {"score": 0, "creation_date": 1599894921, "post_id": 52744430, "comment_id": 112921937, "body": "Can you pinpoint me to the right link, I cant find the documentation.."}], "score": 3, "last_activity_date": 1539187374, "answer_id": 52744430, "question_id": 32693688, "body": "<p>in new laravel version you can use now @json($users)</p>\n"}, {"score": 0, "last_activity_date": 1618755004, "answer_id": 67149504, "question_id": 32693688, "body": "<h3>Rendering JSON</h3>\n<p>Sometimes you may pass an array to your view with the intention of rendering it as <em>JSON</em> in order to initialize a <em>JavaScript</em> variable. For example:</p>\n<pre class=\"lang-php prettyprint-override\"><code>&lt;script&gt;\n    var app = &lt;?php echo json_encode($array); ?&gt;;\n&lt;/script&gt;\n</code></pre>\n<p>However, instead of manually calling <code>json_encode</code>, you may use the <code>@json</code> Blade directive. The <code>@json</code> directive accepts the same arguments as PHP's <code>json_encode</code> function. By default, the <code>@json</code> directive calls the <code>json_encode</code> function with the <code>JSON_HEX_TAG</code>, <code>JSON_HEX_APOS</code>, <code>JSON_HEX_AMP</code>, and <code>JSON_HEX_QUOT</code> flags:</p>\n<pre class=\"lang-php prettyprint-override\"><code>&lt;script&gt;\n    var app = @json($array);\n\n    var app = @json($array, JSON_PRETTY_PRINT);\n&lt;/script&gt;\n</code></pre>\n<blockquote>\n<p>You should only use the <code>@json</code> directive to render existing variables as JSON. The Blade templating is based on regular expressions and attempts to pass a complex expression to the directive may cause unexpected failures.</p>\n</blockquote>\n<p>Source: <a href=\"https://laravel.com/docs/8.x/blade#rendering-json\" rel=\"nofollow noreferrer\">documentation</a></p>\n"}], "is_answered": true, "answer_count": 3, "score": 25, "last_activity_date": 1618755004, "creation_date": 1442833721, "question_id": 32693688, "title": "Remove &amp;quot from json using laravel", "body": "<p>Hello I wanted to know how to use blade variable in javascript.\nhere is my query in laravel</p>\n\n<pre><code>$users=json_encode(DB::table('ledger')-&gt;select('name','openingbalance')-&gt;get());\n</code></pre>\n\n<p>I'm trying to access this in my javascript file like shown below </p>\n\n<pre><code>var users =\"{{ $users }}\";\n</code></pre>\n\n<p>and I get output as shown below:</p>\n\n<pre><code>[\n      {&amp;quot;name&amp;quot;:&amp;quot;Harsh&amp;quot;,&amp;quot;openingbalance&amp;quot;:&amp;quot;5755.00&amp;quot;},      \n      {&amp;quot;name&amp;quot;:&amp;quot;Harh&amp;quot;,&amp;quot;openingbalance&amp;quot;:&amp;quot;-12000.00&amp;quot;},\n      {&amp;quot;name&amp;quot;:&amp;quot;gfgfhgf&amp;quot;,&amp;quot;openingbalance&amp;quot;:&amp;quot;-333.00&amp;quot;}\n]\n</code></pre>\n\n<p>I wanted to know how to remove &amp;quot so i get a perfect json to use.</p>\n"}
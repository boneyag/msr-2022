{"tags": ["python", "django", "graphql", "graphene-python"], "answers": [{"score": 2, "last_activity_date": 1512251251, "answer_id": 47612937, "question_id": 47585568, "body": "<p>Figured my own problem.</p>\n\n<p>There are three things, which are <code>Argument</code> should be <code>Arguments</code> and under the <code>mutate</code> function, I should use a regular django create model so from <code>product = Product(barcode=barcode)</code> into <code>product = Product.objects.create(barcode=barcode)</code> last but not least <code>class ProductMutation(graphene.AbstractType):</code> should be <code>class ProductMutation(graphene.ObjectType):</code></p>\n\n<p>so the code should be</p>\n\n<pre><code>class ProductType(DjangoObjectType):\n    class Meta:\n        model = Product\n        filter_fields = {'description': ['icontains']}\n        interfaces = (graphene.relay.Node,)\n\n\nclass CreateProduct(graphene.Mutation):\n    class Arguments:    # change here\n        barcode = graphene.String()\n\n    product = graphene.Field(lambda: ProductType)\n\n    def mutate(self, info, barcode):\n        # change here\n        # somehow the graphene documentation just state the code I had in my question which doesn't work for me.  But this one does\n        product = Product.objects.create(barcode=barcode)\n        return CreateProduct(product=product)\n\n\nclass ProductMutation(graphene.ObjectType):  # change here\n    create_product = CreateProduct.Field()\n\nclass ProductQuery(object):\n    product = relay.Node.Field(ProductType)\n    all_products = DjangoFilterConnectionField(ProductType)\n\n    def resolve_all_products(self, info, **kwargs):\n        return Product.objects.all()\n</code></pre>\n"}], "is_answered": true, "answer_count": 1, "score": 0, "last_activity_date": 1512251251, "creation_date": 1512093734, "question_id": 47585568, "title": "mutation error, Unknown argument \\&quot;barcode\\&quot; on field \\&quot;createProduct\\&quot; of type \\&quot;Mutation\\&quot; - django", "body": "<p>I am doing tutorials online and trying to make <code>mutation</code> works on <code>graphql</code> but I kept on getting errors which I have no idea what where the real error comes from and how to start debugging where I have done wrong.</p>\n\n<p>looking at this youtube for mutation\n<a href=\"https://www.youtube.com/watch?v=aB6c7UUMrPo&amp;t=1962s\" rel=\"nofollow noreferrer\">https://www.youtube.com/watch?v=aB6c7UUMrPo&amp;t=1962s</a>\nand the graphene documentation <a href=\"http://docs.graphene-python.org/en/latest/types/mutations/\" rel=\"nofollow noreferrer\">http://docs.graphene-python.org/en/latest/types/mutations/</a></p>\n\n<p>I noticed that because of different graphene version, that is why I have reading the documentation instead of following exactly as the <code>youtube</code></p>\n\n<p>I got things setup but then couldn't get it to work, when I execute the mutation query I get error.</p>\n\n<p>I have a model like this.</p>\n\n<pre><code>class Product(models.Model):\n    sku = models.CharField(max_length=13, help_text=\"Enter Product Stock Keeping Unit\", null=True, blank=True)\n    barcode = models.CharField(max_length=13, help_text=\"Enter Product Barcode (ISBN, UPC ...)\", null=True, blank=True)\n\n    title = models.CharField(max_length=200, help_text=\"Enter Product Title\", null=True, blank=True)\n    description = models.TextField(help_text=\"Enter Product Description\", null=True, blank=True)\n\n    unitCost = models.FloatField(help_text=\"Enter Product Unit Cost\", null=True, blank=True)\n    unit = models.CharField(max_length=10, help_text=\"Enter Product Unit \", null=True, blank=True)\n\n    quantity = models.FloatField(help_text=\"Enter Product Quantity\", null=True, blank=True)\n    minQuantity = models.FloatField(help_text=\"Enter Product Min Quantity\", null=True, blank=True)\n\n    family = models.ForeignKey('Family', null=True, blank=True)\n    location = models.ForeignKey('Location', null=True, blank=True)\n\n    def __str__(self):\n        return self.title\n</code></pre>\n\n<p>I have this for my Product <code>schema</code></p>\n\n<pre><code>class ProductType(DjangoObjectType):\n    class Meta:\n        model = Product\n        filter_fields = {'description': ['icontains']}\n        interfaces = (graphene.relay.Node,)\n\n\nclass CreateProduct(graphene.Mutation):\n    class Argument:\n        barcode = graphene.String()\n\n    # form_errors = graphene.String()\n    product = graphene.Field(lambda: ProductType)\n\n    def mutate(self, info, barcode):\n        product = Product(barcode=barcode)\n        return CreateProduct(product=product)\n\n\nclass ProductMutation(graphene.AbstractType):\n    create_product = CreateProduct.Field()\n\nclass ProductQuery(object):\n    product = relay.Node.Field(ProductType)\n    all_products = DjangoFilterConnectionField(ProductType)\n\n    def resolve_all_products(self, info, **kwargs):\n        return Product.objects.all()\n</code></pre>\n\n<p>global schema looks like this</p>\n\n<pre><code>class Mutation(ProductMutation,\n               graphene.ObjectType):\n    pass\n\n\nclass Query(FamilyQuery,\n            LocationQuery,\n            ProductQuery,\n            TransactionQuery,\n\n            graphene.ObjectType):\n    # This class extends all abstract apps level Queries and graphene.ObjectType\n    pass\n\n\nallGraphQLSchema = graphene.Schema(query=Query, mutation=Mutation)\n</code></pre>\n\n<p>as for trying out the querying...this is my query</p>\n\n<pre><code>mutation ProductMutation {\n  createProduct(barcode:\"abc\"){\n    product {\n      id, unit, description\n    }\n  }\n}\n</code></pre>\n\n<p>error returned</p>\n\n<pre><code>{\n  \"errors\": [\n    {\n      \"message\": \"Unknown argument \\\"barcode\\\" on field \\\"createProduct\\\" of type \\\"Mutation\\\".\",\n      \"locations\": [\n        {\n          \"column\": 17,\n          \"line\": 2\n        }\n      ]\n    }\n  ]\n}\n</code></pre>\n\n<p>Can someone please give me a hand on what I should try and do?</p>\n\n<p>Thanks in advance for any help</p>\n"}
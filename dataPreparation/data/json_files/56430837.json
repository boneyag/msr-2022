{"tags": ["python", "json"], "comments": [{"score": 1, "creation_date": 1559577806, "post_id": 56430837, "comment_id": 99456238, "body": "Post the code you have tried, and what <i>specific</i> problem(s) you have with it."}], "answers": [{"comments": [{"score": 0, "creation_date": 1559580622, "post_id": 56431453, "comment_id": 99457559, "body": "But would it be possible to obtain the same result without knowing the names of the dictionnaries and only the name of the value you are looking for in the file: <code>&quot;width&quot;</code>?"}, {"score": 0, "creation_date": 1559582254, "post_id": 56431453, "comment_id": 99458234, "body": "Yes. I edited my answer to give a general idea of what needs to be done. It may need you to fix it to fit the exact json data you have in the file."}, {"score": 1, "creation_date": 1559584665, "post_id": 56431453, "comment_id": 99459238, "body": "Thank you @ollie-in-pgh! It works just fine with my file!"}], "score": 1, "last_activity_date": 1559582210, "last_edit_date": 1559582210, "answer_id": 56431453, "question_id": 56430837, "body": "<p>This is a dictionary nested in a dictionary nested in a dictionary. You have to recursively flatten the dictionaries until you find what you're looking for.</p>\n\n<pre><code>import json\n\n\nfilename = 'run_params.json'\n\n\ndef flatten(d):\n    for k, v in d.items():\n        if isinstance(v, dict):\n            if 'width' in v.keys():\n                return v['width']\n            else:\n                return flatten(v)\n\n\nwith open(filename, 'r+') as f:\n    data  = json.load(f)\n    found_it = flatten(data)\n    print(found_it)\n</code></pre>\n"}], "is_answered": true, "answer_count": 1, "score": 1, "last_activity_date": 1559582210, "creation_date": 1559577574, "question_id": 56430837, "title": "Accessing and replacing sub-categories objects in a json", "body": "<p>I would like to have a method in python to find any object, for which I know the name, at any hierachical level in a json.</p>\n\n<p>For now, I am trying to find and replace the value of an object in the following json:</p>\n\n<pre><code>{\n\"world\": {\n    \"soil\": {\n        \"obstacleDirectory\": \"obstacle\",\n        \"dimensions\": {\n            \"width\": \"100\",\n            \"length\": \"100\",\n            \"depth\": \"1\",\n            \"cellSize\": \"10\"\n        },\n</code></pre>\n\n<p>I am able to access the first category, <code>\"world\":</code>, or print the whole file but I cannot find the object <code>\"width\":</code> inside the file using a for loop:</p>\n\n<pre><code>filename = 'run_params.json'\n\nwith open(filename, 'r+') as f:\n    data  = json.load(f)\n\n    for value in data.items():\n        print value\n        if \"width\" == data.keys():\n             print \"width found!\"\n\n\n</code></pre>\n\n<p>I am simply unable to find the <code>\"width\"</code> object in the json file.</p>\n\n<p>Would you have any suggestions as to what type of function, in python, I should use to obtain such a method?</p>\n"}
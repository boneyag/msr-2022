{"tags": ["python", "django", "superagent"], "comments": [{"score": 0, "creation_date": 1459343328, "post_id": 36309788, "comment_id": 60242899, "body": "Please add your <code>view</code>-method behind <code>&#47;url</code>. I assume, you have a redirect there from <code>&#47;url</code> to <code>&#47;ru&#47;url</code> what the status code <code>302</code> indicates. Or is <code>ru</code> a language code and you are using any language package in django which adds the language to the url?"}, {"score": 0, "creation_date": 1459343429, "post_id": 36309788, "comment_id": 60242978, "body": "Post the code for the view that&#39;s handling the first request. It&#39;s redirecting you to the second URL."}, {"score": 0, "creation_date": 1459343851, "post_id": 36309788, "comment_id": 60243325, "body": "I have made some corrections to my question. Yes, @omeinusch, <code>ru</code> is a language code, and redirection occurs in projects <code>urls.py</code>, here exactly <code>urlpatterns += 18n_patterns(   url(r&#39;^&#39;, include(&#39;app.urls&#39;)))</code>."}, {"score": 0, "creation_date": 1459344576, "post_id": 36309788, "comment_id": 60243921, "body": "show the view code which is handling the redirects"}, {"score": 0, "creation_date": 1459345411, "post_id": 36309788, "comment_id": 60244605, "body": "@sehrob How do you know that it is not a POST? You are only checking if there is a variable named <code>name</code> in the POST request. Try checking with <code>if request.method == &#39;POST&#39;:</code> first to make sure."}, {"score": 0, "creation_date": 1459346585, "post_id": 36309788, "comment_id": 60245636, "body": "@Selcuk This can be deduced from the server log where it states that the first (<code>POST</code>) request is redirected and the second is a <code>GET</code> request"}, {"score": 0, "creation_date": 1459346653, "post_id": 36309788, "comment_id": 60245708, "body": "@TimSchneider You are right. It is probably the redirection then."}], "answers": [{"comments": [{"score": 0, "creation_date": 1460012848, "post_id": 36310440, "comment_id": 60548914, "body": "<code>request.post(&#39;&#47;ru&#47;nameofview&#47;&#39;)</code> did the trick! Thank you very much @Tim Schneider!  Thank you @omeinusch too!"}], "score": 1, "last_activity_date": 1459344805, "answer_id": 36310440, "question_id": 36309788, "body": "<p>Mounir seems to be on the right track. However the trailing <code>/</code> does not seem to be the problem. Instead, Django is adding a <code>/ru</code> to the front of the requested URL. Could <code>ru</code> possibly be the descriptor for a language that you encode in your url? If so, try to call <code>request.post('/ru/nameofview/')</code>.</p>\n\n<p>On the other hand, superagent seems to call the redirects with a <code>GET</code> request instead of a <code>POST</code> so the <code>allow_redirects=True</code> function that Mounir proposed could also do the trick, though I am not familiar with that library.</p>\n"}], "is_answered": true, "answer_count": 1, "score": 1, "last_activity_date": 1459344805, "creation_date": 1459343205, "question_id": 36309788, "title": "Why I am getting a GET request on the django side while sending a POST request with superagent", "body": "<p>I am sending a POST request to the server application using <a href=\"https://visionmedia.github.io/superagent/\" rel=\"nofollow noreferrer\">superagent.js</a>. The request is sent to a <code>django</code> view. But I am getting a GET request on the view side.</p>\n\n<p>Here is my code where I am trying to send a request with <code>superagent</code>:</p>\n\n<pre><code>request.post('/nameofview')\n.set('Content-type', 'application/x-www-form-urlencoded')\n.set('X-CSRFToken', csrf)\n.send({name: 'name'})\n.end(callback)\n</code></pre>\n\n<p>These are logs from the <code>django</code> development server:</p>\n\n<pre><code>[30/Mar/2016 12:27:28] \"POST /nameofview HTTP/1.1\" 302 0\n[30/Mar/2016 12:27:28] \"GET /ru/nameofview HTTP/1.1\" 404(&lt;--Raising not found from within the view) 1696\n</code></pre>\n\n<p>So, <code>django</code> project url dispatcher is receiving a post request but then redirecting it to the application view as a get request. <strong>I don't have any problems with url matching. Execution enters view code, but it is a get request not a post and that's why I can't get the post data I have sent.</strong></p>\n\n<p>This is my view code:</p>\n\n<pre><code>def nameofview(request):\n    if 'name' in request.POST:\n        # make some staff\n        return JsonResponse({'result': result})\n    else:\n        raise Http404()\n</code></pre>\n\n<p>From this <a href=\"https://stackoverflow.com/questions/16789988/how-to-write-a-django-view-for-a-post-request\">post</a>, I figured out that I have to attach a csrftoken to my post request, and of course I did this as it is described <a href=\"https://docs.djangoproject.com/en/1.9/ref/csrf/#ajax\" rel=\"nofollow noreferrer\">here</a> without any success.</p>\n\n<p>So, my question is, why it is doing this and how can I make it not touch my post request?</p>\n\n<p><em>P.S. It works with get request without any problem.</em></p>\n"}
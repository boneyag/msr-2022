{"tags": ["c#", "javascript", ".net", "json", "asp.net-web-api"], "comments": [{"score": 0, "creation_date": 1408728302, "post_id": 25452449, "comment_id": 39714448, "body": "Have you tried debugging the server-side code?"}, {"score": 2, "creation_date": 1408728316, "post_id": 25452449, "comment_id": 39714458, "body": "<code>Internal Server Error</code> ... Start by posting the server code"}, {"score": 0, "creation_date": 1408728350, "post_id": 25452449, "comment_id": 39714469, "body": "Let&#39;s see your WebApi Controller/Method/Action. Most people mix up MVC and WebApi routing"}, {"score": 0, "creation_date": 1408728518, "post_id": 25452449, "comment_id": 39714549, "body": "Internal Server Error is about server side error. So you must show us your server side code."}, {"score": 0, "creation_date": 1408729035, "post_id": 25452449, "comment_id": 39714808, "body": "please show //my code ..."}, {"score": 0, "creation_date": 1408729819, "post_id": 25452449, "comment_id": 39715207, "body": "I have added the code"}], "answers": [{"comments": [{"score": 0, "creation_date": 1408728835, "post_id": 25452580, "comment_id": 39714696, "body": "I have added route config setting please guide what to do.?"}, {"score": 0, "creation_date": 1408728993, "post_id": 25452580, "comment_id": 39714783, "body": "I have this setting in web config"}, {"score": 0, "creation_date": 1408729201, "post_id": 25452580, "comment_id": 39714889, "body": "Ultimately, use the <code>querystring</code> method to get around the dot in the route"}, {"score": 0, "creation_date": 1408729296, "post_id": 25452580, "comment_id": 39714940, "body": "The thing is its working fine in local but wen the api is deployed and I try to use this, it is throwing error."}, {"score": 0, "creation_date": 1408729346, "post_id": 25452580, "comment_id": 39714969, "body": "Trust me - it is because of the <code>.</code> - you likely have a different setting on IIS than your local server."}, {"score": 0, "creation_date": 1408729431, "post_id": 25452580, "comment_id": 39715020, "body": "So what to do for &quot;.&quot; on IIS? And why the wrong email is hitting the method and correct email is not"}, {"score": 0, "creation_date": 1408730097, "post_id": 25452580, "comment_id": 39715363, "body": "What is the <code>wrong</code> email? - and per IIS, you need to compare. I don&#39;t mean to sound harsh, though I have let you know why it&#39;s failing (its most likely scenario) - why not try some of those fixes first?"}], "score": 0, "last_activity_date": 1408729121, "last_edit_date": 1408729121, "answer_id": 25452580, "question_id": 25452449, "body": "<p>Perhaps more of a comment.. .</p>\n\n<p>though the issue is with having the email in the route - it has a period <code>.</code> - this is throwing off your routing. i had the exact same issue on a previous project that had email addresses as ID's</p>\n\n<p>I would wager that when you try it with a bad email the bad string you're trying with doesn't have a period.</p>\n\n<p>Use a querystring, so 'api/BeerAppRetrieve?theemail=theactual@email.com`</p>\n\n<p>or change your route config to accept the period</p>\n\n<p>or you can replace certain characters in the email client side and change them back server side (worst case)</p>\n\n<p>As a <strong>super worst case</strong> you could add the following in your web.config (you should really avoid this otheriwse EVERY request on your site goes through the asp.net pipeline..</p>\n\n<pre><code>&lt;configuration&gt;\n    &lt;system.webServer&gt;\n        &lt;modules runAllManagedModulesForAllRequests=\"true\"&gt; &lt;!-- add this --&gt;\n</code></pre>\n\n<p><strong>Update</strong></p>\n\n<p>In your Javascript change:</p>\n\n<pre><code>var urll = 'api/BeerAppRetrieve';\n</code></pre>\n\n<p>to this</p>\n\n<pre><code>var urll = 'api/BeerAppRetrieve?emailAddress=anirudh1190@gmail.com';\n</code></pre>\n\n<p>And change your route back to</p>\n\n<pre><code>config.Routes.MapHttpRoute(\n    name: \"DefaultApi\",\n    routeTemplate: \"api/{controller}/{id}\",\n    defaults: new { id = RouteParameter.Optional }\n);\n</code></pre>\n\n<p>and change your API controller to</p>\n\n<pre><code>[EnableCors(\"*\", \"*\", \"GET, POST\")]\n  public IHttpActionResult GetForgotPassword(String id)\n  {\n    //my code\n  }\n</code></pre>\n"}], "is_answered": false, "answer_count": 1, "score": 0, "last_activity_date": 1628352360, "creation_date": 1408728183, "question_id": 25452449, "title": "Web Api giving error: 500 internal server error", "body": "<p><strong>Scenario:</strong></p>\n\n<p>I have an ASP WebAPI service that accept <code>email</code> <code>id</code> to retrieve the previous password.</p>\n\n<p>But I am having a problem that If I enter a valid <code>email</code> <code>Id</code> <code>\"Internal server error 500\"</code> is thrown but if a wrong <code>email</code> <code>Id</code> is entered, then Json with error message is returned.\n(If an invalid <code>email</code> <code>id</code> is entered, then I have a Json with error message returned)</p>\n\n<p>So can please any one guide what to do.</p>\n\n<pre><code>var urll = 'api/BeerAppRetrieve';\n   // var urll = 'api/BeerApp';\n    var emailId = \"anirudh1190@gmail.com\";\n    //$.getJSON(urll + '/' + data)\n    $.getJSON(urll, { \"emailId\": emailId })\n       .done(function (data) {\n       })\n       .fail(function (jqXHR, textStatus, err) {\n\n           alert(\"error\" + jqXHR.responseText);\n           $('#txtUserName').text('Error: ' + err);\n       });\n</code></pre>\n\n<p>My json call..\nI want the method to be hit if email id is valid also..\nPlease help...</p>\n\n<pre><code> config.Routes.MapHttpRoute(\n                name: \"DefaultApi1\",\n                routeTemplate: \"api/{controller}/{emailId}\",\n                defaults: new { emailId = RouteParameter.Optional }\n            );\n</code></pre>\n\n<p>My route config.</p>\n\n<pre><code>  [EnableCors(\"*\", \"*\", \"GET, POST\")]\n  public IHttpActionResult GetForgotPassword(String emailId)\n  {\n\n\n\n\nMailMessage MyMailMessage = new MailMessage();\n        MyMailMessage.From = new MailAddress(\"beersavo@gmail.com\");\n        MyMailMessage.To.Add(emailId);\n        MyMailMessage.Subject = \"Forgot Password\";\n        MyMailMessage.IsBodyHtml = true;\n        BeerAppUserClass beerAppDal = new BeerAppUserClass();\n        String passwrd = String.Empty;\n        try\n        {\n            passwrd = beerAppDal.GetUserPassword(emailId);\n        }\n\ncatch (Exception exw)\n{\n    return Json(new KeyValuePair&lt;String, String&gt;(\"MailSend\", exw.InnerException.Message));\n}\n\nif (!passwrd.Equals(String.Empty))\n{\n\n\nMyMailMessage.Body = \"&lt;table&gt;&lt;tr&gt;&lt;td&gt;\" + \"Login to the site with:&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;  UserName: &lt;/td&gt;&lt;td&gt;\" + emailId + \"&lt;/td&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt; Password:&lt;/td&gt;&lt;td&gt;\" + passwrd + \"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\";\n        SmtpClient SMTPServer = new SmtpClient(\"smtp.gmail.com\");\n        SMTPServer.Port = 587;\n        //SMTPServer.Host = \"smtpout.secureserver.net\";\n        SMTPServer.Credentials = new System.Net.NetworkCredential(\"email@gmail.com\", \"Password@321\");\n        SMTPServer.EnableSsl = true;\n        try\n        {\n            SMTPServer.Send(MyMailMessage);\n            return Json(new KeyValuePair&lt;String, String&gt;(\"MailSend\", \"true\"));\n        }\n\n        catch (Exception ex)\n        {\n\n\nreturn Json(newKeyValuePair&lt;String,String(\"MailSend\",ex.InnerException.Message));\n        }\n    }\n    return Json(new KeyValuePair&lt;String, String&gt;(\"MailSend\", \"empty\"));\n}\n  }\n</code></pre>\n\n<p>Action in the controller</p>\n"}
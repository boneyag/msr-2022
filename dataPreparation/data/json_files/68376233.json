{"tags": ["java", "json", "jackson", "jackson-databind"], "answers": [{"comments": [{"score": 0, "creation_date": 1626258983, "post_id": 68376372, "comment_id": 120843233, "body": "Ok. Any thoughts on custom deserializer"}], "score": 1, "last_activity_date": 1626258499, "answer_id": 68376372, "question_id": 68376233, "body": "<p>I don't think that it is possible to have some wrapper classes and expect Jackson to flatten and extract all of those fields from wrapper classes and map the flat JSON fields to them.</p>\n<p>Based on the <code>Details</code> class, Jackson expects having a JSON object like the below one (inner fields are omitted):</p>\n<pre><code>{\n  &quot;person&quot;: {},\n  &quot;address&quot;: {},\n  &quot;children&quot;: []\n}\n\n</code></pre>\n<p>So, you have to change the <code>Details</code> class to something like below:</p>\n<pre><code>public class Details {\n    @JsonProperty(&quot;first_name&quot;) \n    private String firstName;\n        \n    @JsonProperty(&quot;last_name&quot;)\n    private String lastName;\n        \n    @JsonProperty(&quot;age&quot;)\n    private Integer age;\n\n    ...\n}\n</code></pre>\n"}], "is_answered": true, "answer_count": 1, "score": 0, "last_activity_date": 1626258499, "creation_date": 1626257947, "question_id": 68376233, "title": "Not able to wrap JSON properties in a Custom Java Class in Jackson", "body": "<p>I have a JSON string that needs to be converted to JAVA Object. I need to wrap some fields into a different JAVA class. The problem I am facing I am not able to wrap it and I get the Java fields as null.\nPlease see below JSON</p>\n<pre><code>{\n    &quot;first_name&quot;: &quot;John&quot;,\n    &quot;last_name&quot;: &quot;DCosta&quot;,\n    &quot;age&quot;: &quot;29&quot;,\n    &quot;phone&quot;: &quot;+173341238&quot;,\n    &quot;address_line_1&quot;: &quot;43 Park Street&quot;,\n    &quot;address_line_2&quot;: &quot;Behind C21 Mall&quot;,\n    &quot;city&quot;: &quot;Cario&quot;,\n    &quot;country&quot;: &quot;UK&quot;,\n    &quot;child1&quot;: {\n        &quot;name&quot;: &quot;Peter&quot;,\n        &quot;age&quot;: &quot;5&quot;\n    },\n    &quot;child2&quot;: {\n        &quot;name&quot;: &quot;Paddy&quot;,\n        &quot;age&quot;: &quot;2&quot;\n    },\n    &quot;child3&quot;: {\n        &quot;name&quot;: &quot;Premus&quot;,\n        &quot;age&quot;: &quot;1&quot;\n    }\n}\n</code></pre>\n<p>Please see my JAVA Classes Below  -</p>\n<p><strong>Details.java</strong></p>\n<pre><code>public class Details {\n    \n    private Person person;\n    private Address address;\n    private Child[] children;\n    \n    public Person getPerson() {\n        return person;\n    }\n    public void setPerson(Person person) {\n        this.person = person;\n    }\n    public Address getAddress() {\n        return address;\n    }\n    public void setAddress(Address address) {\n        this.address = address;\n    }\n    public Child[] getChildren() {\n        return children;\n    }\n    public void setChildren(Child[] children) {\n        this.children = children;\n    }\n\n}\n</code></pre>\n<p><strong>Person.java</strong></p>\n<pre><code>import com.fasterxml.jackson.annotation.JsonProperty;\n\n    public class Person {\n        \n        @JsonProperty(&quot;first_name&quot;) \n        private String firstName;\n        \n        @JsonProperty(&quot;last_name&quot;)\n        private String lastName;\n        \n        @JsonProperty(&quot;age&quot;)\n        private Integer age;\n    \n    \n        public String getFirstName() {\n            return firstName;\n        }\n    \n        public void setFirstName(String firstName) {\n            this.firstName = firstName;\n        }\n    \n        public String getLastName() {\n            return lastName;\n        }\n    \n        public void setLastName(String lastName) {\n            this.lastName = lastName;\n        }\n    \n        public Integer getAge() {\n            return age;\n        }\n    \n        public void setAge(Integer age) {\n            this.age = age;\n        }\n        \n        \n    \n    }\n</code></pre>\n<p><strong>Address.java</strong></p>\n<pre><code>import com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class Address {\n    \n    @JsonProperty(&quot;phone&quot;)\n    private String phone;\n    \n    @JsonProperty(&quot;address_line_1&quot;)\n    private String addressLine1;\n    \n    @JsonProperty(&quot;address_line_2&quot;)\n    private String addressLine2;\n    \n    @JsonProperty(&quot;city&quot;)\n    private String city;\n    \n    @JsonProperty(&quot;country&quot;)\n    private String country;\n\n    public String getPhone() {\n        return phone;\n    }\n\n    public void setPhone(String phone) {\n        this.phone = phone;\n    }\n\n    public String getAddressLine1() {\n        return addressLine1;\n    }\n\n    public void setAddressLine1(String addressLine1) {\n        this.addressLine1 = addressLine1;\n    }\n\n    public String getAddressLine2() {\n        return addressLine2;\n    }\n\n    public void setAddressLine2(String addressLine2) {\n        this.addressLine2 = addressLine2;\n    }\n\n    public String getCity() {\n        return city;\n    }\n\n    public void setCity(String city) {\n        this.city = city;\n    }\n\n    public String getCountry() {\n        return country;\n    }\n\n    public void setCountry(String country) {\n        this.country = country;\n    }\n\n}\n</code></pre>\n<p><strong>Child.java</strong></p>\n<pre><code>public class Child {\n    \n    private String name;\n    private Integer age;\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n    public Integer getAge() {\n        return age;\n    }\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n}\n</code></pre>\n<p><em><strong>My Code to convert JSON to JAVA Object -</strong></em></p>\n<pre><code>    String filePath = &quot;test.json&quot;;\n    File file = new File(filePath);\n    ObjectMapper mapper = new ObjectMapper();\n    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n    Details details = mapper.readValue(file, Details.class);\n    \n    System.out.println(details.getPerson());\n</code></pre>\n<p>The problem I am facing is I am getting all the values in the details object are <strong>null</strong>. If I remove the <em>mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);</em> then I get the below exception</p>\n<pre><code>Exception in thread &quot;main&quot; com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field &quot;first_name&quot; (class learn.springboot.model.Details), not marked as ignorable (3 known properties: &quot;address&quot;, &quot;person&quot;, &quot;children&quot;])\n at [Source: (File); line: 2, column: 17] (through reference chain: learn.springboot.model.Details[&quot;first_name&quot;])\n    at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.ja\n</code></pre>\n"}
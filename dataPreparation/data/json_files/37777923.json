{"tags": ["python", "django", "django-models", "django-admin"], "comments": [{"score": 0, "creation_date": 1465757690, "post_id": 37777923, "comment_id": 63023443, "body": "what is the question here? at a guess you need <code>self.category.name + self.name</code>"}, {"score": 0, "creation_date": 1465757775, "post_id": 37777923, "comment_id": 63023474, "body": "@JoranBeasley this return a non-string"}, {"score": 0, "creation_date": 1465758184, "post_id": 37777923, "comment_id": 63023615, "body": "are you getting an error? please show us not only what you expect (ie &quot;Hot Chocolate&quot;), but also what your actual output that you are not expecting is."}, {"score": 0, "creation_date": 1465758727, "post_id": 37777923, "comment_id": 63023795, "body": "ok now we are getting close ... <code>self.category.name + self.name</code> at a guess ... or maybe <code>str(self.category) + self.name</code> if you have overloaded the str function on your <code>Category</code> class"}], "answers": [{"score": 0, "last_activity_date": 1465760648, "answer_id": 37778398, "question_id": 37777923, "body": "<p>You need to give the + operand 2 strings. So <code>str(self.category) + self.name</code> would work. Or perhaps <code>self.category.name + self.name</code> if the category has a <code>name</code> attribute.</p>\n\n<p>Be aware, that accessing the Category object might cause a lot of queries making your admin slow.</p>\n"}, {"score": -1, "last_activity_date": 1582859906, "last_edit_date": 1582859906, "answer_id": 60442855, "question_id": 37777923, "body": "<p>Change <code>return self.category + self.name</code></p>\n\n<p>To <code>return str('%s %s' % (self.category, self.name))</code></p>\n"}, {"score": 0, "last_activity_date": 1593038132, "answer_id": 62565077, "question_id": 37777923, "body": "<p><em>It is clear that we are discussing dajngo admin issue</em></p>\n<p>Change method to:</p>\n<pre><code>    def __str__(self):\n        return '%s, %s' % ( self.category.whatever-field-in-the-category-model, self.name)\n</code></pre>\n"}, {"score": 0, "last_activity_date": 1606829851, "last_edit_date": 1606829851, "answer_id": 65090505, "question_id": 37777923, "body": "<p>This format works use +</p>\n<pre><code>return self.first_name + &quot; &quot; + self.last_name\n</code></pre>\n<p>To include fields from other tables use self.tablename.fieldname</p>\n<pre><code>return self.category.name + &quot; &quot; + self.name\n</code></pre>\n"}], "is_answered": false, "answer_count": 4, "score": -1, "last_activity_date": 1606829851, "creation_date": 1465757530, "question_id": 37777923, "title": "Django : return two string for self - Admin", "body": "<p>I have a Python model and I would like to return a combination of two fields : <code>category</code> + <code>name</code>.</p>\n\n<p>The only thing is that the category field is a relationship, and within the category table, it is a \"name\" field. Note that the <code>__str__</code> is the name.</p>\n\n<hr>\n\n<p>Example :</p>\n\n<p><strong>Category table</strong>:\n<em>id 1</em> \"hot\"</p>\n\n<p><strong>Product table</strong>: <em>id 1</em> \"chocolate\"</p>\n\n<p><strong>In Django-Admin</strong> (what I except): \"hot chocolate\"</p>\n\n<hr>\n\n<p>Here is the code :</p>\n\n<pre><code>class Product(models.Model):\n    name = models.CharField(_('product_name'), max_length=55)\n    image = models.CharField(_('product_image'),max_length=255)\n    description = models.CharField(_('product_description'), max_length=500)\n    price = models.DecimalField(_('product_price'), max_digits=4, decimal_places=2)\n    category = models.ForeignKey(Categorie, on_delete=models.CASCADE)\n\n    def __str__(selfProduct):\n        return self.category + self.name\n</code></pre>\n\n<hr>\n\n<p>The error is the following : <strong>unsupported operand type(s) for +: 'Categorie' and 'str'</strong></p>\n\n<p>Thanks!</p>\n"}
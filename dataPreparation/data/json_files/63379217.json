{"tags": ["python-3.x", "regex"], "comments": [{"score": 0, "creation_date": 1597245259, "post_id": 63379217, "comment_id": 112071304, "body": "Thank you @anubhava! Unfortunately, it works for all numbers except for the very first number (1,). Is there a way to delete this one as well?"}, {"score": 0, "creation_date": 1597247667, "post_id": 63379217, "comment_id": 112072514, "body": "@anubhava: I don&#39;t know why but the first number still resists to be deleted. :-("}, {"score": 0, "creation_date": 1597250183, "post_id": 63379217, "comment_id": 112073852, "body": "may be try: <code>re.sub(r&quot;(^|\\W+)\\d+,\\s*&quot;, r&#39;\\1&#39;, data)</code>"}, {"score": 0, "creation_date": 1597258948, "post_id": 63379217, "comment_id": 112077640, "body": "Can you just add a example input and output"}], "answers": [{"comments": [{"score": 0, "creation_date": 1597309590, "post_id": 63390665, "comment_id": 112092643, "body": "Thank you for your answer. This regex deletes indeed all target numbers, even the &quot;1&quot; at the beginning. But for some reason, the regex affects the timestamps as well so that the two numbers after the first colon all change to &quot;00&quot;. I am still working on that."}], "score": 3, "last_activity_date": 1597311291, "last_edit_date": 1597311291, "answer_id": 63390665, "question_id": 63379217, "body": "<p>Converting my comment to answer so that solution is easy to find for future visitors.</p>\n<p>As you are dealing with multiline test, you can use anchors <code>^</code> and <code>$</code> without using <code>MULTILINE</code> mode. However for your case you can use a simple regex to remove all numbers followed by comma:</p>\n<pre><code>re.sub(r&quot;(^\\W*|\\s)\\d+,\\s*&quot;, r'\\1', data)\n</code></pre>\n<p><strong>RegEx Details:</strong></p>\n<ul>\n<li><code>(^\\W*|\\s)</code>: Matches start position followed by 0+ non-word characters and OR else a whitespace and capture in group #1</li>\n<li><code>\\d+,\\s*</code>: Match 1+ digits followed by a comma and 0 or more whitespaces</li>\n<li><code>\\1</code>: Is replacement that puts back text captured in group #1</li>\n</ul>\n<p><a href=\"https://regex101.com/r/fjC7Ne/1https://regex101.com/r/fjC7Ne/1\" rel=\"nofollow noreferrer\">RegEx Demo</a></p>\n"}], "is_answered": true, "answer_count": 1, "score": 1, "last_activity_date": 1597311291, "creation_date": 1597244125, "question_id": 63379217, "title": "Delete certain numbers among other numbers in a list in Python", "body": "<p>I want to delete special numbers from a list that contains also other numbers which should not be affected.</p>\n<p>The list looks like this:</p>\n<pre><code>[1, \n, 00:00:03,950, 00:00:06,840, \n, effective, argumentation, central, \n\n, 2, \n, 00:00:06,840, 00:00:09,180, \n, term, thinking, topic, \n\n, 3, \n, 00:00:09,180, 00:00:10,830, \n, previously, section, course, \n\n... and so on]\n</code></pre>\n<p>Now, I want to delete only the single numbers plus the comma afterwards (here: 1, 2, 3) but not the timestamps (or any part of the timestamps).</p>\n<p>What should be considered, is that these numbers could theoretically increase to 10 or even more digits, there is no constraint.</p>\n<p>For this task, I have tried the following regular expressions (among others):</p>\n<p><code>result = re.sub(r&quot;^\\d{1,},$&quot;, &quot;&quot;, data)</code></p>\n<p><code>result = re.sub(r&quot;^\\d{1,},\\n&quot;, &quot;&quot;, data)</code></p>\n<p>But nothing I can think of works for my task. Either a part of the timestamps is also deleted or the numbers in question are not deleted at all.</p>\n<p>Can anyone please help?</p>\n<p>Thank you very much!</p>\n"}
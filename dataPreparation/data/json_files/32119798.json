{"tags": ["php", "regex"], "comments": [{"score": 2, "creation_date": 1440078135, "post_id": 32119798, "comment_id": 52132209, "body": "What about 4 dashes? e.g. 2 lots of 2 dashes?"}, {"score": 0, "creation_date": 1440078211, "post_id": 32119798, "comment_id": 52132272, "body": "Should be ignored. :) @ndn is correct, I just can&#39;t mark it as answered yet (question younger than 15 minutes)."}, {"score": 0, "creation_date": 1440078286, "post_id": 32119798, "comment_id": 52132343, "body": "In which case, yup <i>ndn</i>&#39;s answer looks good to me :)"}, {"score": 0, "creation_date": 1440078423, "post_id": 32119798, "comment_id": 52132458, "body": "Would this (<code>--\u2014--</code>) match or not? once, twice, or none?"}], "answers": [{"comments": [{"score": 0, "creation_date": 1440078310, "post_id": 32119845, "comment_id": 52132360, "body": "I think explanation is needed over here for future users"}, {"score": 2, "creation_date": 1440078517, "post_id": 32119845, "comment_id": 52132533, "body": "Future users should really read the link I gave. However, long story short: <code>(?&lt;!something)</code> basically means <i>fail the match if <b>something</b> precedes the current position</i> and <code>(?!something)</code> means <i>fail the match if <b>something</b> follows the current position</i>."}, {"score": 0, "creation_date": 1440078699, "post_id": 32119845, "comment_id": 52132667, "body": "Anyways +1 for answer... @ndn"}, {"score": 0, "creation_date": 1440684629, "post_id": 32119845, "comment_id": 52383881, "body": "Did you change anything in your answer? I get &quot;Unknown modifier &#39;-&#39;&quot; when I try it out now."}, {"score": 0, "creation_date": 1440684826, "post_id": 32119845, "comment_id": 52384017, "body": "@MadMarvin, no I did not. You can see it working <a href=\"https://regex101.com/r/dO1uL1/1\" rel=\"nofollow noreferrer\">here</a>."}], "score": 6, "last_activity_date": 1440077920, "answer_id": 32119845, "question_id": 32119798, "body": "<p>Surround your <em>dashes</em> with <a href=\"http://www.regular-expressions.info/lookaround.html\">negative lookarounds</a>:</p>\n\n<pre><code>(?&lt;!-)--(?!-)\n</code></pre>\n\n<p>This way, the <em>two dashes</em> will match only if there is <em>no dash</em> before or after them.</p>\n"}], "is_answered": true, "answer_count": 1, "score": 2, "last_activity_date": 1440077920, "creation_date": 1440077795, "question_id": 32119798, "title": "PHP, Regular Expression replacing only two characters, nothing more", "body": "<p>So I've been searching for a while now and I'm starting to go crazy. I'm obviously no RegEx expert, but I'm hoping you can help me out quick.</p>\n\n<h1>The problem</h1>\n\n<p>I'm trying to write a regex line which will replace TWO dashes, no more, no less. One dash should be ignored, and three dashes should be ignored.</p>\n\n<h1>What I've tried</h1>\n\n<p>I've come up with this, but it loops:</p>\n\n<pre><code>[--]{2}\n</code></pre>\n\n<p>And this gives me nothing:</p>\n\n<pre><code>^[--]{2}$\n</code></pre>\n\n<p><em>Please</em> help me out! Thanks!</p>\n"}
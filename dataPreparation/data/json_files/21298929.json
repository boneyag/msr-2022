{"tags": ["javascript", "regex"], "comments": [{"score": 0, "creation_date": 1390448743, "post_id": 21298929, "comment_id": 32098946, "body": "When you use the regex constructor you need to double escape special charaters, so <code>\\\\d</code>, etc."}, {"score": 0, "creation_date": 1390448879, "post_id": 21298929, "comment_id": 32098977, "body": "@elclanrs Thanks! That sure fixed it! If you posted that as an answer I could mark it as correct."}], "answers": [{"score": 2, "last_activity_date": 1390449170, "answer_id": 21299008, "question_id": 21298929, "body": "<p>As per the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Description\" rel=\"nofollow\">MDN RegExp docs</a>,</p>\n\n<blockquote>\n  <p>When using the constructor function, the normal string escape rules\n  (preceding special characters with \\ when included in a string) are\n  necessary. For example, the following are equivalent:</p>\n\n<pre><code>var re = /\\w+/;\nvar re = new RegExp(\"\\\\w+\");\n</code></pre>\n</blockquote>\n\n<p>In your RegEx, <code>\\d</code> is a special character</p>\n\n<blockquote>\n  <p>\\d     Matches a digit character in the basic Latin alphabet. Equivalent\n  to [0-9].</p>\n  \n  <p>For example, /\\d/ or /[0-9]/ matches '2' in \"B2 is the suite number.\"</p>\n</blockquote>\n\n<p>So, your RegEx, should have been like this</p>\n\n<pre><code>[A-Z]{3}[ ]\\\\d{9}[ ]   //\\\\d instead of \\d\n</code></pre>\n"}], "is_answered": true, "answer_count": 1, "score": 2, "last_activity_date": 1390449170, "creation_date": 1390448641, "question_id": 21298929, "title": "How to dynamically create regular expressions based of a user input", "body": "<p>I am making a program that gets an input from the user, then makes a regular expression using that input.</p>\n\n<p>Here is some example code:</p>\n\n<pre><code>&lt;input id=\"a\" type=\"text\" /&gt;\n&lt;input type=\"button\" value=\"Create\" id=\"b\" /&gt;\n&lt;script&gt;\n(function (z , code) {\n    var input = document.getElementById(\"a\"),\n        b = document.getElementById(\"b\");\n    function primary(){\n        var regEx = new RegExp(\"[A-Z]{3}[ ]\\d{9}[ ]\" + input.value.toUpperCase(), \"g\");\n        alert(regEx);\n    };\n    b.addEventListener(\"click\",function(){\n        primary();\n    }, false);\n}(this, document));\n&lt;/script&gt;\n</code></pre>\n\n<p><strong><a href=\"http://jsfiddle.net/Progo/ahy8p/\" rel=\"nofollow\">FIDDLE</a></strong></p>\n\n<p>It works accept for this:</p>\n\n<p>Say I use <code>FooBar</code> as my input. Instead of creating a regular expression that says, <code>/[A-Z]{3}[ ]\\d{9}[ ]FOOBAR/g</code> I get a regular expression that says, <code>/[A-Z]{3}[ ]d{9}[ ]FOOBAR/g</code>. A <code>d</code> instead of <code>\\d</code>. </p>\n\n<p>Why is this not working properly? How can I correct this?</p>\n\n<p>Thank you.</p>\n"}
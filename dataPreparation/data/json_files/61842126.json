{"tags": ["javascript", "arrays", "json", "firebase", "debugging"], "answers": [{"comments": [{"score": 0, "creation_date": 1589661603, "post_id": 61842392, "comment_id": 109384313, "body": "Hi, thank you for your quick reply! I am getting error that data.map is not a function, which I assume is because data is an object not an array. Would my alternative solution be Objects.keys?"}, {"score": 0, "creation_date": 1589693397, "post_id": 61842392, "comment_id": 109391095, "body": "yeah!.. i m not sure ur result. please try console log and check.. i just highlighted mistakes that u can correct and a rough sample."}, {"score": 0, "creation_date": 1589698105, "post_id": 61842392, "comment_id": 109392197, "body": "Thank you very much! I will mess with the code some more, I appreciate your guidance!"}], "score": 1, "last_activity_date": 1589657420, "last_edit_date": 1589657420, "answer_id": 61842392, "question_id": 61842126, "body": "<p>There are multiple issues with this code.</p>\n\n<ol>\n<li>You are not <code>waiting promise</code> to be resolved.</li>\n<li>Multiple <code>returns</code> statements </li>\n<li>You would not create global arrays like <code>posts</code> and <code>followData</code>[you can return in then for next callback]</li>\n</ol>\n\n<p>Code:</p>\n\n<pre><code>// fetch home-specific posts (of users following)\n\nexports.getHomePosts = (req, res) =&gt; {\n  const followDocument = db\n    .collection(\"follows\")\n    .where(\"senderHandle\", \"==\", req.params.handle);\n\n  followDocument\n    .get()\n    .then((data) =&gt; {\n      if (data.query.size == 0) {\n        throw new Error(\"NOT_FOUND\");\n      } else {\n        return data.map((doc) =&gt; doc.data());\n      }\n    })\n    .then((followData) =&gt; {\n      const promises = followData.map((follow) =&gt; {\n        return db\n          .collection(\"posts\")\n          .where(\"userHandle\", \"==\", follow.receiverHandle)\n          .where(\"location\", \"==\", \"explore\")\n          .get();\n      });\n      Promise.all(promises).then((results) =&gt; {\n        const posts = results\n          .map((data) =&gt; {\n            return data.map((doc) =&gt; ({\n              postId: doc.id,\n              body: doc.data().body,\n              userHandle: doc.data().userHandle,\n              createdAt: doc.data().createdAt,\n              commentCount: doc.data().commentCount,\n              likeCount: doc.data().likeCount,\n              userImage: doc.data().userImage,\n            }));\n          })\n          .flat();\n        return res.json(posts);\n      });\n    })\n    .catch((err) =&gt; {\n      if (err.message === \"NOT_FOUND\") {\n        return res.status(400).json({ error: \"Not following any users\" });\n      }\n      res.status(500).json({ error: err.message });\n    });\n};\n</code></pre>\n"}], "is_answered": true, "answer_count": 1, "score": 1, "last_activity_date": 1589657420, "creation_date": 1589655732, "question_id": 61842126, "title": "Firebase get request returning empty array?", "body": "<p>I believe it may just be an error in my logic, but i'm not sure where the problem is exactly and I am looking for help debugging. I am using Firebase Cloud Firestore. I am trying to query through my \"follows\" collection to return all data where the key \"senderHandle\" is equal to the params handle and then push that data to the empty array followData. Then, loop through each followData and make a document query call to the \"posts\" collection. Then, loop through each of the returned documents from the \"posts\" collection and push each data to the empty array \"posts\".</p>\n\n<p>When I try to return the posts array though it returns empty. My overall goal is to get all of the users the params handle follows, loop through each user to get their posts, and then push their posts into an empty array.</p>\n\n<p>Functions code:</p>\n\n<pre><code>// fetch home-specific posts (of users following)\nexports.getHomePosts = (req, res) =&gt; {\n  let posts = [];\n  let followData = [];\n  // get following users\n  const followDocument = db\n    .collection(\"follows\")\n    .where(\"senderHandle\", \"==\", req.params.handle);\n\n  followDocument\n    .get()\n    .then((data) =&gt; {\n      if (data.query.size == 0) {\n        return res.status(400).json({ error: \"Not following any users\" });\n      } else {\n        data.forEach((doc) =&gt; {\n          followData.push(doc.data());\n        });\n      }\n    })\n    .then(() =&gt; {\n      followData.forEach((follow) =&gt; {\n        db.collection(\"posts\")\n          .where(\"userHandle\", \"==\", follow.receiverHandle)\n          .where(\"location\", \"==\", \"explore\")\n          .get()\n          .then((data) =&gt; {\n            data.forEach((doc) =&gt; {\n              posts.push({\n                postId: doc.id,\n                body: doc.data().body,\n                userHandle: doc.data().userHandle,\n                createdAt: doc.data().createdAt,\n                commentCount: doc.data().commentCount,\n                likeCount: doc.data().likeCount,\n                userImage: doc.data().userImage,\n              });\n            });\n          });\n      });\n      return res.json(posts);\n    })\n    .catch((err) =&gt; {\n      res.status(500).json({ error: err.message });\n    });\n};\n</code></pre>\n\n<p>followData returned:</p>\n\n<pre><code>[\n    {\n        \"receiverHandle\": \"John Doe\",\n        \"senderHandle\": \"bear\"\n    },\n    {\n        \"senderHandle\": \"bear\",\n        \"receiverHandle\": \"Yikies\"\n    },\n    {\n        \"receiverHandle\": \"bear\",\n        \"senderHandle\": \"bear\"\n    },\n    {\n        \"receiverHandle\": \"anon\",\n        \"senderHandle\": \"bear\"\n    },\n    {\n        \"senderHandle\": \"bear\",\n        \"receiverHandle\": \"BigYikes\"\n    }\n]\n</code></pre>\n"}
{"tags": ["android", "json", "parsing", "url"], "comments": [{"score": 0, "creation_date": 1410508799, "post_id": 25803443, "comment_id": 40361639, "body": "don&#39;t use <code>content =content+inputLine;</code>. Use a StringBuilder instead"}, {"score": 0, "creation_date": 1410508991, "post_id": 25803443, "comment_id": 40361727, "body": "90kb .. 2600 lines. size of json file"}, {"score": 0, "creation_date": 1410509195, "post_id": 25803443, "comment_id": 40361819, "body": "and if i use stringbuilder in first function than function get only part of json file (like 30-50 lines) :(((( dont know why :("}, {"score": 0, "creation_date": 1410509998, "post_id": 25803443, "comment_id": 40362160, "body": "90kb exceeds LogCat&#39;s buffer, which is the actual problem (see my answer)."}], "answers": [{"comments": [{"score": 0, "creation_date": 1410509221, "post_id": 25803516, "comment_id": 40361831, "body": "and if i use stringbuilder in first function than function get only part of json file (like 30-50 lines) :(((( dont know why :("}, {"score": 0, "creation_date": 1410509279, "post_id": 25803516, "comment_id": 40361857, "body": "it&#39;s like a want to get string &quot;understand&quot; from url - but it&#39;s return only &quot;unders&quot; that&#39;s all :("}, {"score": 0, "creation_date": 1410509436, "post_id": 25803516, "comment_id": 40361938, "body": "Could you show us the json? Also if lines is the problem try <code>response.append(inputLine).append(&quot;\\n&quot;);</code>"}, {"score": 0, "creation_date": 1410511265, "post_id": 25803516, "comment_id": 40362721, "body": "<a href=\"http://www.json-generator.com/api/json/get/bWjUhbiVQi?indent=2\" rel=\"nofollow noreferrer\">json-generator.com/api/json/get/bWjUhbiVQi?indent=2</a>   it&#39;s auto generated file from site . Big file. And still it&#39;s get only part of code. :(40-50 lines)"}, {"score": 0, "creation_date": 1410511609, "post_id": 25803516, "comment_id": 40362875, "body": "That&#39;s not a &quot;big&quot; json. It&#39;s just a jsonarray. Change the return of my method from JSONObject to JSONArray."}, {"score": 0, "creation_date": 1410511700, "post_id": 25803516, "comment_id": 40362919, "body": "StringBuilder containe only 40-50 lines from this content. It&#39;s not all content. JSON array i build in other function , but here returned not all content. idk how to fix it"}, {"score": 0, "creation_date": 1410512130, "post_id": 25803516, "comment_id": 40363102, "body": "anyway bro, thank u ,stringbuilder better than string to string."}, {"score": 0, "creation_date": 1410512173, "post_id": 25803516, "comment_id": 40363125, "body": "Lines doesn&#39;t matter friend if the content is all there. Have you at least tried creating an array from the content?"}, {"score": 0, "creation_date": 1410512521, "post_id": 25803516, "comment_id": 40363304, "body": "I just tried this function and its working. I get 88 objects in the json array. Like the site. Just because you get less lines that doesn&#39;t matter that you don&#39;t have all the objects. And I can tell you also that this operation takes 738ms. Which is less than a second. So as I told you. Not a &quot;big&quot; json."}, {"score": 0, "creation_date": 1410512879, "post_id": 25803516, "comment_id": 40363489, "body": "yep. just result 1 seconds. Its amazing. thats why i thinked about not all content."}, {"score": 0, "creation_date": 1479993729, "post_id": 25803516, "comment_id": 68797502, "body": "Good! Used this example and got my download + string building from 10 seconds to 1!"}], "score": 3, "last_activity_date": 1410509863, "last_edit_date": 1410509863, "answer_id": 25803516, "question_id": 25803443, "body": "<p>That concatenation will take too much time appending. Use a StringBuilder instead.</p>\n\n<pre><code>    StringBuilder response = new StringBuilder();\n\n    while ((inputLine = in.readLine()) != null) {\n        response.append(inputLine);\n    }\n    content = response.toString();\n</code></pre>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>Here is an example of a getJsonObject from a url:</p>\n\n<pre><code>private static JSONObject getJSONObject(String _url) throws Exception {\n    if (_url.equals(\"\"))\n        throw new Exception(\"URL can't be empty\");\n\n    URL url = new URL(_url);\n    HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n    conn.setReadTimeout(10000 /* milliseconds */);\n    conn.setConnectTimeout(15000 /* milliseconds */);\n    conn.setDoInput(true);\n    conn.setRequestProperty(\"User-Agent\", \"android\");\n    conn.setRequestProperty(\"Accept\", \"application/json\");\n    conn.addRequestProperty(\"Content-Type\", \"application/json\");\n    BufferedReader in = new BufferedReader(\n            new InputStreamReader(conn.getInputStream()));\n\n    if (!url.getHost().equals(conn.getURL().getHost())) {\n        conn.disconnect();\n        return new JSONObject();\n    }\n    String inputLine;\n    StringBuilder response = new StringBuilder();\n    while ((inputLine = in.readLine()) != null) {\n        response.append(inputLine);\n    }\n    in.close();\n    conn.disconnect();\n\n    return new JSONObject(response.toString());\n\n}\n</code></pre>\n"}, {"comments": [{"score": 0, "creation_date": 1410511568, "post_id": 25803718, "comment_id": 40362853, "body": "no it&#39;s poblem not in logcat. it&#39;s strange error or some thing else. cos if not using stringbuilder than content getting all but very slow, if using stringbuilder than it&#39;s return only part of code.(content)"}, {"score": 0, "creation_date": 1410512255, "post_id": 25803718, "comment_id": 40363168, "body": "@Peter Not talking about StringBuilder, but your second approach using HttpResponse."}], "score": 0, "last_activity_date": 1410509945, "last_edit_date": 1495542651, "answer_id": 25803718, "question_id": 25803443, "body": "<p>It's impossible that the second function only gives you a small part of the content. The problem doesn't lie in the response or in the stream reading, it lies in you trying to display that huge content in LogCat: LogCat has a limit (see <a href=\"https://stackoverflow.com/questions/8281186/android-webservice-get-request-replies-only-a-part-of-the-xml-response\">Android webservice GET request replies only a part of the XML response</a> and <a href=\"https://stackoverflow.com/questions/6321555/what-is-the-size-limit-for-logcat\">What is the size limit for Logcat and how to change its capacity?</a>; 90kb exceeds LogCat's buffer). That means your variable response <em>does</em> contain the full JSON, but <em>LogCat isn't displaying the full variable</em>. Just parse your JSON and everything should work.</p>\n"}], "is_answered": true, "answer_count": 2, "score": 2, "last_activity_date": 1410509945, "creation_date": 1410508603, "question_id": 25803443, "title": "How to read BIG JSON Conten from URL", "body": "<p>im lookin way to read big json content from url. Im write simple app where i test much funcitons . Most function show me time ~40-45 seconds. Than return content(JSON file realy big)\n<strong>Size of JSON FILE</strong> 90kb .. 2600 lines\nFirst funciton reading all content but very slow (40-45 seconds)</p>\n\n<pre><code>public  String readJsonFromUrl(String urls)  {\n         String content = \"\";\n         URL myLink = null;\n         String inputLine=null;\n        try {\n            myLink = new URL(urls);\n         } catch (MalformedURLException e) {\n            // TODO Auto-generated catch block\n        }\n         BufferedReader in = null;\n        try {\n            in = new BufferedReader(\n                         new InputStreamReader(\n                         myLink.openStream()));\n        } catch (IOException e) {\n        }\n        try {\n            while ((inputLine = in.readLine()) != null)\n                 content =content+inputLine;\n        } catch (IOException e1) {\n            // TODO Auto-generated catch block\n\n        }\n         try {\n            in.close();\n        } catch (IOException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n       return content;\n      }\n</code></pre>\n\n<p>Function work perfect. But time :(. U guys can just input fucn to code , set url  and parse.</p>\n\n<p>Second function</p>\n\n<pre><code>public void readJSONFromUrl(String urls) throws IOException, URISyntaxException\n    {\n        InputStream is = null;\n        String response = \"\";\n        String url=urls;\n        DefaultHttpClient httpClient = new DefaultHttpClient();\n        HttpEntity httpEntity = null;\n        HttpResponse httpResponse = null;\n        HttpGet httpGet = new HttpGet(url);\n        httpResponse = httpClient.execute(httpGet);\n        httpEntity = httpResponse.getEntity();\n        response = EntityUtils.toString(httpEntity);\n        Log.i(\"RESPONSE\",\"RESPONSE = \"+response);\n}\n</code></pre>\n\n<p>this funciton work but very strange. i get only PART of content and very small part of big content.</p>\n\n<p>Anyone maybe know some thing better or how to fix second function for test .. it's show me how much time need for getting content. \nOr maybe some one have other fucntion which faste than two this function ?\nRegards Peter.</p>\n"}
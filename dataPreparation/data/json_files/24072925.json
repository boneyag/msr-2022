{"tags": ["python", "django", "memcached"], "answers": [{"comments": [{"score": 0, "creation_date": 1402029962, "post_id": 24073638, "comment_id": 37125071, "body": "This looks like the solution I was looking for! I will give it a try and report back. Thanks!"}, {"score": 0, "creation_date": 1402344001, "post_id": 24073638, "comment_id": 37226959, "body": "Thanks @knbk. That was very helpful! But I have a bit more complex question now. Please see here: <a href=\"http://stackoverflow.com/questions/24127997/how-to-name-arrange-my-memcached-keys-when-i-have-django-objects-with-multiple-f\" title=\"how to name arrange my memcached keys when i have django objects with multiple f\">stackoverflow.com/questions/24127997/&hellip;</a>"}], "score": 1, "last_activity_date": 1402024555, "answer_id": 24073638, "question_id": 24072925, "body": "<p>A relatively simple way is to attach a function to the <a href=\"https://docs.djangoproject.com/en/dev/ref/signals/#post-save\" rel=\"nofollow\"><code>post_save</code></a> signal of the model, and invalidate the cache if the model instance is updated. </p>\n"}], "is_answered": true, "answer_count": 1, "score": 0, "last_activity_date": 1402024555, "creation_date": 1402019268, "question_id": 24072925, "title": "How to use memcache with Django when updating and retrieving model instances with children?", "body": "<p>I have an existing Django app that doesn't do any Database caching. I am working to implement memcached to get a performance boost and reduce the amount of expensive database hits. </p>\n\n<p>So far I have installed and am running memcache on my server, installed <a href=\"https://pypi.python.org/pypi/pylibmc/1.3.0\" rel=\"nofollow noreferrer\"><strong>pymclib</strong></a>, <a href=\"https://pypi.python.org/pypi/django-memcache-admin\" rel=\"nofollow noreferrer\"><strong>django-memcache-admin</strong></a> and modified my settings.py file as I described <a href=\"https://stackoverflow.com/questions/23976476/what-steps-are-needed-to-implement-memcached-in-a-django-application\"><strong>here</strong></a>. I have not yet modified any of my actual application code. But I can still see that caching is in effect when I look at the django-memcache-admin dashboard. The caching is also evident because when I load some of the views, the data displayed is out of date. IE: updated data is not getting into the cache. I need advice on how to fix this. More detailed explanation is given below.</p>\n\n<p>Here is are my models:</p>\n\n<pre><code>class myObjectA(models.Model):  \n    field1 = models.CharField(max_length=255)\n\n    def modify(self):\n        newB = myObjectB(fk_myObjectA=self, field2=\"Blah Blah\")\n        newB.save()\n\n    def getBChildren(self):\n        return myObjectB.objects.filter(fk_myObjectA=self)\n\n\nclass myObjectB(models.Model):  \n    fk_myObjectA = models.ForeignKey(myObjectA, related_name=\"Blah_Blah\") \n    field2 = models.CharField(max_length=255)\n</code></pre>\n\n<p>Here is the url path:</p>\n\n<pre><code>url(\n    r'^api/myObjectA_Modify/(?P&lt;myObjectA_ID&gt;\\d+)/?$', \n    myObjectA_Modify.as_view()\n),\n</code></pre>\n\n<p>Here is the API view that modifies an instance of myObjectA by adding a new myObjectB child record:</p>\n\n<pre><code>class myObjectA_Modify(mixins.UpdateModelMixin, generics.GenericAPIView):\n    queryset = myObjectA.objects.all()\n    serializer_class = myObjectA_Serializer   \n\n    def put(self, request, *args, **kwargs):\n\n        retrieved_myObjectA = get_object_or_404(\n            myObjectA, \n            pk=request.POST[\"myObjectA_ID\"],\n        )\n\n        retrieved_myObjectA.modify()\n\n        return Response(\n            myObjectA_Serializer(retrieved_myObjectA.getBChildren()).data,\n            status=status.HTTP_200_OK,\n        )\n</code></pre>\n\n<p>The call to myObjectA_Modify can be with any arbitrary ID. I don't know in advance which ID will be used. myObjectA can have an indeterminate number of myObjectB children. Furthermore there are other separate APIs that returns the whole list of all myObjectAs and myObjectBs. </p>\n\n<p>How can I modify this application code to work with memcache? What should my insertion keys be? I need to make sure that if any model has a newly-inserted or updated child record, the parent record in the cache is updates. Currently once something gets into the cache it doesn't get updated so the webpages display out-of-date information. If you can show me the actual code changes to the above snippet, it would be most helpful.</p>\n"}
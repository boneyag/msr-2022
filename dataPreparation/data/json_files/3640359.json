{"tags": ["python", "regex"], "answers": [{"comments": [{"score": 2, "creation_date": 1283560880, "post_id": 3640376, "comment_id": 3826190, "body": "Actually, list comprehensions are usually prefered over functional constructs such as filter, reduce, lambda, etc."}, {"score": 41, "creation_date": 1283561221, "post_id": 3640376, "comment_id": 3826208, "body": "@Ivo: They are usually preferred because they&#39;re usually clearer and often more succinct. However in this case, the <code>filter</code> version is perfectly clear and has much less noise."}, {"score": 10, "creation_date": 1539344925, "post_id": 3640376, "comment_id": 92479266, "body": "what is <code>r.match</code> here?"}, {"score": 4, "creation_date": 1539380030, "post_id": 3640376, "comment_id": 92495980, "body": "@rbatt <code>r.match</code> is a method that, when applied to a given string,  finds whether the regex <code>r</code> matches that string (and returns a corresponding match object if so, but that doesn&#39;t matter in this case as we just care whether the result is truthy)"}], "score": 133, "last_activity_date": 1528093777, "last_edit_date": 1528093777, "answer_id": 3640376, "question_id": 3640359, "body": "<p>You can create an <strong>iterator</strong> in Python 3.x or a <strong>list</strong> in Python 2.x by using:</p>\n\n<pre><code>filter(r.match, list)\n</code></pre>\n\n<p>To convert the Python 3.x <em>iterator</em> to a list, simply cast it; <code>list(filter(..))</code>.</p>\n"}, {"comments": [{"score": 4, "creation_date": 1476356899, "post_id": 39593126, "comment_id": 67315359, "body": "Hi there, When I run the above code, I get <code>&lt;filter object at 0x1057acda0&gt;</code> What am I doing wrong?"}, {"score": 1, "creation_date": 1476365075, "post_id": 39593126, "comment_id": 67321470, "body": "According to python docs (python 2.7.12): <a href=\"https://docs.python.org/2/library/functions.html#filter\" rel=\"nofollow noreferrer\">docs.python.org/2/library/functions.html#filter</a> filter returns a list not an object. You can also check that code:  <a href=\"https://repl.it/X3G/5786\" rel=\"nofollow noreferrer\">repl.it/X3G/5786</a>  (just hit run)"}, {"score": 1, "creation_date": 1476447913, "post_id": 39593126, "comment_id": 67361873, "body": "Thank you. I am using Python 3.5.2 on a Mac. I tried your link. Of course it works, though not sure why I get that msg. I even removed the <code>str</code> since <code>filter</code> returns a list anyway, to no avail..."}, {"score": 4, "creation_date": 1484073760, "post_id": 39593126, "comment_id": 70356855, "body": "@joshua you&#39;ve probably figured this out by now but try <code>print(list(newlist))</code> or <code>print([i for i in newlist])</code>"}, {"score": 3, "creation_date": 1557891742, "post_id": 39593126, "comment_id": 98912955, "body": "This is ridiculously difficult. This is why R is superior. Simply grep(pattern, vector_of_names)"}, {"score": 0, "creation_date": 1580167376, "post_id": 39593126, "comment_id": 106001737, "body": "How do you do this without compiling the regex first? Like <code>re.match(&quot;.*cat&quot;, my_string)</code>."}, {"score": 0, "creation_date": 1580210023, "post_id": 39593126, "comment_id": 106014898, "body": "filter(..) call does that internally. we are passing the r.match (pointer to a funciton) and a list of strings to match to."}], "score": 219, "last_activity_date": 1623227706, "last_edit_date": 1623227706, "answer_id": 39593126, "question_id": 3640359, "body": "<p><strong>Full Example (Python 3):</strong><br>\n<strong>For Python 2.x look into Note below</strong></p>\n<pre><code>import re\n\nmylist = [&quot;dog&quot;, &quot;cat&quot;, &quot;wildcat&quot;, &quot;thundercat&quot;, &quot;cow&quot;, &quot;hooo&quot;]\nr = re.compile(&quot;.*cat&quot;)\nnewlist = list(filter(r.match, mylist)) # Read Note below\nprint(newlist)\n</code></pre>\n<p>Prints:</p>\n<pre><code>['cat', 'wildcat', 'thundercat']\n</code></pre>\n<hr />\n<p><strong>Note:</strong></p>\n<p>For Python 2.x developers, <a href=\"https://docs.python.org/2/library/functions.html#filter\" rel=\"noreferrer\"><code>filter</code></a> returns a list already. In <a href=\"https://docs.python.org/3/library/functions.html#filter\" rel=\"noreferrer\">Python 3.x <code>filter</code></a> was changed to return an iterator so it has to be converted to <code>list</code> (in order to see it printed out nicely).</p>\n<p><a href=\"http://rextester.com/RDBZLH81559\" rel=\"noreferrer\">Python 3 code example</a> <br>\n<a href=\"http://rextester.com/YTISE81276\" rel=\"noreferrer\">Python 2.x code example</a></p>\n"}, {"score": 6, "last_activity_date": 1601488197, "answer_id": 64143128, "question_id": 3640359, "body": "<p>To do so without compiling the Regex first, use a <code>lambda</code> function - for example:</p>\n<pre class=\"lang-py prettyprint-override\"><code>from re import match\n\nvalues = ['123', '234', 'foobar']\nfiltered_values = list(filter(lambda v: match('^\\d+$', v), values))\n\nprint(filtered_values)\n</code></pre>\n<p>Returns:</p>\n<pre class=\"lang-py prettyprint-override\"><code>['123', '234']\n</code></pre>\n<p><code>filter()</code> just takes a <code>callable</code> as it's first argument, and returns a list where that callable returned a 'truthy' value.</p>\n"}], "is_answered": true, "answer_count": 3, "score": 114, "last_activity_date": 1623227706, "creation_date": 1283559198, "question_id": 3640359, "title": "Regular Expressions: Search in list", "body": "<p>I want to filter strings in a list based on a regular expression.</p>\n\n<p>Is there something better than <code>[x for x in list if r.match(x)]</code> ?</p>\n"}
{"tags": ["python", "html", "django", "forms", "file-upload"], "comments": [{"score": 0, "creation_date": 1625727508, "post_id": 68296796, "comment_id": 120704623, "body": "What if you remove the <code>if request.POST</code> check?"}, {"score": 0, "creation_date": 1625727717, "post_id": 68296796, "comment_id": 120704699, "body": "@WillemVanOnsem It won&#39;t work for the rest of the field then. Anyways I tried removing it but did not work."}, {"score": 0, "creation_date": 1625728409, "post_id": 68296796, "comment_id": 120704986, "body": "@DhatriKapuiya: can post the full logging of the request?"}, {"score": 0, "creation_date": 1625729210, "post_id": 68296796, "comment_id": 120705259, "body": "@WillemVanOnsem updated view.py in code above."}, {"score": 0, "creation_date": 1626176907, "post_id": 68296796, "comment_id": 120818083, "body": "I am facing same issue, any luck?"}], "answers": [{"comments": [{"score": 0, "creation_date": 1626246478, "post_id": 68364069, "comment_id": 120838227, "body": "This is also a possible solution. The issue was solved after I started from scratch and wrote the same code again!!"}], "score": 1, "last_activity_date": 1626185502, "answer_id": 68364069, "question_id": 68296796, "body": "<p>I have faced a similar issue, here my issue is I directly passed the file data without <code>FormData</code> in the Rest API.</p>\n<pre><code>var formData = new FormData();\nArray.from(files).forEach(f =&gt; formData.append('file', f))\n</code></pre>\n<p>using the above code, I passed the <code>FormData</code> to the POST API, my issue got resolved.</p>\n"}], "is_answered": true, "answer_count": 1, "score": 2, "last_activity_date": 1626272705, "creation_date": 1625726804, "question_id": 68296796, "title": "request.FILES is empty though form tag contains multipart data encryption", "body": "<p>I am trying to upload a file to database from frontend HTML form. Here is the code:</p>\n<p><strong>createuser.html</strong></p>\n<pre><code>&lt;form method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot; action=&quot;&quot;&gt;\n    &lt;input type=&quot;file&quot; name=&quot;myfile&quot;&gt;\n    &lt;input type=&quot;submit&quot;&gt;\n&lt;/form&gt;\n</code></pre>\n<p><strong>views.py</strong></p>\n<pre><code>@login_required(login_url='login')\ndef createuser(request):\n\n    authority = Authority.objects.only('authority')\n    designation = Authority.objects.only('designation')\n\n    if request.method == 'POST':\n        if request.POST:\n            post = CustomUser()\n            post.first_name = request.POST.get('first_name')\n            post.middle_name = request.POST.get('middle_name')\n            post.last_name = request.POST.get('last_name')\n            post.emp_code = request.POST.get('emp_code')\n            post.email = request.POST.get('email')\n            passwrd = request.POST.get('password')\n            post.password = make_password(passwrd)\n            post.joining_date = request.POST.get('joining_date')\n            # post.authority = request.POST.get('authority')\n            # post.designation = Designation.objects.get(designation=request.POST.get('designation'))\n                        \n            post.language = request.POST.getlist('lang')\n            post.address = request.POST.get('address')\n            post.education = request.POST.get('education')\n            post.blood_group = request.POST.get('blood_group')\n            post.emergency_contact = request.POST.get('emergency_contact')\n            post.relation = request.POST.get('relation')\n            post.created_by = request.user\n            \n            myfile = request.FILES['myfile']  \n            # generates multivalue dict error as multivalueDict is empty\n            print(myfile)\n           \n            # fs = FileSystemStorage()\n            # filename = fs.save(myfile.name, myfile)\n            # uploaded_file_url = fs.url(filename)               \n            # print(uploaded_file_url)\n            post.save()\n            s = '/usermanage/userdashboard'\n            return redirect(s)\n\n    userforminfo = CreateUser.objects.all()\n    return render(request, 'usermanage/createuser.html', context={&quot;userforminfo&quot;: userforminfo, &quot;authority&quot;:authority, &quot;designation&quot;:designation})\n</code></pre>\n<p><strong>Output</strong></p>\n<p>&lt;MultiValueDict: {}&gt;</p>\n<p>The output must be a file which I am selecting. Is there any way I could fix this?</p>\n"}
{"tags": ["java", "regex"], "comments": [{"post_id": 68316339, "comment_id": 120739628, "body": "Do you have to do it all in a single regex?  <code>input.matches(&quot;[A-Za-z_&#228;&#196;&#246;&#214;&#252;&#220;&#223;_.-]*&quot;) &amp;&amp; input.trim().equals(input)</code> would work."}], "answers": [{"answer_id": 68316480, "question_id": 68316339, "body": "<p>Try: <code>^[A-Za-z_\u00e4\u00c4\u00f6\u00d6\u00fc\u00dc\u00df_.-]*(?: [A-Za-z_\u00e4\u00c4\u00f6\u00d6\u00fc\u00dc\u00df_.-]*)*$</code></p>\n<p>See it working <a href=\"https://regex101.com/r/8VyQew/1\" rel=\"nofollow noreferrer\">here</a></p>\n"}, {"answer_id": 68316514, "question_id": 68316339, "body": "<p>How about:</p>\n<pre><code>^[A-Za-z_\u00e4\u00c4\u00f6\u00d6\u00fc\u00dc\u00df_.-]+(?: [A-Za-z_\u00e4\u00c4\u00f6\u00d6\u00fc\u00dc\u00df_.-]+)*$\n</code></pre>\n<p><a href=\"https://regex101.com/r/vGReMG/1/\" rel=\"nofollow noreferrer\">See regex demo</a></p>\n<ol>\n<li><code>^</code> - Matches start of string</li>\n<li><code>[A-Za-z_\u00e4\u00c4\u00f6\u00d6\u00fc\u00dc\u00df_.-]+</code> Matches one or more of these allowed characters</li>\n<li><code>(?: [A-Za-z_\u00e4\u00c4\u00f6\u00d6\u00fc\u00dc\u00df_.-]+)*</code> - Followed by 0 or more occurrences of: single space followed by one or more of your allowed characters.</li>\n<li><code>$</code> - Matches end of string</li>\n</ol>\n"}], "is_answered": true, "answer_count": 2, "last_activity_date": 1625833424, "question_id": 68316339, "title": "Regex for no white space at the beginning and at the and and only one in between", "body": "<p>I am creating a user input form where a user can enter his name and I want to use a regex for the following pattern:</p>\n<p>^[A-Za-z_\u00e4\u00c4\u00f6\u00d6\u00fc\u00dc\u00df_.-]*</p>\n<p>It only should accept the above letters, and dots if any and slashes if any.</p>\n<p>Moreover I want it to accept white spaces but not at the beginning and not at the end and only one white space between name parts.</p>\n<p>E.g. if user's name is <strong>Dora F. T. Kov</strong>\nit should be valid.</p>\n<p>If I am adding \\\\s to my regex, it allows any amount of white spaces in my string anywhere.</p>\n<p>How could I rewrite it based on the above concept?</p>\n<p>Thank you a lot in advance!</p>\n"}
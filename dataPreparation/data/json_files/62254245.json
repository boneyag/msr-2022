{"tags": ["django", "ajax", "django-views", "django-templates"], "comments": [{"score": 1, "creation_date": 1591587502, "post_id": 62254245, "comment_id": 110102404, "body": "in your context you are missing quotes, when returning the page you have one extra parentheses and place your templates like templates/app_name/keywords.html check these then we will figure out where we are lacking. It works on my system."}, {"score": 0, "creation_date": 1591646427, "post_id": 62254245, "comment_id": 110130101, "body": "It was the missing quotes - bah! Thanks for the extra set of eyes. The extra parentheses was just a copy and paste error into the question. If you submit this as an answer, then I&#39;ll accept."}], "answers": [{"score": 0, "last_activity_date": 1591596115, "answer_id": 62255916, "question_id": 62254245, "body": "<p>You can render your template with context data using the <strong>loade</strong> and <strong>context</strong> \nit will do first templates using jinja context will render in html then return final html text then you can pass using <strong>JsonResponse</strong> </p>\n\n<p>try following stuff then let me know</p>\n\n<p>@view.py</p>\n\n<pre><code>from django.template import context,loader\n...\n\ndef render_view(request):\n    if request.method == 'GET':\n        form = KeywordForm(request.POST)\n        if form.is_valid():\n            keywords = Keywords.objects.values()\n            print(keywords) # this works, contains a queryse\n            context = {\n                keywords: keywords,\n            } \n            template = loader.get_template('keywords.html')\n            html = template.render(context)\n            print(html)\n            return JsonResponse({'html':html},status=200,content_type=\"application/json\")\n</code></pre>\n\n<p>@in ajax call success method you should render </p>\n\n<pre><code> success: function(data) {\n          $(\"#keywords\").html(data);\n          //or\n          //ordocument.getElementById('keywords').innerHTML=data;\n        }\n</code></pre>\n\n<p>if works or not let me know?</p>\n"}, {"score": 1, "last_activity_date": 1591650049, "answer_id": 62271114, "question_id": 62254245, "body": "<p>In your context you are missing quotes, when returning the page you have one extra parentheses. It works on my system. </p>\n"}], "is_answered": true, "answer_count": 2, "score": 0, "last_activity_date": 1591650049, "creation_date": 1591584480, "question_id": 62254245, "title": "Django Render HTML via AJAX - Missing Context Variable Data", "body": "<p>In my Django web app, I'm trying to dynamically update only a certain section of my page via AJAX, but doing so by returning/replacing HTML in a child template (<code>{% include 'keywords.html' %}</code>). I understand that I can (and maybe should) return a JsonResponse (and I have done so successfully), but I'd like to try and get the below implementation working (as others seem to have). </p>\n\n<p>The view successfully returns the HTML to the AJAX response, but lacking the data contained in  the <code>keywords</code> context variable.</p>\n\n<p><strong>templates/index.html</strong></p>\n\n<pre><code>...\n&lt;div id=\"keywords\"&gt;\n    {% include 'keywords.html' %}\n&lt;/div&gt;\n...\n</code></pre>\n\n<p><strong>templates/keywords.html</strong></p>\n\n<pre><code>&lt;div id=\"keywords\"&gt;\n{% if keywords %}\n  {% for keyword in keywords %}\n    &lt;p&gt;{{keyword.word}}&lt;/p&gt;\n  {% endfor %}\n{% endif %}\n&lt;/div&gt;\n</code></pre>\n\n<p><strong>views.py</strong></p>\n\n<pre><code>def add_keyword(request):\n\n    if request.method == 'POST':\n        form = KeywordForm(request.POST)\n\n        if form.is_valid():\n\n            ...\n\n            keywords = Keywords.objects.values()...\n\n            print(keywords) # this works, contains a queryset with data\n\n            context = {\n                keywords: keywords,\n            }\n\n            # i've also tried return HttpResponse(render_to_string(...)) \n            # with same result\n            return render(request, 'keywords.html', context))\n</code></pre>\n\n<p><strong>index.js</strong></p>\n\n<pre><code>// i've also tried jquery .load()\n$.ajax({\n        url: data.url,\n        type: \"POST\",\n        data:\n        {\n          keyword: keyword,\n          csrfmiddlewaretoken: data.csrf_token\n        },\n        success: function(data) {\n          $(\"#keywords\").html(data);\n        }\n      });\n</code></pre>\n\n<p><strong>AJAX Response data:</strong></p>\n\n<pre><code>&lt;div id=\"keywords\"&gt;\n\n&lt;/div&gt;\n</code></pre>\n\n<p>What might I be missing, or doing wrong?</p>\n"}
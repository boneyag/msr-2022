{"tags": ["django", "datepicker"], "comments": [{"post_id": 3367091, "comment_id": 90758121, "body": "If you&#39;re comfortable with the Django Admin&#39;s date widget, you can include that in your app. The advantage is no external dependencies. Someone posted a how-to on the django-users group some time ago: - <a href=\"http://groups.google.com/group/django-users/browse_thread/thread/2f529966472c479d?fwc=2\" rel=\"nofollow noreferrer\">Using Admin DateTime Picker in your Form</a>"}, {"post_id": 3367091, "comment_id": 61038823, "body": "If I ask questions which belong to softwarerecommendations, then they get down-voted or closed. You are lucky :-)"}], "answers": [{"answer_id": 3368268, "question_id": 3367091, "body": "<p>You can also simply use Jquery in your templates. The jquery DateTime Picker allows each customization.</p>\n\n<p><a href=\"http://jqueryui.com/demos/datepicker/\" rel=\"noreferrer\">http://jqueryui.com/demos/datepicker/</a></p>\n"}, {"answer_id": 16959193, "question_id": 3367091, "body": "<p>I found this quite smooth for a <code>DateTimeField</code> friendly option <a href=\"https://github.com/asaglimbeni/django-datetime-widget\" rel=\"nofollow\">https://github.com/asaglimbeni/django-datetime-widget</a></p>\n\n<p>Needed to include <a href=\"http://www.malot.fr/bootstrap-datetimepicker/\" rel=\"nofollow\">bootstrap-timepicker css file from malot</a> and it worked quite neatly.</p>\n"}, {"answer_id": 27420381, "question_id": 3367091, "body": "<p>I have been struggling with a similar problem and I found the following solution pleasing, using floppy forms: </p>\n\n<ul>\n<li><a href=\"http://django-floppyforms.readthedocs.org/en/latest/examples.html\" rel=\"nofollow\">django floppy-forms datpicker, example</a></li>\n</ul>\n\n<p>This works really well and is relatively easy to implement, hope someone will find it help full. Good luck.</p>\n"}, {"answer_id": 31887982, "question_id": 3367091, "body": "<p>Being newer to coding, I used this example due to it's ease.</p>\n\n<pre><code>&lt;form method=\"POST\"&gt;{% csrf_token %}        \n    &lt;p&gt;Start date&lt;input type = 'date'  name='start_date' &gt;&lt;/p&gt;\n    &lt;p&gt;End date&lt;input type = 'date'  name='end_date' &gt;&lt;/p&gt;\n    &lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>\n"}, {"answer_id": 35968816, "question_id": 3367091, "body": "<p>Following is what I do, no external dependencies at all.: </p>\n\n<p>models.py:</p>\n\n<pre><code>from django.db import models\n\n\nclass Promise(models):\n    title = models.CharField(max_length=300)\n    description = models.TextField(blank=True)\n    made_on = models.DateField()\n</code></pre>\n\n<p>forms.py:</p>\n\n<pre><code>from django import forms\nfrom django.forms import ModelForm\n\nfrom .models import Promise\n\n\nclass DateInput(forms.DateInput):\n    input_type = 'date'\n\n\nclass PromiseForm(ModelForm):\n\n    class Meta:\n        model = Promise\n        fields = ['title', 'description', 'made_on']\n        widgets = {\n            'made_on': DateInput(),\n        }\n</code></pre>\n\n<p>my view:</p>\n\n<pre><code>class PromiseCreateView(CreateView):\n    model = Promise\n    form_class = PromiseForm\n</code></pre>\n\n<p>And my template:</p>\n\n<pre><code>&lt;form action=\"\" method=\"post\"&gt;{% csrf_token %}\n    {{ form.as_p }}\n    &lt;input type=\"submit\" value=\"Create\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>The date picker looks like this:</p>\n\n<p><a href=\"https://i.stack.imgur.com/D5eLW.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/D5eLW.png\" alt=\"enter image description here\"></a></p>\n"}, {"answer_id": 37895373, "question_id": 3367091, "body": "<p>Use <code>datetime-local</code> as type for the input.Its not very fancy looking.But will do the Job</p>\n\n<p>Hope this helps.<a href=\"https://i.stack.imgur.com/0PLSR.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/0PLSR.png\" alt=\"enter image description here\"></a></p>\n"}, {"answer_id": 38804177, "question_id": 3367091, "body": "<p>Django's <a href=\"https://docs.djangoproject.com/fr/1.9/_modules/django/forms/widgets/#TextInput\" rel=\"noreferrer\">TextInput</a> widget (and all of its subclasses) support specifying a type attribute to set the type of form.</p>\n\n<p>You can use this to set the input type to <code>date</code> (<a href=\"http://w3c.github.io/html-reference/input.date.html\" rel=\"noreferrer\">W3C specification</a>), for example in the following way :</p>\n\n<pre><code>date = fields.DateField(widget=forms.widgets.DateInput(attrs={'type': 'date'}))\n</code></pre>\n"}, {"answer_id": 41942774, "question_id": 3367091, "body": "<p>avi's solution can also be done without using an additional django input class:</p>\n\n<pre><code>class PromiseForm(ModelForm):\n\n    class Meta:\n        model = Promise\n        fields = ['title', 'description', 'made_on']\n        widgets = {\n            'made_on': DateInput(attrs={'type': 'date'}),\n        }\n</code></pre>\n"}, {"answer_id": 49064892, "question_id": 3367091, "body": "<p>When it comes to date-pickers my choice is <a href=\"https://bootstrap-datepicker.readthedocs.io/en/latest/\" rel=\"noreferrer\">Bootstrap Datepicker</a>. You can implement it in your django app by using <a href=\"https://github.com/monim67/django-bootstrap-datepicker-plus\" rel=\"noreferrer\">django-bootstrap-datepicker-plus</a> which works both on newer and older DJango versions. I maintain the repository and tested it working in DJango version <em>1.8</em>, <em>1.10</em>, <em>1.11</em> and <em>2.0.4</em>.</p>\n\n<p><a href=\"https://i.stack.imgur.com/g1Evf.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/g1Evf.png\" alt=\"bootstrap datepicker\"></a></p>\n\n<p>The setup is quite easy. You just install it.</p>\n\n<pre><code>  pip install django-bootstrap-datepicker-plus\n</code></pre>\n\n<p>Import the widget in your <strong>forms.py</strong> file</p>\n\n<pre><code>    from bootstrap_datepicker_plus import DatePickerInput\n</code></pre>\n\n<p>Add the widget to your date field</p>\n\n<pre><code>    class ToDoForm(forms.Form):\n        date = forms.DateField(\n            widget=DatePickerInput(\n                options={\n                    \"format\": \"mm/dd/yyyy\",\n                    \"autoclose\": True\n                }\n            )\n        )\n</code></pre>\n\n<p>Detailed instructions are available on the django-bootstrap-datepicker-plus <a href=\"https://github.com/monim67/django-bootstrap-datepicker-plus\" rel=\"noreferrer\">Github Page</a>.</p>\n\n<p><strong>Disclaimer:</strong> This widget package is now owned and maintained by me. For any issues with it feel free to open issues on the <a href=\"https://github.com/monim67/django-bootstrap-datepicker-plus\" rel=\"noreferrer\">Github Page</a>.</p>\n"}, {"answer_id": 52702275, "question_id": 3367091, "body": "<p>This is what worked for me . I am using Django 1.11 with bootstrap 3.3 . </p>\n\n<p><strong>Form.py</strong></p>\n\n<pre><code>from django.contrib.admin.widgets import AdminDateWidget\n\nclass AddInterview(forms.ModelForm):\n    class Meta:\n        model = models.Interview\n        fields = ['candidate', 'date', 'position', 'question_set']\n\n    date = forms.DateField(widget=AdminDateWidget())\n</code></pre>\n\n<p><strong>Template:</strong></p>\n\n<pre><code>    &lt;form method=\"post\"&gt;\n        &lt;div class=\"form-group\"&gt;\n            {% csrf_token %}\n            {{ form.media }}\n            {{ form.as_p }}\n            &lt;p&gt;Note: Date format is yyyy-mm-dd&lt;/p&gt;\n\n        &lt;/div&gt;\n</code></pre>\n\n<p><strong>CSS: (In same above html template file)</strong></p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"{% static 'admin/css/forms.css' %}\"/&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"{% static 'admin/css/widgets.css' %}\"/&gt;\n&lt;link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" &gt;\n</code></pre>\n\n<p><strong>JS:(In same above html template file)</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"/admin/jsi18n/\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{% static 'admin/js/core.js' %}\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{% static 'admin/js/admin/RelatedObjectLookups.js' %}\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{% static 'admin/js/vendor/jquery/jquery.min.js' %}\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{% static 'admin/js/jquery.init.js' %}\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{% static 'admin/js/actions.min.js' %}\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{% static 'admin/js/calendar.js' %}\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{% static 'admin/js/admin/DateTimeShortcuts.js' %}\"&gt;&lt;/script&gt;\n</code></pre>\n"}, {"answer_id": 54325255, "question_id": 3367091, "body": "<p>This is what i do to get datepicker in django forms.</p>\n\n<p>install bootstrap_datepicker_plus by pip command.</p>\n\n<p>pip install django-bootstrap_datepicker_plus</p>\n\n<p>forms.py</p>\n\n<pre><code>from .models import Hello\nfrom django import forms\nfrom bootstrap_datepicker_plus import DatePickerInput\n\nclass CreateForm(forms.ModelForm):\n    class Meta:\n        model = Hello\n        fields =[            \n            \"Date\",\n        ]\n\n    widgets = {\n        'Date': DatePickerInput(),\n    }\n</code></pre>\n\n<p>settings.py</p>\n\n<pre><code>INSTALLED_APPS = [\n    'bootstrap_datepicker_plus',\n]\n</code></pre>\n"}, {"answer_id": 68592810, "question_id": 3367091, "body": "<p>Here's an ultra simple way using just html5 and django:</p>\n<p>forms.py</p>\n<pre><code>class DateInput(forms.DateInput):\n    input_type = 'date'\n\nclass DateForm(forms.Form):\n    start_date = forms.DateField(widget=DateInput)\n    end_date = forms.DateField(widget=DateInput)\n</code></pre>\n<p>Views.py</p>\n<pre><code>def search_dates(request, pk=''):\n    if request.method == &quot;GET&quot;: # select dates in calendar\n        form = DateForm()\n        return render(request, 'search.html', {&quot;form&quot;:form})\n    if request.method == &quot;POST&quot;: # create cart from selected dates\n        form = DateForm(request.POST)\n        if form.is_valid():\n            start = form.cleaned_data['start_date']\n            end = form.cleaned_data['end_date']\n            start_date = datetime.strftime(start, &quot;%Y-%m-%d&quot;)\n            end_date = datetime.strftime(end, &quot;%Y-%m-%d&quot;)\n            print(start_date)\n            print(end_date)\n    return render(request, 'search.html', {&quot;form&quot;:form})\n</code></pre>\n<p>Template</p>\n<pre><code> &lt;form  method=&quot;post&quot;&gt;\n        {% csrf_token %}\n        {{ form.as_table }}\n        &lt;p style=&quot;text-align: center&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Search&quot;&gt;&lt;/p&gt;\n &lt;/form&gt;\n</code></pre>\n"}], "is_answered": true, "answer_count": 12, "last_activity_date": 1627655844, "question_id": 3367091, "title": "What&#39;s the cleanest, simplest-to-get running datepicker in Django?", "body": "<p>I love the <a href=\"http://github.com/thauber/django-schedule\" rel=\"noreferrer\">Thauber Schedule datepicker</a>, but it's a datetime picker and I can't get it to just do dates. Any recommendations for nice looking datepickers that come with instructions on how to integrate with a Django date form field?</p>\n"}
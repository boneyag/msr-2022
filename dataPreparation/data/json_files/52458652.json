{"tags": ["r", "regex", "gsub"], "answers": [{"score": 1, "last_activity_date": 1537635435, "answer_id": 52458872, "question_id": 52458652, "body": "<pre><code>gsub(\"(\\\\d)(st|nd|rd|th)\\\\b\", \"\\\\1\", x)\n</code></pre>\n\n<p><strong>Details:</strong><br>\n<code>\\\\\\\\d</code>          matches any digit<br>\n<code>(st|nd|rd|th)</code>  matches any of the suffixes<br>\nThe parentheses around the groups turn them into \"capture groups\" that can be recovered with \\\\1, \\\\2 etc. So my expression looks for a digit, followed by one of your suffixes and replaces it with just the digit. </p>\n"}, {"score": 0, "last_activity_date": 1537641122, "answer_id": 52459688, "question_id": 52458652, "body": "<p>Or using <code>str_remove</code></p>\n\n<pre><code>library(stringr)\nstr_remove(x, \"(?&lt;=[0-9])(st|nd|rd|th)\")\n#[1] \"11 Rollo Street\"\n</code></pre>\n"}], "is_answered": true, "answer_count": 2, "score": 0, "last_activity_date": 1537644399, "creation_date": 1537634008, "question_id": 52458652, "title": "R: Stripping ordinal indicators (&#39;st&#39;, &#39;nd&#39;, &#39;rd&#39;, &#39;th) from character string while keeping the number", "body": "<p>Tried gsub function but it replaces the alphanumeric text rather than just stripping the 'th' part.</p>\n\n<pre><code>x &lt;- \"11th Rollo Street\"\ngsub(\"[0-9]*\", \"\", x)\n</code></pre>\n\n<p>Output needed: </p>\n\n<blockquote>\n  <p>\"11 Rollo Street\"</p>\n</blockquote>\n\n<p>Any help would be appreciated.</p>\n"}
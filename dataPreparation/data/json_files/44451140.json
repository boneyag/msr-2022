{"tags": ["c++", "regex", "c++11", "c++14"], "comments": [{"score": 0, "creation_date": 1496991667, "post_id": 44451140, "comment_id": 75899383, "body": "Remove the unnecessary escapes and place <code>-</code> always at the start/end of the character class - <a href=\"https://ideone.com/3GQRiE\" rel=\"nofollow noreferrer\">ideone.com/3GQRiE</a>"}, {"score": 0, "creation_date": 1496998716, "post_id": 44451140, "comment_id": 75903351, "body": "Raw string might help <code>&quot;(&quot;[a-zA-Z_0-9-]+&quot;\\s*:\\s*)&quot;</code>."}], "answers": [{"comments": [{"score": 0, "creation_date": 1496998740, "post_id": 44451392, "comment_id": 75903371, "body": "Raw string might help <code>&quot;(&quot;[a-zA-Z_0-9-]+&quot;\\s*:\\s*)&quot;</code>."}, {"score": 0, "creation_date": 1496999725, "post_id": 44451392, "comment_id": 75904035, "body": "@Jarod42: Yes, why not, it is best practice (<a href=\"https://ideone.com/nqvkFA\" rel=\"nofollow noreferrer\">and works well</a>). Just the main issue is that the <code>-</code> should be placed at the end of the character class."}, {"score": 0, "creation_date": 1497002752, "post_id": 44451392, "comment_id": 75906208, "body": "Thanks! But with the fourth example from json.org/example.html,  <i>&#39;\\&quot;dataStoreUrl\\&quot; : \\&quot;jdbc:microsoft:sqlserver://LOCALHOST:1433;DatabaseName=goo&zwnj;&#8203;n\\&quot;&#39;</i> is not detected. what can be the reason?"}, {"score": 0, "creation_date": 1497004218, "post_id": 44451392, "comment_id": 75907194, "body": "You have <code>\\&#47;\\&#47;</code> - you need to match <code>\\</code> chars, too. Fix <a href=\"https://ideone.com/T3tayf\" rel=\"nofollow noreferrer\">as shown here</a>."}], "score": 0, "last_activity_date": 1497004245, "last_edit_date": 1497004245, "answer_id": 44451392, "question_id": 44451140, "body": "<p>You need to remove unnecessary escape symbols and make sure the <code>-</code> symbol is placed at the start/end of the character class (when escaped, in C++ std::regex does not really handle it as a literal char).</p>\n\n<p>Use</p>\n\n<pre><code>std::string main2=\"\\\"[a-zA-Z_0-9-]+\\\"\\\\s*:\\\\s*\";\nstd::string dig=\"[0-9]*1[0-9]*\";\nstd::string phrase=\"\\\"[a-zA-Z_0-9:\\\\s,./=;\\\\\\\\-]*1[a-zA-Z_0-9:\\\\s,./=;\\\\\\\\-]*\\\"\";\n</code></pre>\n\n<p>See the <a href=\"https://ideone.com/3GQRiE\" rel=\"nofollow noreferrer\">C++ demo</a>:</p>\n\n<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;regex&gt;\n\nint main()\n{\n    std::string main2=\"\\\"[a-zA-Z_0-9-]+\\\"\\\\s*:\\\\s*\";\n    std::string dig=\"[0-9]*1[0-9]*\";\n    std::string phrase=\"\\\"[a-zA-Z_0-9:\\\\s,./=;\\\\\\\\-]*1[a-zA-Z_0-9:\\\\s,./=;\\\\\\\\-]*\\\"\";\n\n    std::string format_1=main2+\"(\"+dig+\"|\"+phrase+\")\";\n    std::string str(\"\\\"dataStoreMaxConns\\\" : 100,\\n\\\"dataStoreName\\\" : \\\"cofax\\\",\\n\\\"dataStorePassword\\\" : \\\"dataStoreTestQuery\\\",\\n\\\"dataStoreTestQuery\\\" : \\\"SET NOCOUNT ON;select test='test';\\\",\\n\\\"dataStoreUrl\\\" : \\\"jdbc:microsoft:sqlserver://LOCALHOST:1433;DatabaseName=goon\\\"\");\n    std::regex f_1(format_1,std::regex_constants::icase);\n\n    std::smatch m_1;\n    for(auto it = std::sregex_iterator(str.begin(), str.end(), f_1);it != std::sregex_iterator();++it)\n    {\n         std::cout&lt;&lt;it-&gt;str()&lt;&lt;std::endl;\n    }\n   return 0;\n}\n</code></pre>\n"}], "is_answered": false, "answer_count": 1, "score": 1, "last_activity_date": 1497004245, "creation_date": 1496990995, "question_id": 44451140, "title": "C++ regex behavior", "body": "<p>I have check this simple regex test in regexr or regexpal :\n<strong>\\\"[a-zA-Z_0-9-]+\\\"[\\s]<em>:[\\s]</em>([0-9]<em>1[0-9]</em>|\\\"[a-zA-Z_0-9:\\s-\\,./\\=;]<em>1[a-zA-Z_0-9:\\s-\\,./\\=;]</em>\\\")</strong></p>\n\n<p>text :\n<em>\"dataStoreMaxConns\" : 100,\n               \"dataStoreName\" : \"cofax\",\n               \"dataStorePassword\" : \"dataStoreTestQuery\",\n               \"dataStoreTestQuery\" : \"SET NOCOUNT ON;select test='test';\",\n               \"dataStoreUrl\" : \"jdbc:microsoft:sqlserver://LOCALHOST:1433;DatabaseName=goon\"</em></p>\n\n<p>Result : 2 matches</p>\n\n<ol>\n<li>\"dataStoreMaxConns\" : 100</li>\n<li>\"jdbc:microsoft:sqlserver://LOCALHOST:1433;DatabaseName=goon\"</li>\n</ol>\n\n<p>I have try with c++ any in <a href=\"https://wandbox.org/\" rel=\"nofollow noreferrer\">https://wandbox.org/</a> and vs2010 standalone:</p>\n\n<pre><code> #include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;regex&gt;\n#include &lt;iterator&gt;\n\n//using namespace std;\n\nint main()\n{\n    std::string format_1;\n    std::string main,dig,phrase;\n    std::ifstream infile(\"noname-2\");\n    if(infile.good()==false)\n        return false;\n\n\n\n    main=\"\\\\\\\"[a-zA-Z_0-9\\\\-]+\\\\\\\"[\\\\s]*:[\\\\s]*\";\n    dig=\"[0-9]*1[0-9]*\";\n    phrase=\"\\\\\\\"[a-zA-Z_0-9:\\\\s\\\\-\\\\,\\\\.\\/\\\\=;]*1[a-zA-Z_0-9:\\\\s\\\\-\\\\,\\\\.\\/\\\\=;]*\\\\\\\"\";\n\n    format_1=main+\"(\"+dig+\"|\"+phrase+\")\";\n    std::string str((std::istreambuf_iterator&lt;char&gt;(infile)),std::istreambuf_iterator&lt;char&gt;());\n    std::regex f_1(format_1,std::regex_constants::icase);\n\n    std::smatch m_1;\n    for(auto it = std::sregex_iterator(str.begin(), str.end(), f_1);it != std::sregex_iterator();++it)\n    {\n         std::cout&lt;&lt;it-&gt;str()&lt;&lt;std::endl;\n    }\n   return 0;\n}\n</code></pre>\n\n<p>nonname-2 contains the <strong><em>text</em></strong></p>\n\n<p>Result is only one: <em>\"dataStoreMaxConns\" : 100</em></p>\n\n<p>Why?</p>\n"}
{"tags": ["c#", "json", "serialization", "servicestack-text"], "answers": [{"comments": [{"score": 0, "creation_date": 1458988309, "post_id": 36220380, "comment_id": 60099105, "body": "It&#39;s unfortunate, since ISerializable sounds as a standard interface that is worth to support."}, {"score": 0, "creation_date": 1459007322, "post_id": 36220380, "comment_id": 60105055, "body": "@LeoY it&#39;s not, it&#39;s only for Microsoft Serializers and imposes an unnecessary implementation."}], "score": 0, "last_activity_date": 1458910574, "last_edit_date": 1495541725, "answer_id": 36220380, "question_id": 36216784, "body": "<p>No <code>ISerializable</code> doesn't have any impact in ServiceStack.Text serializers which by default only serializes <strong>public properties</strong> but can be made to also serialize <strong>public fields</strong> with:</p>\n\n<pre><code>JsConifg.IncludePublicFields = true;\n</code></pre>\n\n<p>There are also a number of different ways to <a href=\"https://stackoverflow.com/a/14859968/85785\">ignore fields you don't want serialized</a>.</p>\n"}], "is_answered": true, "answer_count": 1, "score": 1, "last_activity_date": 1458910574, "creation_date": 1458895772, "question_id": 36216784, "title": "Does ServiceStack JsonSerializer support ISerializable", "body": "<p>Can <code>ServiceStack.Text.JsonSerializer</code> to work with class that implements <code>ISerializable</code> <strong>instead of</strong> taking public properties?</p>\n\n<p>Thank you</p>\n"}
{"tags": ["python", "regex"], "answers": [{"comments": [{"score": 0, "creation_date": 1439653617, "post_id": 32026265, "comment_id": 51954367, "body": "Why there isn&#39;t actual backslash?"}, {"score": 0, "creation_date": 1439654589, "post_id": 32026265, "comment_id": 51954634, "body": "<code>\\u002f</code> is a Unicode representation of a single character."}, {"score": 0, "creation_date": 1439655459, "post_id": 32026265, "comment_id": 51954899, "body": "<code>p=&#39;&#39;     for line in text.splitlines():         if &#39;string&#39; in line:             for part in line.split(&#39;,&#39;):                 if &#39;string&#39; in part:                     p=part     m=re.match(u&#39;.*&quot;string&quot;:&quot;([^&quot;]+)&quot;&#39;,p).group(1)</code> Any idea why this code doesn&#39;t decode the unicode characters? print(m) gives string with <code>\\u002f</code>"}], "score": 2, "last_activity_date": 1439653271, "last_edit_date": 1439653271, "answer_id": 32026265, "question_id": 32026241, "body": "<p>It seems like unicode chars present in your input string (<em>\\u002f</em>). There isn't an actual backslash character present in the input. And also I think you want to get the characters present inside the double quotes which exists next to <code>\"string\":</code>. So use a negated character class like <code>[^\"]+</code> to match any character (including unicodes) but not of double quotes, zero or more times. </p>\n\n<pre><code>&gt;&gt;&gt; st=',\"string\":\"x\\u002fg06HaX0M\\u002fuTJh7Q\",Bla'\n&gt;&gt;&gt; re.match(u',\"string\":\"([^\"]+)\",',st).group(1)\n'x/g06HaX0M/uTJh7Q'\n&gt;&gt;&gt; re.match(r',\"string\":\"([^\"]+)\",',st).group(1)\n'x/g06HaX0M/uTJh7Q'\n</code></pre>\n"}], "is_answered": true, "answer_count": 1, "score": 0, "last_activity_date": 1439653271, "creation_date": 1439652637, "question_id": 32026241, "title": "regex of backslash in python", "body": "<p>I'm trying to get the regex of a backslash, if the backslash is not present in the <code>test</code> string and not in the regex expression it is working, I tried <code>\\\\</code> and <code>\\\\\\\\</code></p>\n\n<p>This is my code:</p>\n\n<pre><code>def getString():\n    test=',\"string\":\"x\\u002fg06HaX0M\\u002fuTJh7Q\",Bla'\n    m=re.match(r\",\\\"string\\\":\\\"([\\w\\d\\\\\\\\]+)\\\",\",test)\n    print(m.group(1))\n</code></pre>\n\n<p>The error i get is:</p>\n\n<pre><code>AttributeError: 'NoneType' object has no attribute 'group'\n</code></pre>\n\n<p>Thanks for your help.</p>\n"}
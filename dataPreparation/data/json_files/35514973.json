{"tags": ["c#", ".net", "regex"], "comments": [{"post_id": 35514973, "comment_id": 58720554, "body": "If the structure is HTML, you can use an HTML parser for this."}], "answers": [{"answer_id": 35515236, "question_id": 35514973, "body": "<p>We know regex is not good for html parsing, but I think you don't need to parse html here, but simply get what's inside <code>&lt;query&gt;xxx&lt;/query&gt;</code> pattern.\nSo it doesn't matter what is the rest of the document as you don't want to traverse it, nor validate nor change, nothing (according with your question).</p>\n\n<p>So, in this particular case, I would use regex more than html parser:</p>\n\n<pre><code>var pattern = \"&lt;query&gt;.+&lt;\\/query&gt;\";\n</code></pre>\n\n<p>And then replace every match with string Replace method</p>\n"}, {"answer_id": 35515377, "question_id": 35514973, "body": "<p>You could use <a href=\"https://www.nuget.org/packages/HtmlAgilityPack\" rel=\"nofollow\">Html Agility Pack</a> to get first the <code>query</code> tags  and replace the inner text with whatever you want:</p>\n\n<pre><code>var html = new HtmlDocument();\nhtml.Load(filepath);\nvar queries = html.DocumentNode.SelectNodes(\"//query\");\nforeach(var node in queries)\n{\n  if(node.InnerText==\"select * from table1\")\n  {\n    node.InnerText=\"your result\";\n  }\n}\n</code></pre>\n\n<p>You could also use a dictionary to save the pattern as key and the replacement as value:</p>\n\n<pre><code>var dict = new Dictionary&lt;string, string&gt;();\ndict.Add(\"select * from table1\",\"your result\");\n//...\n\nvar html = new HtmlDocument();\nhtml.Load(filepath);\nvar queries = html.DocumentNode.SelectNodes(\"//query\");\nforeach(var node in queries)\n{\n  if(dict.Keys.Contains(node.InnerText))\n  {\n    node.InnerText=dict[node.InnerText];\n  }\n}\n</code></pre>\n"}, {"answer_id": 35516131, "question_id": 35514973, "body": "<pre><code>var source = \n@\"&lt;div&gt;\n&lt;query&gt;select * from table1&lt;/query&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;query&gt;select * from table2&lt;/query&gt;\n&lt;/div&gt;\";\n\nvar result = Regex.Replace(\n   source,\n   \"(?&lt;=&lt;query&gt;).*?(?=&lt;/query&gt;)\",\n   match =&gt; Sql.Execute(match.Value));\n</code></pre>\n\n<p>The <code>Sql.Execute</code> is a placeholder function for whatever logic you invoke to execute your query. Upon completion, its results will substitute the original <code>&lt;query&gt;\u2026&lt;/query&gt;</code> contents.</p>\n\n<p>If you want the query tags to be eliminated, then use a named capture group rather than lookarounds:</p>\n\n<pre><code>var result = Regex.Replace(\n    source,\n    \"&lt;query&gt;(?&lt;q&gt;.*?)&lt;/query&gt;\",\n    match =&gt; Sql.Execute(match.Groups[\"q\"].Value));\n</code></pre>\n"}], "is_answered": true, "answer_count": 3, "last_activity_date": 1621777629, "question_id": 35514973, "title": "c# regex replace but with different replacement value each time", "body": "<p>I have a string like this:</p>\n\n<pre><code>&lt;div&gt;\n&lt;query&gt;select * from table1&lt;/query&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;query&gt;select * from table2&lt;/query&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>This is a templating usecase. Each query will be replaced by a different value (ie SQL result). Is it possible to use Regex Replace method to do this ? </p>\n\n<p>The solution I'm thinking of is to use Regex.Match in the first pass, collect all the matches and then use string.replace in the second pass to replace the matches one by one. Is there a better way to solve this ?</p>\n"}
{"tags": ["json", "vb.net"], "answers": [{"comments": [{"score": 0, "creation_date": 1499399872, "post_id": 44962299, "comment_id": 76899700, "body": "I have posted the JSON data being used as a hyperlink in the main post...."}, {"score": 0, "creation_date": 1499400195, "post_id": 44962299, "comment_id": 76899769, "body": "Sorry, didn&#39;t see it. Updated my answer."}, {"score": 0, "creation_date": 1499400553, "post_id": 44962299, "comment_id": 76899846, "body": "Problem was naming as &quot;date&quot;, but using [date] works perfectly. Thank you so much!"}], "score": 0, "last_activity_date": 1499400142, "last_edit_date": 1499400142, "answer_id": 44962299, "question_id": 44962268, "body": "<p>When a property can be serialized it will be be left null by the JSON serializer.</p>\n\n<p>So either the dates in your JSON are empty or null or they are in a DateFormat that .NET can't serialize by default.</p>\n\n<p>In your posted JSON, the date field is what is numeric format, such as '1438992000' meaning it is a timestamp.</p>\n\n<p>Additionally, the field name is 'date' but you have defined your property as <code>uDate</code>. For serialization to work the property name must match the JSON key unless you are overriding the default serialization. Change the definition as follows and it will serialize:</p>\n\n<pre><code>    Public Property [date] As String\n    Get\n        Return m_date\n    End Get\n    Set\n        m_date = Value\n    End Set\nEnd Property\n</code></pre>\n"}, {"score": 0, "last_activity_date": 1499402066, "last_edit_date": 1499402066, "answer_id": 44962436, "question_id": 44962268, "body": "<p>The reason why you get \"empty\" value for <code>uDate</code> property is that porperty names should match for successful deserialization.</p>\n\n<p>You can change property name to satisfy  this rule. But if you want keep property names in class as it is - you can use <code>JsonPropertyAttribute</code> for json names.</p>\n\n<pre class=\"lang-vb prettyprint-override\"><code>Public Class ChartData\n\n    &lt;JsonProperty(\"date\")&gt;\n    Public Property uDate As String\n\n    &lt;JsonProperty(\"high\")&gt;\n    Public Property high As String\n\nEnd Class\n</code></pre>\n\n<p>With attributes you can use different naming conventions for different code environments. For example \"PascalCase\" in .NET and \"camelCase\" in JSON</p>\n"}], "is_answered": true, "answer_count": 2, "score": 0, "last_activity_date": 1499402066, "creation_date": 1499399518, "question_id": 44962268, "title": "Converting JSON Data in VB.NET", "body": "<p>I am trying to convert <a href=\"https://poloniex.com/public?command=returnChartData&amp;currencyPair=BTC_ETH&amp;start=0&amp;end=9999999999&amp;period=86400\" rel=\"nofollow noreferrer\" title=\"This Data\">This Data</a> to a structure.</p>\n\n<p>I have the structure as so:</p>\n\n<pre><code>Public Structure cChartData\n    Public cUDate As String\n    Public cOpen As Double\n    Public cClose As Double\n    Public cHigh As Double\n    Public cLow As Double\nEnd Structure\n</code></pre>\n\n<p>and the class as so:</p>\n\n<pre><code>Friend Class ChartData\nPublic Property uDate() As String\n    Get\n        Return m_date\n    End Get\n    Set\n        m_date = Value\n    End Set\nEnd Property\nPrivate m_date As String\nPublic Property high() As String\n    Get\n        Return m_high\n    End Get\n    Set\n        m_high = Value\n    End Set\nEnd Property\nPrivate m_high As String\nPublic Property low() As String\n    Get\n        Return m_low\n    End Get\n    Set\n        m_low = Value\n    End Set\nEnd Property\nPrivate m_low As String\nPublic Property open() As String\n    Get\n        Return m_open\n    End Get\n    Set\n        m_open = Value\n    End Set\nEnd Property\nPrivate m_open As String\nPublic Property close() As String\n    Get\n        Return m_close\n    End Get\n    Set\n        m_close = Value\n    End Set\nEnd Property\nPrivate m_close As String\nPublic Property volume() As String\n    Get\n        Return m_volume\n    End Get\n    Set\n        m_volume = Value\n    End Set\nEnd Property\nPrivate m_volume As String\nPublic Property quoteVolume() As String\n    Get\n        Return m_quoteVolume\n    End Get\n    Set\n        m_quoteVolume = Value\n    End Set\nEnd Property\nPrivate m_quoteVolume As String\nPublic Property weightedAverage() As String\n    Get\n        Return m_weightedAverage\n    End Get\n    Set\n        m_weightedAverage = Value\n    End Set\nEnd Property\nPrivate m_weightedAverage As String\nEnd Class\n</code></pre>\n\n<p>I am trying to retrieve all variables from each line. I get all of them except the date. I am using the following code (where chartInfo = JSON Data):</p>\n\n<pre><code>Dim cdata = JsonConvert.DeserializeObject(Of List(Of ChartData))(chartInfo)\n        Dim cResData(cdata.Count - 1) As cChartData\n        For i = 0 To cdata.Count - 1\n            cResData(i).cUDate = cdata(i).uDate\n            cResData(i).cOpen = Convert.ToDouble(cdata(i).open)\n            cResData(i).cClose = Convert.ToDouble(cdata(i).close)\n            cResData(i).cHigh = Convert.ToDouble(cdata(i).high)\n            cResData(i).cLow = Convert.ToDouble(cdata(i).low)\n        Next\n        Return cResData\n</code></pre>\n\n<p>The date returns a \"blank\" value, or nothing, when displayed, but all other values return properly. It is the first value so I wonder if it has something to do with it...</p>\n\n<p>Any help is greatly appreciated.</p>\n"}
{"tags": ["python", "sql", "json", "oracle"], "answers": [{"comments": [{"score": 0, "creation_date": 1587113948, "post_id": 61267099, "comment_id": 108386094, "body": "It is giving me &quot; Invalid object name &#39;openjson&#39;&quot;.  I am trying to insert in SQL Server (v18.4). I found out it could be due to insufficient compatability, it is set to 150 in my case, so that should not be an issue? So frustrating"}, {"score": 0, "creation_date": 1587114606, "post_id": 61267099, "comment_id": 108386460, "body": "&quot;Invalid object name&quot; looks like the table named <code>openjson</code> doesn&#39;t exist. You&#39;re selecting from it, so - check whether it exists or not. Mind letter case (if it matters)."}, {"score": 0, "creation_date": 1587117383, "post_id": 61267099, "comment_id": 108387876, "body": "I have added how I generate JSON , and  in my case I would need to get values from &#39;result &#39; which contains data in JSON format. Sorry I am new to this, so it&#39;s somewhat difficult for me."}], "score": 0, "last_activity_date": 1587111746, "answer_id": 61267099, "question_id": 61267045, "body": "<p>As of Oracle, syntax like you used is invalid; remove <code>values</code> keyword.</p>\n\n<pre><code>insert into test_t (randomcol) values (select randomcol from openjson)\n                               ------\n                               remove it!\n</code></pre>\n\n<p>Brackets can also be removed, so - finally - you'd get</p>\n\n<pre><code>insert into test_t (randomcol) select randomcol from openjson\n</code></pre>\n"}, {"score": 0, "last_activity_date": 1587111965, "answer_id": 61267153, "question_id": 61267045, "body": "<p>You can load in JSON strings as dictionaries to Python.</p>\n\n<pre><code>import json\nyourdict = json.loads({\"randomcol\":\"randomstring\"})\n</code></pre>\n\n<p>After that you can work with it like any normal python dictionary.</p>\n"}], "is_answered": false, "answer_count": 2, "score": 0, "last_activity_date": 1587117206, "creation_date": 1587111550, "question_id": 61267045, "title": "Select data from JSON output for insert statement in Python", "body": "<p>Suppose I have a JSON like this:</p>\n\n<pre><code>[\n {\n  \"randomcol\" : \"randomvarchar\"\n }\n]\n</code></pre>\n\n<p>And it is generated like this:</p>\n\n<pre><code>cursor_orcl.execute(\"\"\"\n                    Select * from test_t where \n            \"\"\")\n\nrows = cursor_orcl.fetchall()\ncolumns = [desc[0] for desc in cursor_orcl.description]\nresult = []\n\nfor row in rows:\n    row = dict(zip(columns, row))\n    result.append(row) \n</code></pre>\n\n<p>I need to generate insert SQL statement in Python from this. I came up with the following:</p>\n\n<pre><code>...\ncursor_insert = cnxn.cursor()\ncursor_insert.arraysize= 50000\nsql = (\n    \"INSERT INTO dbo.test_t (randomcol) \" + \" VALUES(\"\n    \"SELECT randomcol\" +\n    \"FROM OPENJSON(?))\"\n      )\n\ncursor_insert.execute(sql)   \ncursor_insert.close ()\ncnxn.commit ()\n</code></pre>\n\n<p>However it is giving me this error: <strong>'pyodbc.Error: ('07002'. '[07002]' [Microsoft][ODBC Driver 17 for SQL Server]COUNT field incorrect or syntax error (0) (SQLExecDirectW)')'</strong></p>\n\n<p>What could be wrong? This is just test table with only 1 row/column, I do not understand why it doesn't work.</p>\n"}
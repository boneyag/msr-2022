{
    "items": [
      {
        "tags": [
          "node.js",
          "json",
          "angular",
          "soap",
          "response"
        ],
        "answers": [
          {
            "answer_id": 62271387,
            "question_id": 62271049,
            "body": "<p>You need to bind response's fields to component members, through Angular binding.</p>\n\n<p>In your Angular component, for example :</p>\n\n<ul>\n<li>Create a new member :</li>\n</ul>\n\n<blockquote>\n  <p>subscriptionUsername: string member</p>\n</blockquote>\n\n<ul>\n<li>In your subscribe() use a SOAP NPM library to parse the SOAP response, then :</li>\n</ul>\n\n<blockquote>\n  <p>this.subscriptionUsername = soapData.subscriptionUsername</p>\n</blockquote>\n\n<ul>\n<li><p>In your view, then you can :</p>\n\n<p>Received {{ subscriptionUsername | async }}</p></li>\n</ul>\n"
          }
        ],
        "is_answered": true,
        "answer_count": 1,
        "last_activity_date": 1627639369,
        "question_id": 62271049,
        "title": "Display soap response Angular",
        "body": "<p>How do I display SOAP responses in an Angular client side application? The request is sent through a Nodejs server below. I am receiving a response in the console. I want to display the response on the front-end. How do I display certain/all fields in the angular front end? For example. I want to display the Transaction number from the response. How will I retrieve that value from the response and display it on the front end?</p>\n\n<p><strong>app.js</strong></p>\n\n<pre><code>app.get(\"/api/transunion\", (req, res) =&gt; {\n\nvar base64tag = CryptoJS.enc.Base64.stringify(hashtag);\n\nvar soapRequest = `&lt;soap:Envelope xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:typ=\"http://autoinsight.transunion.co.za/types\"&gt;\n    &lt;soap:Header/&gt;\n        &lt;soap:Body&gt;\n                &lt;typ:GetConvergedDataRequest xmlns=\"http://autoinsight.transunion.co.za/types\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"&gt;\n                  &lt;typ:ApiKey&gt;96C0C1D2-1278-4C26-AC52-78B287708AC3&lt;/typ:ApiKey&gt;\n                  &lt;typ:ReportCode&gt;A4B4AC82-2F2F-4A4B-AFF4-2BE2E35238D1&lt;/typ:ReportCode&gt;\n                  &lt;typ:Input i:type=\"HPIReportRequest\"&gt;\n                    &lt;typ:SubscriptionUsername&gt;&lt;/typ:SubscriptionUsername&gt;\n                    &lt;typ:SubscriptionPassword&gt;&lt;/typ:SubscriptionPassword&gt;\n                    &lt;typ:VehicleMMCode&gt;46620030&lt;/typ:VehicleMMCode&gt;\n                    &lt;typ:VehicleManufactureYear&gt;2014&lt;/typ:VehicleManufactureYear&gt;\n                    &lt;typ:ClientReference&gt;BryteSA&lt;/typ:ClientReference&gt;\n                    &lt;typ:RequestorPerson&gt;&lt;/typ:RequestorPerson&gt;\n                    &lt;typ:GuideYear&gt;2020&lt;/typ:GuideYear&gt;\n                    &lt;typ:GuideMonth&gt;4&lt;/typ:GuideMonth&gt;\n                    &lt;typ:VehicleMileage&gt;0&lt;/typ:VehicleMileage&gt;\n                  &lt;/typ:Input&gt;\n                &lt;/typ:GetConvergedDataRequest&gt;\n          &lt;/soap:Body&gt;\n      &lt;/soap:Envelope&gt;`;\n\n      request.post({\n        uri: url,\n        form: soapRequest,\n        headers: {\"request-hash\": base64tag}\n      }, function(err, response, body){\n        console.log(body);\n        console.log(response.statusCode);\n        parseString(body, function(err, result){\n          if(err){\n            console.log(\"ERROR: \" + err);\n          }\n          console.log(result);\n          res.send(result);\n        });\n      });});\n</code></pre>\n\n<p><strong>Client Side</strong></p>\n\n<p>component.ts file</p>\n\n<pre><code>import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport * as converter from 'xml-js';\n\n@Component({\n  selector: 'app-vehicle-details',\n  templateUrl: './vehicle-details.component.html',\n  styleUrls: ['./vehicle-details.component.css']\n})\nexport class VehicleDetailsComponent implements OnInit {\n\n  data: any;\n  TransactionNumber: any;\n  EstimatedRetailPrice: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get('http://localhost:3000/api/tu', {responseType: 'text' })\n        .subscribe((resData: any) =&gt; {\n          let result1 = converter.xml2json(resData.toString(), {compact: true, spaces: 4});\n          const JSONData = JSON.parse(result1);\n          this.data = JSONData;\n          this.TransactionNumber = JSONData.TransactionNumber;\n          this.EstimatedRetailPrice = JSONData.EstimatedRetailPrice;\n          console.log(this.TransactionNumber);\n        });\n  }\n}\n</code></pre>\n\n<p><strong>JSON Response</strong></p>\n\n<pre><code>  {\n       \"_declaration\":{\n          \"_attributes\":{\n             \"version\":\"1.0\",\n             \"encoding\":\"utf-8\"\n          }\n       },\n       \"s:Envelope\":{\n          \"_attributes\":{\n             \"xmlns:s\":\"http://www.w3.org/2003/05/soap-envelope\"\n          },\n          \"s:Body\":{\n             \"GetConvergedDataRequestResponse\":{\n                \"_attributes\":{\n                   \"xmlns:i\":\"http://www.w3.org/2001/XMLSchema-instance\",\n                   \"xmlns\":\"http://autoinsight.transunion.co.za/types\"\n                },\n                \"ConvergedData\":{\n                   \"_attributes\":{\n                      \"xmlns:d4p1\":\"http://schemas.datacontract.org/2004/07/Transunion.Auto.Convergence.B2B.BusinessModels\",\n                      \"i:type\":\"d4p1:ConvergedResults\"\n                   },\n                   \"d4p1:AccidentHistory\":{\n                      \"_attributes\":{\n                         \"i:nil\":\"true\"\n                      }\n                   },\n                   \"d4p1:TransactionNumber\":{\n                      \"_text\":\"64326668\"\n                   },\n                   \"d4p1:ValidationMessages\":{\n                      \"_attributes\":{\n                         \"xmlns:d5p1\":\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\"\n                      }\n                   },\n                   \"d4p1:VehicleCodeAndDescptionInfo\":{\n                      \"d4p1:VehicleCodeAndDescription\":{\n                         \"d4p1:ResultCode\":{\n                            \"_attributes\":{\n                               \"i:nil\":\"true\"\n                            }\n                         },\n                         \"d4p1:ResultCodeDescription\":{\n                            \"_attributes\":{\n                               \"i:nil\":\"true\"\n                            }\n                         },\n                         \"d4p1:VehicleCode\":{\n                            \"_text\":\"46620030\"\n                         },\n                         \"d4p1:VehicleTypeCode\":{\n                            \"_text\":\"T\"\n                         },\n                         \"d4p1:VehicleTypeDescription\":{\n                            \"_text\":\"Agricultural\"\n                         },\n                         \"d4p1:VehicleMake\":{\n                            \"_text\":\"NEW HOLLAND\"\n                         },\n                         \"d4p1:VehicleModel\":{\n                            \"_text\":\"TT TN\"\n                         },\n                         \"d4p1:VehicleVariant\":{\n                            \"_text\":\"TT 55 E / T DT\"\n                         },\n                         \"d4p1:IntroductionDate\":{\n                            \"_text\":\"2010-03-15T00:00:00\"\n                         }\n                },\n                \"ReportUrl\":{\n                   \"_text\":\"https:\\\\\\\\autotest.transunion.co.za/ReportApi/apireport/270c70e5-7d6d-407f-adc1-71974faec7df\"\n                },\n                \"ResponseStatus\":{\n                   \"_attributes\":{\n                      \"xmlns:d4p1\":\"http://schemas.servicestack.net/types\",\n                      \"i:nil\":\"true\"\n                   }\n                }\n             }\n          }\n       }\n    }\n</code></pre>\n"
      }
    ],
    "has_more": false,
    "quota_max": 10000,
    "quota_remaining": 9642
  }
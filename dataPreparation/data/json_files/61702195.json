{"tags": ["python", "django"], "comments": [{"score": 0, "creation_date": 1589167252, "post_id": 61702195, "comment_id": 109175811, "body": "What is the exact error that you&#39;re getting? Stripe errors always contain a message telling you exactly what the problem is."}, {"score": 0, "creation_date": 1589225960, "post_id": 61702195, "comment_id": 109204343, "body": "it is throwing the invalid parameters error. i have changed the api charge and it is still giving me the error"}, {"score": 0, "creation_date": 1589253075, "post_id": 61702195, "comment_id": 109212935, "body": "A <code>invalid_parameters_error</code> will have a human readable message attached to it: <a href=\"https://stripe.com/docs/api/errors\" rel=\"nofollow noreferrer\">stripe.com/docs/api/errors</a>. If you tell me what the message is I can probably point out what the issue is."}], "answers": [{"comments": [{"score": 0, "creation_date": 1591619056, "post_id": 62261668, "comment_id": 110115464, "body": "can you reformat your answer so that one see corrected code?"}, {"score": 0, "creation_date": 1591725188, "post_id": 62261668, "comment_id": 110163250, "body": "charge = stripe.Charge.create(                amount=amount, #cents                currency=&quot;usd&quot;,                 source=token, description=&quot;my first charge&quot;             )"}], "score": 1, "last_activity_date": 1591725388, "last_edit_date": 1591725388, "answer_id": 62261668, "question_id": 61702195, "body": "<p>add description field in stripe.Charge.create() function parameter</p>\n"}], "is_answered": true, "answer_count": 1, "score": 0, "last_activity_date": 1591725388, "creation_date": 1589050888, "question_id": 61702195, "title": "invalid parameter exception on stripe payment creation", "body": "<p>In the class below i am trying to create a stripe payment charge but i keep getting an exception that is in the except block (the stripe.error.InvalidRequestError) and it keeps telling me invalid parameters when i try to create a payment.</p>\n\n<p>here is the class in views that has the except block. </p>\n\n<pre><code>class PaymentView(View):\n    def get(self, *args, **kwargs):\n        # equipment_order\n        return render(self.request, \"payment.html\")\n\n    def post(self, *args, **kwargs):\n        equipment_order = \n            models.EquipmentOrder.objects.get(user=self.request.user, \n            ordered=False)\n        token = self.request.POST.get('stripeToken')\n        amount = int(equipment_order.get_total() * 100)\n\n        try:\n            charge = stripe.Charge.create(\n               amount=amount, #cents\n               currency=\"usd\", \n               source=token\n            )\n\n            # create payment\n            payment = models.Payment()\n            payment.stripe_charge_id = charge['id']\n            payment.user = self.request.user\n            payment.amount = equipment_order.get_total()\n            payment.save()\n\n            # assign payment to order\n            equipment_order.ordered = True\n            equipment_order.payment = payment\n            equipment_order.save()\n\n            messages.success(self.request, \"Your order was successful!\")\n            return redirect(\"create:equipment_home_page\")\n\n        except stripe.error.CardError as e:\n            body = e.json_body\n            err = body.get('error', {})\n            messages.error(self.request, f\"{err.get('message')}\")\n            return redirect(\"create:equipment_home_page\")\n\n        ...\n        except stripe.error.InvalidRequestError as e:\n            # Invalid parameters were supplied to Stripe's API\n            messages.error(self.request, \"Invalid parameters\")\n            return redirect(\"create:equipment_home_page\")\n        ...\n</code></pre>\n\n<p>here is the payment class in models</p>\n\n<pre><code>class Payment(models.Model):\n    stripe_charge_id = models.CharField(max_length=50)\n    user = models.ForeignKey(settings.AUTH_USER_MODEL, \n        on_delete=models.SET_NULL, blank=True, null=True)\n    amount = models.FloatField()\n    timestamp = models.DateTimeField(auto_now_add=True)\n\n    def __str__(self):\n        return self.user.username\n</code></pre>\n"}
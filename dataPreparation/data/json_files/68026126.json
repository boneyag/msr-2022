{"tags": ["r", "regex"], "comments": [{"post_id": 68026126, "comment_id": 120234102, "body": "Using <code>stringr</code>: <code>ifelse(str_length(phone) == 11, str_remove(phone, &quot;^1&quot;), phone)</code>"}], "answers": [{"answer_id": 68026280, "question_id": 68026126, "body": "<p>We can use <code>sub</code> from <code>base R</code> to match the <code>1</code> at the start (<code>^</code>) of the string, and capture the 10 digits (<code>\\\\d{10}</code>) as a group (<code>(...)</code>) till the end (<code>$</code>) of the string, and specify the backreference (<code>\\\\1</code>) of the captured group in replacement.  This will prevent losing any 1 that are in the 10 digit strings</p>\n<pre><code>sub(&quot;^1(\\\\d{10})$&quot;, &quot;\\\\1&quot;, phone)\n</code></pre>\n<p>-output</p>\n<pre><code>[1] &quot;1234567890&quot; &quot;1234567890&quot; &quot;5556456890&quot; &quot;5444567890&quot; &quot;9729772976&quot;\n</code></pre>\n"}], "is_answered": true, "answer_count": 1, "last_activity_date": 1623962995, "question_id": 68026126, "title": "Eliminate the leading &#39;1&#39; in front of US phone numbers in R", "body": "<p>I have a vector of US phone numbers, some of which have a leading &quot;1&quot; at the start of the phone number. If the number is 11 digits long, that means the first digit is the &quot;1&quot; I want to get rid of (at least within my data set).</p>\n<pre><code>phone &lt;- c(&quot;1234567890&quot;, &quot;1234567890&quot;, &quot;5556456890&quot;, &quot;5444567890&quot;, &quot;19729772976&quot;)\n</code></pre>\n<p>I stripped all whitespace, punctuation, and dashes using</p>\n<pre><code>gsub(&quot;[- .)(+]|[a-zA-Z]*:?&quot;,&quot;&quot;, phone)\n</code></pre>\n<p>I am unsure how to code it to remove the first digit if the string is 11 characters long. Or in other words, remove the first character in a vector if the string is a certain length.</p>\n"}
{"tags": ["json", "pandas", "nested", "normalize"], "answers": [{"score": 1, "last_activity_date": 1530157771, "answer_id": 51074440, "question_id": 51074141, "body": "<p>Did you just want to pivot your result dataframe? If so here is a minimal example of how to do that.</p>\n\n<p>Create data in a long table format, similar to your normalized json:</p>\n\n<pre><code>import pandas as pd\n\ndata = pd.DataFrame({'name': ['lat', 'long', 'country', 'active', 'state'], 'value': [90, 90, 'US', True, 'OH'], 'id': 2})\n\ndata\n</code></pre>\n\n<p>Here is our data:</p>\n\n<p><a href=\"https://i.stack.imgur.com/SSyHz.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/SSyHz.png\" alt=\"enter image description here\"></a></p>\n\n<p>Then to pivot, use:</p>\n\n<pre><code>pivoted = data.pivot(index = 'id', columns = 'name')\n\npivoted\n</code></pre>\n\n<p>Gives:</p>\n\n<p><a href=\"https://i.stack.imgur.com/vqVtc.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/vqVtc.png\" alt=\"enter image description here\"></a></p>\n"}, {"comments": [{"score": 0, "creation_date": 1530290582, "post_id": 51076694, "comment_id": 89199372, "body": "In the json_normalize function, If I have multiple fields at the meta level that I&#39;d like to grab, do I have to type them all out or is there a way to specify all of them?"}, {"score": 0, "creation_date": 1530509076, "post_id": 51076694, "comment_id": 89243807, "body": "As I know, you have to list them all."}], "score": 2, "last_activity_date": 1530169671, "answer_id": 51076694, "question_id": 51074141, "body": "<p>You may try <code>.pivot</code> after <code>json_normalize</code>.</p>\n\n<pre><code>from pandas.io.json import json_normalize\n\ndf1 = json_normalize(your_data, meta=['WellID'], record_path=['Attributes'])\ndf2 = df1.pivot(index='WellID', columns='Name', values='Value')\nprint(df2)\n\n# Output\n# Name   Active Alcohol Injector Country County Has Flare Has Plunger Has VRU  \\\n# WellID                                                                        \n# 3        True            False     USA    047      True        True    True   \n# 4        True            False     USA    047      None        None    None   \n# 5        True            False     USA    047      True        True    True   \n# 6        True            False     USA    047      None        None    None   \n# 7        True            False     USA    047      None        None    None   \n# \n# Name        Latitude      Longitude  Production Start Date Shut In State  \n# WellID                                                                    \n# 3       36.594260510  -97.706833870  5/17/2012 12:00:00 AM   False    OK  \n# 4       36.564503337  -97.600837012  5/31/2012 12:00:00 AM   False    OK  \n# 5       36.592378770  -97.725740930  8/18/2012 12:00:00 AM    True    OK  \n# 6       36.572665500  -97.672614600                   None   False    OK  \n# 7       36.562985200  -97.617945400                   None   False    OK\n</code></pre>\n"}], "is_answered": true, "answer_count": 2, "score": 0, "last_activity_date": 1530315207, "creation_date": 1530155540, "question_id": 51074141, "title": "Normalize nested json with pandas when keys vary by record", "body": "<p>I have a nested json data set, example below. Where the attributes vary by each well.  How can I normalize this data into a dataframe when the keys change from case to case?  I'd like rows that don't have the keys to appear as null.  </p>\n\n<p>{WellID: 3.\nAttributes:[\n Name: xxx, Value, yyy\n ....\n ....]}</p>\n\n<p>Sample Data:</p>\n\n<pre><code>[{'WellID': 3,\n  'Attributes': [{'Name': 'Production Start Date',\n    'Value': '5/17/2012 12:00:00 AM'},\n   {'Name': 'Latitude', 'Value': '36.594260510'},\n   {'Name': 'Longitude', 'Value': '-97.706833870'},\n   {'Name': 'Has Plunger', 'Value': 'True'},\n   {'Name': 'Has Flare', 'Value': 'True'},\n   {'Name': 'Has VRU', 'Value': 'True'},\n   {'Name': 'State', 'Value': 'OK'},\n   {'Name': 'Country', 'Value': 'USA'},\n   {'Name': 'County', 'Value': '047'},\n   {'Name': 'Alcohol Injector', 'Value': 'False'},\n   {'Name': 'Shut In', 'Value': 'False'},\n   {'Name': 'Active', 'Value': 'True'}]},\n {'WellID': 4,\n  'Attributes': [{'Name': 'Production Start Date',\n    'Value': '5/31/2012 12:00:00 AM'},\n   {'Name': 'Latitude', 'Value': '36.564503337'},\n   {'Name': 'Longitude', 'Value': '-97.600837012'},\n   {'Name': 'State', 'Value': 'OK'},\n   {'Name': 'Country', 'Value': 'USA'},\n   {'Name': 'County', 'Value': '047'},\n   {'Name': 'Alcohol Injector', 'Value': 'False'},\n   {'Name': 'Shut In', 'Value': 'False'},\n   {'Name': 'Active', 'Value': 'True'}]},\n {'WellID': 5,\n  'Attributes': [{'Name': 'Production Start Date',\n    'Value': '8/18/2012 12:00:00 AM'},\n   {'Name': 'Latitude', 'Value': '36.592378770'},\n   {'Name': 'Longitude', 'Value': '-97.725740930'},\n   {'Name': 'Has Plunger', 'Value': 'True'},\n   {'Name': 'Has Flare', 'Value': 'True'},\n   {'Name': 'Has VRU', 'Value': 'True'},\n   {'Name': 'State', 'Value': 'OK'},\n   {'Name': 'Country', 'Value': 'USA'},\n   {'Name': 'County', 'Value': '047'},\n   {'Name': 'Alcohol Injector', 'Value': 'False'},\n   {'Name': 'Shut In', 'Value': 'True'},\n   {'Name': 'Active', 'Value': 'True'}]},\n {'WellID': 6,\n  'Attributes': [{'Name': 'Latitude', 'Value': '36.572665500'},\n   {'Name': 'Longitude', 'Value': '-97.672614600'},\n   {'Name': 'State', 'Value': 'OK'},\n   {'Name': 'Country', 'Value': 'USA'},\n   {'Name': 'County', 'Value': '047'},\n   {'Name': 'Alcohol Injector', 'Value': 'False'},\n   {'Name': 'Shut In', 'Value': 'False'},\n   {'Name': 'Active', 'Value': 'True'}]},\n {'WellID': 7,\n  'Attributes': [{'Name': 'Latitude', 'Value': '36.562985200'},\n   {'Name': 'Longitude', 'Value': '-97.617945400'},\n   {'Name': 'State', 'Value': 'OK'},\n   {'Name': 'Country', 'Value': 'USA'},\n   {'Name': 'County', 'Value': '047'},\n   {'Name': 'Alcohol Injector', 'Value': 'False'},\n   {'Name': 'Shut In', 'Value': 'False'},\n   {'Name': 'Active', 'Value': 'True'}]}]\n</code></pre>\n\n<p>I tried to use this statement:</p>\n\n<pre><code>result = json_normalize(subset, 'Attributes',['WellID'], errors='ignore')\n</code></pre>\n\n<p>But it results in following which isn't flat:</p>\n\n<pre><code>                     Name                  Value  WellID\n0   Production Start Date  5/17/2012 12:00:00 AM       3\n1                Latitude           36.594260510       3\n2               Longitude          -97.706833870       3\n3             Has Plunger                   True       3\n4               Has Flare                   True       3\n5                 Has VRU                   True       3\n6                   State                     OK       3\n7                 Country                    USA       3\n8                  County                    047       3\n9        Alcohol Injector                  False       3\n10                Shut In                  False       3\n11                 Active                   True       3\n12  Production Start Date  5/31/2012 12:00:00 AM       4\n13               Latitude           36.564503337       4\n14              Longitude          -97.600837012       4\n15                  State                     OK       4\n16                Country                    USA       4\n17                 County                    047       4\n18       Alcohol Injector                  False       4\n19                Shut In                  False       4\n20                 Active                   True       4\n21  Production Start Date  8/18/2012 12:00:00 AM       5\n22               Latitude           36.592378770       5\n23              Longitude          -97.725740930       5\n24            Has Plunger                   True       5\n25              Has Flare                   True       5\n26                Has VRU                   True       5\n27                  State                     OK       5\n28                Country                    USA       5\n29                 County                    047       5\n30       Alcohol Injector                  False       5\n31                Shut In                   True       5\n32                 Active                   True       5\n33               Latitude           36.572665500       6\n34              Longitude          -97.672614600       6\n35                  State                     OK       6\n36                Country                    USA       6\n37                 County                    047       6\n38       Alcohol Injector                  False       6\n39                Shut In                  False       6\n40                 Active                   True       6\n41               Latitude           36.562985200       7\n42              Longitude          -97.617945400       7\n43                  State                     OK       7\n44                Country                    USA       7\n45                 County                    047       7\n46       Alcohol Injector                  False       7\n47                Shut In                  False       7\n48                 Active                   True       7\n</code></pre>\n\n<p>Please advise on how to get it into the following format:</p>\n\n<p>Well ID | Latitude | Longitude | State | .... etc</p>\n\n<p>I now have a dataset that has multiple fields on the Well ID label.  Is there a way to get all those fields into the data frame without manually typing them all in?  </p>\n\n<p>Thanks,</p>\n"}
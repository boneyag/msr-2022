{"tags": ["python", "regex", "math", "eval"], "answers": [{"comments": [{"score": 0, "creation_date": 1431995341, "post_id": 30303387, "comment_id": 48725203, "body": "Some good advice there in the note about not relying on regex. Thank you."}], "score": 3, "last_activity_date": 1431953846, "last_edit_date": 1495535312, "answer_id": 30303387, "question_id": 30303339, "body": "<p>You could try <a href=\"https://pyparsing.wikispaces.com/\" rel=\"nofollow noreferrer\"><code>pyparsing</code></a>, which does general recursive descent parsing. In fact, <a href=\"https://pyparsing.wikispaces.com/file/view/fourFn.py/30154950/fourFn.py\" rel=\"nofollow noreferrer\">here</a> is something quite close to your second example.</p>\n\n<p>About your other suggestions. </p>\n\n<ul>\n<li><p>See <a href=\"https://stackoverflow.com/questions/3513292/python-make-eval-safe\">here</a> about the security issues of eval (ironically, using it for a calculator).</p></li>\n<li><p>Fundamentally, <a href=\"http://en.wikipedia.org/wiki/Pumping_lemma_for_regular_languages\" rel=\"nofollow noreferrer\">regular languages are weaker than pushdown automata languages</a>. You shouldn't try to fight a general parse tree problem with regexes.</p></li>\n</ul>\n"}], "is_answered": true, "answer_count": 1, "score": 0, "last_activity_date": 1431953846, "creation_date": 1431952424, "question_id": 30303339, "title": "Python parse mathematical text expression", "body": "<p>I was wondering if anyone knew of a good python library for evaluation text-based mathematical expressions. So for example,</p>\n\n<pre><code>&gt;&gt;&gt; evaluate(\"Three plus nine\")\n12\n\n&gt;&gt;&gt; evaluate(\"Eight + two\")\n10\n</code></pre>\n\n<p>I've seen similar examples that people have done for numeric values and operators in a string. <a href=\"https://stackoverflow.com/questions/9685946/math-operations-from-string\">One method used <code>eval</code> to compute the literal value of the expression</a>. And <a href=\"https://stackoverflow.com/questions/2371436/evaluating-a-mathematical-expression-in-a-string\">another method of doing this used regex to parse the text</a>.</p>\n\n<p>If there isn't an existing library that handles this well I will probably end up using a combination of the regex and eval techniques for this. I just want to confirm that there isn't already something like this already out there.</p>\n"}
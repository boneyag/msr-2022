{"tags": ["html", "json", "excel", "regex", "vba"], "comments": [{"score": 3, "creation_date": 1625728787, "post_id": 68296888, "comment_id": 120705133, "body": "The problem I encountered is that <code>objHTTP.Status</code> is <code>404</code> <b>Not Found</b>. So Probably some cookies or whatever is needed (you have to figuer this out). You need to get <code>200</code> as status which means <b>OK</b>, otherwise your htmltext is not what you expect. \u2022 Second problem is your regex pattern is wrong. To get the json string you need <code>\\[\\{.*\\}\\]</code> as a pattern."}, {"score": 1, "creation_date": 1625730282, "post_id": 68296888, "comment_id": 120705658, "body": "<code>&quot;\\(([^)]+)\\)&quot;</code> is what I use to get string between and including parenthesis. May be <code>&quot;\\{([^}]+)\\}&quot;</code> this will give you string between and including curly braces. ... &#91;\\{.*\\}&#93; will give you all the text between and including first and last brackets"}, {"score": 1, "creation_date": 1625731654, "post_id": 68296888, "comment_id": 120706177, "body": "Tried <code>&quot;\\{([^}]+)\\}&quot;</code> with <code>&quot;[{&#39;Url&#39;:&#39;http:&#47;&#47;s.cafef.vn&#47;upcom&#47;A32-cong-ty-co-phan-32.chn&zwnj;&#8203;&#39;},{&#39;Url&#39;:&#39;http:&#47;&#47;s.&zwnj;&#8203;cafef.vn&#47;upcom&#47;YTC-c&zwnj;&#8203;ong-ty-co-phan-xuat-&zwnj;&#8203;nhap-khau-y-te-thanh&zwnj;&#8203;-pho-ho-chi-minh.chn&zwnj;&#8203;&#39;}]&quot;</code> .. it works.. gives collection of strings between and including curly braces."}, {"score": 1, "creation_date": 1625734767, "post_id": 68296888, "comment_id": 120707428, "body": "I think it doesn&#39;t work with xhr, because if I load the main page <code>https:&#47;&#47;cafef.vn&#47;</code> I get the responseText <code>&lt;body onload=&quot;window.location = &#39;http:&#47;&#47;cafef.vn&#39;&quot;&gt;&lt;&#47;body&gt;</code> That&#39;s only an empty body with an <code>onload</code> event which gets the real content over JS and JS is not working with xhr. I think the better approach here is SeleniumBasic to use the Chrome browser to make the job with JS. You can look here at the answer of YasserKhalil how to install SeleniumBasic and the latest WebDriver: <a href=\"https://stackoverflow.com/questions/57216623/using-google-chrome-in-selenium-vba-installation-steps\" title=\"using google chrome in selenium vba installation steps\">stackoverflow.com/questions/57216623/&hellip;</a>"}], "answers": [{"comments": [{"score": 1, "creation_date": 1625741942, "post_id": 68299014, "comment_id": 120710445, "body": "Good and right idea to kick <code>#data</code> from the url^^"}], "score": 3, "last_activity_date": 1625736679, "answer_id": 68299014, "question_id": 68296888, "body": "<p>This will return the JSON string as a Dictionary object for you to work through:</p>\n<p>You will need JsonConverter (and reference to Microsoft Scripting Runtime for Dictionary object)</p>\n<pre><code>Private Sub Test()\n    Dim xmlhttp As Object\n    Set xmlhttp = CreateObject(&quot;MSXML2.XMLHTTP&quot;)\n    \n    xmlhttp.Open &quot;GET&quot;, &quot;https://s.cafef.vn/screener.aspx&quot;\n    xmlhttp.send\n    \n    Dim jsonStr As String\n    jsonStr = Mid$(xmlhttp.responseText, InStr(xmlhttp.responseText, &quot;[{&quot;))\n    jsonStr = Left$(jsonStr, InStr(jsonStr, &quot;}]&quot;) + 1)\n    \n    Dim jsDict As Scripting.Dictionary\n    Set jsDict = JsonConverter.ParseJson(&quot;{&quot;&quot;results&quot;&quot;:&quot; &amp; jsonStr &amp; &quot;}&quot;)\n    \n    Debug.Print jsDict(&quot;results&quot;).Count '1874\nEnd Sub\n</code></pre>\n<p>Note: The original URL in your question returns 404 error, you just need to remove <code>#data</code> from the URL.</p>\n"}, {"score": 1, "last_activity_date": 1625742104, "last_edit_date": 1625742104, "answer_id": 68299674, "question_id": 68296888, "body": "<p>Edited your macro.. This will add a worksheet and parse JSON text from Range A1</p>\n<pre><code>Option Explicit\n\nSub ExtractJSON_in_html()\nDim JSONtext As String, JSONtextarr() As String, Url As String\nDim htmlTEXT As String, colHead As String\nDim SDI As Object, objHTTP As Object, theMatches As Object, Match As Variant\nDim StartPos As Long, endPos As Long, i As Long\n\nSet objHTTP = CreateObject(&quot;MSXML2.XMLHTTP&quot;)\nUrl = &quot;https://s.cafef.vn/screener.aspx&quot;\n\n' =====send an HTTP request with VBA ====\nobjHTTP.Open &quot;GET&quot;, Url, False\nobjHTTP.send\nhtmlTEXT = objHTTP.responseText\nStartPos = InStr(1, htmlTEXT, &quot;var jsonData = [&quot;, vbTextCompare)\nendPos = InStr(StartPos, htmlTEXT, &quot;]&quot;, vbTextCompare)\nhtmlTEXT = Replace(Mid(htmlTEXT, StartPos, endPos - StartPos + 1), &quot;,&quot;&quot;&quot;, &quot;;&quot;)\n\n' ===== Make the JSON strings collecton  =======\nSet SDI = CreateObject(&quot;VBScript.RegExp&quot;)\nSDI.IgnoreCase = True\nSDI.Global = True\n\n\nSDI.Pattern = &quot;[^a-zA-Z0-9&amp;{}./:;,-]&quot;\nhtmlTEXT = SDI.Replace(htmlTEXT, &quot;&quot;)\n\nSDI.Pattern = &quot;\\{([^}]+)\\}&quot;\nSet theMatches = SDI.Execute(htmlTEXT)\nJSONtext = &quot;&quot;\nDebug.Print theMatches.Count\nFor Each Match In theMatches\n    JSONtext = JSONtext &amp; Match.Value &amp; &quot;,&quot;\nNext\n\n' ===== Populate new worksheet with parsed JSON =======\nJSONtext = Replace(Mid(JSONtext, 2, Len(JSONtext) - 3), &quot;,ParentCategoryId&quot;, &quot;,,ParentCategoryId&quot;, , , vbTextCompare)\nJSONtextarr = Split(JSONtext, &quot;},{&quot;, , vbTextCompare)\nWorksheets.Add\nRange(&quot;A2&quot;).Resize(UBound(JSONtextarr) + 1, 1).Value = Application.Transpose(JSONtextarr)\n\nRange(&quot;A2&quot;).CurrentRegion.TextToColumns Destination:=Range(&quot;A2&quot;), DataType:=xlDelimited, _\n    TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, _\n    Semicolon:=True, Comma:=False, Space:=False, Other:=False, TrailingMinusNumbers:=True\n\nDebug.Print Range(&quot;A2&quot;).CurrentRegion.Columns.Count\nFor i = 1 To Range(&quot;A2&quot;).CurrentRegion.Columns.Count\ncolHead = Split(Cells(2, i), &quot;:&quot;)(0)\nCells(1, i) = colHead\nRange(&quot;A2&quot;).CurrentRegion.Columns(i).Replace What:=colHead &amp; &quot;:&quot;, Replacement:=&quot;&quot;, LookAt:=xlPart, _\n    SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _\n    ReplaceFormat:=False\nNext i\n\n\nEnd Sub\n</code></pre>\n"}, {"score": 2, "last_activity_date": 1625765942, "answer_id": 68306348, "question_id": 68296888, "body": "<p>I would want more certainty over matching the correct JavaScript object than given by the current Instr methods (which could be extended to include the var jsonData pattern as well.) In case of using regex then the following pattern can be used, which will allow for line break matching. Note, you only need one entire match then parse the JavaScript array returned with a json parser.</p>\n<hr />\n<pre><code>Public Sub ExtractJSON_in_html()\n    ' =====send an HTTP request with VBA ====\n    Dim JSONtext As String\n    Dim htmlTEXT As String\n    Dim SDI As Object\n\n    Set OBJHTTP = CreateObject(&quot;MSXML2.XMLHTTP&quot;)\n    URL = &quot;https://s.cafef.vn/screener.aspx&quot;\n  \n    OBJHTTP.Open &quot;GET&quot;, URL, False\n    OBJHTTP.setRequestHeader &quot;User-Agent&quot;, &quot;Mozilla/5.0&quot;\n    OBJHTTP.send\n    htmlTEXT = OBJHTTP.responseText\n   \n    MsgBox htmlTEXT\n\n    ' ===== Locate the JSON string  =======\n    Set SDI = CreateObject(&quot;VBScript.RegExp&quot;)\n    SDI.IgnoreCase = True\n    SDI.Pattern = &quot;var\\sjsonData\\s=\\s([\\s\\S].*)?;&quot;\n    \n    WriteTxtFile SDI.Execute(htmlTEXT)(0).SubMatches(0)\nEnd Sub\n\n Public Sub WriteTxtFile(ByVal aString As String, Optional ByVal filePath As String = &quot;C:\\Users\\&lt;user&gt;\\Desktop\\Test.txt&quot;)\n    Dim fso As Object, Fileout As Object\n    Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)\n    Set Fileout = fso.CreateTextFile(filePath, True, True)\n    Fileout.Write aString\n    Fileout.Close\nEnd Sub\n</code></pre>\n<hr />\n<p><strong>Regex:</strong></p>\n<p><a href=\"https://i.stack.imgur.com/VTFnW.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/VTFnW.png\" alt=\"enter image description here\" /></a></p>\n<hr />\n<p><strong>Sample of treeview of result:</strong></p>\n<p>Array with 1874 elements; 1 expanded.</p>\n<img src=\"https://i.stack.imgur.com/rmMUt.png\" height=\"300\">\n"}], "is_answered": true, "answer_count": 3, "score": 2, "last_activity_date": 1625765942, "creation_date": 1625727197, "question_id": 68296888, "title": "Get the whole html file and extract a JSON paragraph", "body": "<p>I want to retrieve a table from the URL of <a href=\"https://s.cafef.vn/screener.aspx#data\" rel=\"nofollow noreferrer\">https://s.cafef.vn/screener.aspx#data</a> using <code>VBA</code>. This task is difficult because the table contains <code>JSON</code> data embedded in an html file.</p>\n<p>Taking @Tomalak \u2018s advice, I am trying to split up my task; solving four following individual problems one after another:</p>\n<ol>\n<li>Send an <code>HTTP</code> request to have the <code>HTML</code></li>\n<li>Locate the <code>JSON</code> string</li>\n<li>Parse <code>JSON</code> with <code>VBA</code> and then</li>\n<li>Loop over the raw data from the <code>JSON</code> and write into an Excel table.</li>\n</ol>\n<p><a href=\"https://stackoverflow.com/questions/68272812/extract-a-json-data-table-in-html-using-vba-converting-apps-script-into-vba\">Extract a JSON DATA table in html using VBA; converting Apps Script into VBA</a></p>\n<p>However, I get stuck at Step <code>2</code>, the response text that I get  is stored in <code>htmlTEXT</code>. Its print-out looks like below attached,  but the problem is as a string variable, <code>htmlTEXT</code> can hold up only a small part of the html page content. The <code>JSON</code> paragraph does not lie on the top part of the html page and is therefore not returned into <code>htmlTEXT</code>.</p>\n<p>My questions are:</p>\n<ol>\n<li><p>How can we get the whole content of the html page (with the <code>JSON</code> paragraph included)?</p>\n</li>\n<li><p>Once the <code>JSON</code> paragraph is captured, what Regular Expression can be used to extract the <code>JSON</code> paragraph ?</p>\n</li>\n</ol>\n<p>Noticing that the <code>JSON</code> paragraph starts with <code>[{</code> and ends with <code>}]</code>, I  therefore use the pattern  <code>[{*}]</code>  but it does not work at all, (though it works with pattern like <code>(D.C)</code>; resulting in <code>DOC</code> for my testing purpose)</p>\n<p>What is wrong with my code?</p>\n<pre class=\"lang-vba prettyprint-override\"><code>\nSub ExtractJSON_in_html()\n    ' =====send an HTTP request with VBA ====\n    Dim JSONtext As String\n    Dim htmlTEXT As String\n    Dim SDI As Object\n\n    Set objHTTP = CreateObject(&quot;MSXML2.XMLHTTP&quot;)\n    Url = &quot;https://s.cafef.vn/screener.aspx#data&quot;\n  \n    objHTTP.Open &quot;GET&quot;, Url, False\n    objHTTP.send\n    htmlTEXT = objHTTP.responsetext\n   \n    MsgBox htmlTEXT\n\n    ' ===== Locate the JSON string  =======\n    Set SDI = CreateObject(&quot;VBScript.RegExp&quot;)\n    SDI.IgnoreCase = True\n    SDI.Pattern = &quot;[{*}]&quot;\n    SDI.Global = True\n\n    Set theMatches = SDI.Execute(htmlTEXT)\n\n    For Each Match In theMatches     \n        'MsgBox Match.Value\n        JSONtext = Match.Value\n    Next\nEnd Sub\n</code></pre>\n<p>htmlTEXT:</p>\n<pre class=\"lang-html prettyprint-override\"><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n\n&lt;head&gt;\n\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot;/&gt;\n-- JASON Paragraph var jsonData = [{&quot;Url&quot;:&quot;http://s.cafef.vn/upcom/A32-cong-ty-co-phan-32.chn&quot;,&quot;CenterName&quot;:&quot;UpCom&quot;,&quot;Symbol&quot;:&quot;A32&quot;,&quot;TradeCenterID&quot;:9,&quot;ChangePrice&quot;:0,&quot;VonHoa&quot;:212.84,&quot;ChangeVolume&quot;:400,&quot;EPS&quot;:6.19220987764706,&quot;PE&quot;:5.0547382305287,&quot;Beta&quot;:0,&quot;Price&quot;:0,&quot;UpdatedDate&quot;:&quot;\\/Date(1625562652463)\\/&quot;,&quot;FullName&quot;:&quot;C\u00f4ng ty c\u1ed5 ph\u1ea7n 32&quot;,&quot;ParentCategoryId&quot;:0\n</code></pre>\n<pre class=\"lang-json prettyprint-override\"><code>{&quot;Url&quot;:&quot;http://s.cafef.vn/upcom/YTC-cong-ty-co-phan-xuat-nhap-khau-y-te-thanh-pho-ho-chi-minh.chn&quot;,&quot;CenterName&quot;:&quot;UpCom&quot;,&quot;Symbol&quot;:&quot;YTC&quot;,&quot;TradeCenterID&quot;:9,&quot;ChangePrice&quot;:0,&quot;VonHoa&quot;:170.8,&quot;ChangeVolume&quot;:200,&quot;EPS&quot;:-4.29038514857143,&quot;PE&quot;:-14.217837766922,&quot;Beta&quot;:0,&quot;Price&quot;:0,&quot;UpdatedDate&quot;:&quot;\\/Date(1625562969277)\\/&quot;,&quot;FullName&quot;:&quot;C\u00f4ng ty C\u1ed5 ph\u1ea7n Xu\u1ea5t nh\u1eadp kh\u1ea9u Y t\u1ebf Th\u00e0nh ph\u1ed1 H\u1ed3 Ch\u00ed Minh&quot;,&quot;ParentCategoryId&quot;:0}];\n</code></pre>\n"}
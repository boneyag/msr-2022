{"tags": ["python", "regex"], "comments": [{"score": 2, "creation_date": 1505207866, "post_id": 46172452, "comment_id": 79307030, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/1660694/regular-expression-to-match-any-character-being-repeated-more-than-10-times\">Regular expression to match any character being repeated more than 10 times</a>. You can easily adapt the regex from the accepted anser to suit your needs."}], "answers": [{"score": 4, "last_activity_date": 1505207925, "answer_id": 46172549, "question_id": 46172452, "body": "<p>A string consists of a single repeating character if and only if all characters in it are the same. You can easily test that by constructing a set out of the string: <code>set('55555')</code>.</p>\n\n<p>All characters are the same if and only if the set has size 1:</p>\n\n<pre><code>&gt;&gt;&gt; len(set('55555')) == 1\nTrue\n&gt;&gt;&gt; len(set('Hello')) == 1\nFalse\n&gt;&gt;&gt; len(set('')) == 1\nFalse\n</code></pre>\n\n<p>If you want to allow the empty string as well (set size 0), then use <code>&lt;= 1</code> instead of <code>== 1</code>.</p>\n"}, {"score": 0, "last_activity_date": 1505207938, "answer_id": 46172556, "question_id": 46172452, "body": "<p>You do not have to use regex for this, a test to determine if all characters in the string are the same will produce the desired output:</p>\n\n<pre><code>s = \"eee\"\nassert len(s) &gt; 0\nreference = s[0]\nresult = all([c==reference for c in s])\n</code></pre>\n\n<p>Or use <code>set</code> as Thomas showed, which is probably a better way.</p>\n"}, {"score": 1, "last_activity_date": 1505208531, "last_edit_date": 1505208531, "answer_id": 46172646, "question_id": 46172452, "body": "<p>Regex solution (via <code>re.search()</code> function):</p>\n\n<pre><code>import re\n\ns = 'eeeee'\nprint(bool(re.search(r'^(.)\\1+$', s)))   # True\n\ns = 'ee44e'\nprint(bool(re.search(r'^(.)\\1+$', s)))   # False\n</code></pre>\n\n<hr>\n\n<p><code>^(.)\\1+$</code> :</p>\n\n<ul>\n<li><p><code>(.)</code> - capture any character</p></li>\n<li><p><code>\\1+</code> - backreference to the previously captured group, repeated one or many times</p></li>\n</ul>\n"}], "is_answered": true, "answer_count": 3, "score": 1, "last_activity_date": 1505208531, "creation_date": 1505207661, "question_id": 46172452, "title": "Remove strings with repeating characters [Python]", "body": "<p>I need to determine if a string is composed of a certain repeating character, for example <code>eeeee</code>, <code>55555</code>, or <code>!!!</code>.</p>\n\n<p>I know this regex <code>'e{1,15}'</code> can match <code>eeeee</code> but it obviously can't match <code>555</code>. I tried <code>[a-z0-9]{1-15}</code> but it matches even the strings I don't need like <code>Hello</code>.</p>\n\n<p>The solution doesn't have to be regex. I just can't think of any other way to do this.</p>\n"}
{"tags": ["django", "http", "gunicorn", "traefik", "uvicorn"], "answers": [{"score": 2, "last_activity_date": 1598739938, "answer_id": 63652329, "question_id": 63643050, "body": "<p>OMG, I have lost so much time. The problem was simply ALLOWED_HOSTS (Facepalm).</p>\n<p>I turned DEBUG=True and only then I was able to see that the error was caused by ALLOWED_HOSTS. Just adding the host to this list solves my problem!</p>\n<p>SO guys always turn DEGUB=True on the initial deployment to catch any issues.</p>\n"}], "is_answered": true, "answer_count": 1, "score": 1, "last_activity_date": 1628424882, "creation_date": 1598670835, "question_id": 63643050, "title": "Django does not catch the requests from Traefik", "body": "<p>I recently configured traefik to manage my subdomains and their certificates (LetsEncrypt). So currently there are three services: traefik itself, nginx (for handling static files, not yet fully configured) and django. All these services work fine and without errors. But I have bad luck with the communication between traefik and my django app. In the following I show you my project folder structure and the configuration files, it would be great if someone could help.</p>\n<p><a href=\"https://i.stack.imgur.com/gEVaT.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/gEVaT.png\" alt=\"enter image description here\" /></a></p>\n<pre><code>.\n\u251c\u2500\u2500 proxy\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 acme.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 docker-compose.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 traefik.toml\n\u2514\u2500\u2500 services\n    \u251c\u2500\u2500 django\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 docker-compose.yml\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 Dockerfile\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 example\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 asgi.py\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 settings\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 base.py\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 dev.py\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 prod.py\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 urls.py\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 wsgi.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 manage.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 media\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 Pipfile\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 Pipfile.lock\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 scripts\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 entrypoint.sh\n    \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 entrypoint.sh_backup\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 staticfiles\n    \u2514\u2500\u2500 nginx\n        \u251c\u2500\u2500 default.conf\n        \u2514\u2500\u2500 docker-compose.yml\n</code></pre>\n<hr />\n<pre><code># cat proxy/traefik.toml\n\n[accessLog]\n\n[log]\n  level = &quot;INFO&quot;\n\n[api]\n  dashboard = true\n  insecure = false\n\n[providers]\n  [providers.docker]\n    exposedByDefault = false\n    watch = true\n    network = &quot;web&quot;\n\n\n[entryPoints]\n  [entryPoints.web]\n    address = &quot;:80&quot;\n\n  [entryPoints.web-secure]\n    address = &quot;:443&quot;\n\n\n[certificatesResolvers]\n  [certificatesResolvers.letsEncrypt.acme]\n    email = &quot;example@gmail.com&quot;\n    storage = &quot;acme.json&quot;\n    [certificatesResolvers.letsEncrypt.acme.httpChallenge]\n      entryPoint = &quot;web&quot;\n    [certificatesResolvers.letsEncrypt.acme.tlsChallenge]\n</code></pre>\n<hr />\n<pre><code># cat proxy/docker-compose.yml\n\nversion: '3.7'\n\nservices:\n    traefik:\n        image: traefik:latest\n        container_name: traefik\n        restart: always\n        labels:\n           - &quot;traefik.enable=true&quot;\n           - &quot;traefik.http.routers.${SERVICE}.rule=Host(`${DOMAIN_NAME}`)&quot;\n           - &quot;traefik.http.routers.${SERVICE}.service=api@internal&quot;\n           - &quot;traefik.http.routers.${SERVICE}.tls.certresolver=letsEncrypt&quot;\n           - &quot;traefik.http.routers.${SERVICE}.entrypoints=web-secure&quot;\n           - &quot;traefik.http.routers.${SERVICE}.middlewares=${SERVICE}_auth&quot;\n           - &quot;traefik.http.middlewares.${SERVICE}_auth.basicauth.users=example:example&quot;\n           - &quot;traefik.http.middlewares.${SERVICE}_https.redirectscheme.scheme=https&quot;\n           - &quot;traefik.http.routers.${SERVICE}_redirect.rule=Host(`${DOMAIN_NAME}`)&quot;\n           - &quot;traefik.http.routers.${SERVICE}_redirect.entrypoints=web&quot;\n           - &quot;traefik.http.routers.${SERVICE}_redirect.middlewares=${SERVICE}_https&quot;\n           - &quot;com.centurylinklabs.watchtower.enable=true&quot;\n        ports:\n            - 80:80\n            - 443:443\n        volumes:\n           - /var/run/docker.sock:/var/run/docker.sock\n           - ./traefik.toml:/traefik.toml\n           - ./acme.json:/acme.json\n        networks:\n            - web\n\nnetworks:\n    web:\n       external: true\n</code></pre>\n<hr />\n<pre><code># cat services/django/docker-compose.yml\n\nversion: '3.7'\n\nservices:\n    django:\n        container_name: dj\n        build:\n            context: ./\n        restart: unless-stopped\n        labels:\n           - &quot;traefik.enable=true&quot;\n           - &quot;traefik.http.routers.${SERVICE}.rule=Host(`${DOMAIN_NAME}`)&quot;\n           - &quot;traefik.http.routers.${SERVICE}.tls.certresolver=letsEncrypt&quot;\n           - &quot;traefik.http.routers.${SERVICE}.entrypoints=web-secure&quot;\n           - &quot;traefik.http.services.${SERVICE}.loadbalancer.server.port=5000&quot;\n        volumes:\n           - staticfiles:/app/staticfiles\n           - mediafiles:/app/media\n        env_file: .env\n        command: gunicorn example.wsgi:application --bind 0.0.0.0:5000 -k uvicorn.workers.UvicornWorker\n        expose:\n            - 5000\n        networks:\n            - web\n\nvolumes:\n    staticfiles:\n    mediafiles:\n\nnetworks:\n    web:\n        external: true\n</code></pre>\n<p>As I said before, all these services work separately without errors. My question is actually which part I did wrong and why Django does not receive the request from Traefik?</p>\n<p>Here is also Logs from Traefik and Django on Page reload:</p>\n<pre><code># TRAEFIK LOGS\n31.24.11.55 - - [29/Aug/2020:03:11:16 +0000] &quot;GET / HTTP/1.1&quot; 404 19 &quot;-&quot; &quot;-&quot; 375 &quot;-&quot; &quot;-&quot; 0ms\n31.24.11.55 - - [29/Aug/2020:03:11:16 +0000] &quot;GET / HTTP/1.1&quot; 404 19 &quot;-&quot; &quot;-&quot; 376 &quot;-&quot; &quot;-&quot; 0ms\n31.24.11.55 - - [29/Aug/2020:03:11:17 +0000] &quot;GET / HTTP/1.1&quot; 404 19 &quot;-&quot; &quot;-&quot; 377 &quot;-&quot; &quot;-&quot; 0ms\n31.24.11.55 - - [29/Aug/2020:03:11:17 +0000] &quot;GET / HTTP/1.1&quot; 404 19 &quot;-&quot; &quot;-&quot; 378 &quot;-&quot; &quot;-&quot; 0ms\n\n\n# DJANGO LOGS\n165 static files copied to '/app/staticfiles'.\n[2020-08-29 02:36:29 +0000] [1] [INFO] Starting gunicorn 20.0.4\n[2020-08-29 02:36:29 +0000] [1] [INFO] Listening at: http://0.0.0.0:5000 (1)\n[2020-08-29 02:36:29 +0000] [1] [INFO] Using worker: uvicorn.workers.UvicornWorker\n[2020-08-29 02:36:29 +0000] [11] [INFO] Booting worker with pid: 11\nDebugging status is:  False\n[2020-08-29 02:36:30 +0000] [11] [INFO] Started server process [11]\n[2020-08-29 02:36:30 +0000] [11] [INFO] Waiting for application startup.\n[2020-08-29 02:36:30 +0000] [11] [INFO] ASGI 'lifespan' protocol appears unsupported.\n[2020-08-29 02:36:30 +0000] [11] [INFO] Application startup complete.\n</code></pre>\n"}
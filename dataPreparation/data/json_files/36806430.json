{"tags": ["c++", "json", "http", "ssl", "google-api"], "comments": [{"score": 0, "creation_date": 1461383942, "post_id": 36806430, "comment_id": 61186573, "body": "have you tried anything?"}], "answers": [{"score": 0, "last_activity_date": 1461388832, "answer_id": 36806972, "question_id": 36806430, "body": "<p>The <a href=\"http://www.codeproject.com/Questions/427350/calling-a-website-from-cplusplus\" rel=\"nofollow\">given code</a> uses plain sockets, no SSL is mentioned in the code, so it will not work with HTTPS or any other SSL based protocol. In order to connect to HTTPS web page, one has to use OpenSSL or any other library providing this layer for TCP sockets (unless you're gonna deal with encryption on your own which I doubt). Here is an example by using Boost library:</p>\n\n<pre><code>/*\n\nCompile with\n    g++ -std=c++11 -lpthread -lboost_system -lssl -lcrypto -ogoog goog.cpp\n\n*/\n\n\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;cstdlib&gt;\n#include &lt;boost/asio.hpp&gt;\n#include &lt;boost/asio/ssl.hpp&gt;\n\n\nusing std::cout;\nusing std::endl;\nusing std::vector;\nusing std::string;\nusing boost::asio::ip::tcp;\nusing boost::asio::ip::address;\nusing boost::asio::io_service;\nusing boost::asio::connect;\nusing boost::asio::buffer;\nusing boost::system::error_code;\nusing boost::system::system_error;\nusing boost::asio::ssl::context;\n\n\nint main()\n{\n    const char* PORT = \"443\";\n    const string HOST = \"googleapis.com\";\n    const string REQUEST = \"GET https://www.googleapis.com/customsearch/v1?q=when%20is%20george%20washingtons%20birthdate&amp;cx=014855184903748195002:umdboiolvoi&amp;key=AIzaSyDxFosFrZlMpgdFeTsPWZfp925MbaBX49s HTTP/1.1\\r\\n\\r\\n\";\n\n    try\n    {\n        io_service ios;\n        tcp::resolver resolver(ios);\n        tcp::resolver::query query(HOST, PORT);\n        tcp::resolver::iterator iterator = resolver.resolve(query);\n        context ctx(context::sslv23);\n\n        boost::asio::ssl::stream&lt;tcp::socket&gt; sock(ios, ctx);\n        sock.set_verify_mode(boost::asio::ssl::verify_none);\n        connect(sock.lowest_layer(), iterator);\n        sock.handshake(boost::asio::ssl::stream_base::client);\n\n        const int BUFLEN = 2048;\n        vector&lt;char&gt; buf(BUFLEN);\n        sock.write_some(boost::asio::buffer(REQUEST, REQUEST.size()));\n        while (true)\n        {\n            size_t len = sock.read_some(boost::asio::buffer(buf, BUFLEN));\n            cout &lt;&lt; \"main(): buf.data()=\";\n            cout.write(buf.data(), len);\n        }\n\n    }\n    catch (system_error&amp; exc)\n    {\n        cout &lt;&lt; \"main(): exc.what()=\" &lt;&lt; exc.what() &lt;&lt; endl;\n    }\n\n    return EXIT_SUCCESS;\n}\n</code></pre>\n\n<p>It connects to Google APIs (no certificate verification is performed) over SSL socket, sends GET request, fetches the page and prints to stdout. However, it is done in the infinite loop, so it's up to you to parse the JSON answer and determine when to exit the reading loop.</p>\n"}], "is_answered": false, "answer_count": 1, "score": 0, "last_activity_date": 1461388832, "creation_date": 1461383466, "question_id": 36806430, "title": "c++ Http request SSL error", "body": "<p>OK so I'm working on this c++ project where I read from a site, needs to be google, to get answers to display to the user and I am using the code from this link <a href=\"http://www.codeproject.com/Questions/427350/calling-a-website-from-cplusplus\" rel=\"nofollow\">calling a website second solution</a> the second solution as the base for my project. Requesting the xml from Google's search results will not work as the answers are not in the xml so I made a google custom search to output to a json using the google custom search api. My problem is when is requesting the url, <a href=\"https://www.googleapis.com/customsearch/v1?q=when%20is%20george%20washingtons%20birthdate&amp;cx=014855184903748195002:umdboiolvoi&amp;key=AIzaSyDxFosFrZlMpgdFeTsPWZfp925MbaBX49s\" rel=\"nofollow\">link to my google custom search example here</a>, of the json it gives an ssl error from my program. How do I solve this ssl problem? Seems I need to GET https not http or I need code to verify the ssl certificate. Not sure how to do this as I'm new to protocols and networking and such on c++.</p>\n\n<p>Cannot use third part libraries.</p>\n\n<p>And I apologize ahead of time for my problem and being a noob on this subject. </p>\n"}
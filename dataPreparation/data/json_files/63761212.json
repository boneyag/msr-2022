{"tags": ["ios", "json", "swift", "core-data", "enums"], "answers": [{"score": 0, "last_activity_date": 1599376270, "answer_id": 63761636, "question_id": 63761212, "body": "<blockquote>\n<ol>\n<li>How can I add Codable to UserList to obtain model from json?</li>\n</ol>\n</blockquote>\n<pre><code>extension UserList: Codable {}\n\nenum AccessCodableError: Error {\n    case error(String)\n}\n\nextension Access: Codable {\n\n    enum CodingKeys: String, CodingKey {\n        case someFriends\n    }\n\n    enum NestedKeys: String, CodingKey {\n        case ids\n    }\n\n    var rawValue: String {\n        switch self {\n        case .friendsOnly:\n            return &quot;friendsOnly&quot;\n        case .private:\n            return &quot;private&quot;\n        case .public:\n            return &quot;public&quot;\n        case .someFriends:\n            return &quot;someFriends&quot;\n        }\n    }\n\n    init(from decoder: Decoder) throws {\n        if let container = try? decoder.container(keyedBy: CodingKeys.self) {\n            let nestedContainer = try container.nestedContainer(keyedBy: NestedKeys.self, forKey: .someFriends)\n            let ids = try nestedContainer.decode([String].self, forKey: .ids)\n            self = .someFriends(ids: ids)\n        }\n        else {\n            let container = try decoder.singleValueContainer()\n            let accessValue = try container.decode(String.self)\n            switch accessValue {\n            case let value where value == Access.private.rawValue:\n                self = .private\n            case let value where value == Access.friendsOnly.rawValue:\n                self = .friendsOnly\n            case let value where value == Access.public.rawValue:\n                self = .public\n\n            default:\n                throw AccessCodableError.error(&quot;Can't determine the decodable key&quot;)\n            }\n        }\n\n    }\n\n    func encode(to encoder: Encoder) throws {\n        switch self {\n        case .private, .friendsOnly, .public:\n            var container = encoder.singleValueContainer()\n            try container.encode(self.rawValue)\n        case .someFriends(let userIds):\n            var container = encoder.container(keyedBy: CodingKeys.self)\n\n            var nestedContainer = container.nestedContainer(keyedBy: NestedKeys.self, forKey: .someFriends)\n            try nestedContainer.encode(userIds, forKey: .ids)\n        }\n    }\n\n}\n\n</code></pre>\n<p>Usage (unsafe, for example):</p>\n<pre><code>// Encode\nlet userList1 = UserList(privacy: .friendsOnly, sharing: .someFriends(ids: [&quot;id1&quot;, &quot;id2&quot;]))\nlet encoder = JSONEncoder()\nencoder.keyEncodingStrategy = .convertToSnakeCase\nlet json = try! encoder.encode(userList1) \n// Decode\nlet decoder = JSONDecoder()\ndecoder.keyDecodingStrategy = .convertFromSnakeCase\nlet decodedList = try! decoder.decode(UserList.self, from: json)\n\n\n</code></pre>\n<blockquote>\n<ol start=\"2\">\n<li>How do I add Codable to Core Data models? To be able to directly save models from json to Core Data?</li>\n</ol>\n</blockquote>\n<pre><code>extension Access {\n    var ids: [String]? {\n        switch self {\n        case .someFriends(let ids):\n            return ids\n        default:\n            return nil\n        }\n    }\n}\n\nextension CodingUserInfoKey {\n    static let context = CodingUserInfoKey(rawValue: &quot;context&quot;)!\n}\n\n@objc(UserListModel)\npublic class UserListModel: NSManagedObject, Decodable {\n\n    enum CodingKeys: String, CodingKey {\n        case privacy\n        case sharing\n    }\n\n    required convenience public init(from decoder: Decoder) throws {\n        guard let context = decoder.userInfo[.context] as? NSManagedObjectContext\n            else { throw NSError() }\n        self.init(context: context)\n        let container = try decoder.container(keyedBy: CodingKeys.self)\n        let privacy = try container.decode(Access.self, forKey: .privacy)\n        let sharing = try container.decode(Access.self, forKey: .sharing)\n\n        self.privacy = AccessModel(privacy)\n        self.sharing = AccessModel(sharing)\n\n        if let ids = privacy.ids {\n            let model = SomeFriendsPrivacyModel(context: context)\n            model.ids = ids\n            model.userList = self\n            someFriendsPrivacy = model\n        }\n\n        if let ids = sharing.ids {\n            let model = SomeFriendsSharingModel(context: context)\n            model.ids = ids\n            model.userList = self\n            someFriendsSharing = model\n        }\n\n    }\n\n}\n\n</code></pre>\n<p>How to use (unsafe, for example):</p>\n<pre><code>        let appDelegate = UIApplication.shared.delegate as! AppDelegate\n        let context = appDelegate.persistentContainer.viewContext\n        let decoder = JSONDecoder()\n        decoder.keyDecodingStrategy = .convertFromSnakeCase\n        decoder.userInfo[.context] = context\n        try! decoder.decode(UserListModel.self, from: json) // json from 1 question\n        try! context.save()\n</code></pre>\n<blockquote>\n<ol start=\"3\">\n<li>How do I init a UserList model from the Core Data UserListModel?</li>\n</ol>\n</blockquote>\n<pre><code>extension Access {\n    init?(_ accessModel: AccessModel) {\n        switch accessModel {\n        case .friendsOnly:\n            self = .friendsOnly\n        case .private:\n            self = .private\n        case .public:\n            self = .public\n        default:\n            return nil\n        }\n    }\n}\n\nenum UserListInitError: Error {\n    case error(String)\n}\n\nextension UserList {\n\n    init(_ listModel: UserListModel) throws {\n        if let privacy = Access(listModel.privacy) {\n            self.privacy = privacy\n        } else {\n            guard let ids = listModel.someFriendsPrivacy?.ids else { throw UserListInitError.error(&quot;Unable to get data from Core Data model&quot;) }\n            self.privacy = .someFriends(ids: ids)\n        }\n\n        if let sharing = Access(listModel.sharing) {\n            self.sharing = sharing\n        } else {\n            guard let ids = listModel.someFriendsSharing?.ids else { throw UserListInitError.error(&quot;Unable to get data from Core Data model&quot;) }\n            self.sharing = .someFriends(ids: ids)\n        }\n    }\n}\n\n</code></pre>\n<p>Usage (unsafe, for example):</p>\n<pre><code>        let appDelegate = UIApplication.shared.delegate as! AppDelegate\n        let context = appDelegate.persistentContainer.viewContext\n        let request: NSFetchRequest&lt;UserListModel&gt; = UserListModel.fetchRequest()\n        let listModel = try! context.fetch(request).first!\n        let userList = try! UserList(listModel)\n \n</code></pre>\n"}], "is_answered": false, "answer_count": 1, "score": 0, "last_activity_date": 1599376270, "creation_date": 1599372387, "question_id": 63761212, "title": "How to parse into Core Data model from json, where there is an enum with associative values?", "body": "<p>Model</p>\n<pre><code>struct UserList {\n\n    var privacy: Access\n    var sharing: Access\n}\n\nenum Access: {\n\n    case `private`\n    case friendsOnly\n    case someFriends(ids: [String])\n    case `public`\n} \n</code></pre>\n<p>CoreData models</p>\n<pre><code>\n@objc(UserListModel)\npublic class UserListModel: NSManagedObject {\n    @NSManaged public var privacy: AccessModel\n    @NSManaged public var sharing: AccessModel\n    @NSManaged public var someFriendsPrivacy: SomeFriendsPrivacyModel?\n    @NSManaged public var someFriendsSharing: SomeFriendsSharingModel?\n}\n\n@objc(SomeFriendsSharingModel)\npublic class SomeFriendsSharingModel: NSManagedObject {\n    @NSManaged public var ids: [String]\n    @NSManaged public var userList: UserListModel\n}\n\n@objc public enum AccessModel: Int32 {\n\n    case `public` = 0\n    case friendsOnly = 1\n    case someFriends = 2\n    case `private` = 3\n\n}\n</code></pre>\n<p>CoreData setup:</p>\n<p><a href=\"https://i.stack.imgur.com/6U1ff.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/6U1ff.png\" alt=\"enter image description here\" /></a></p>\n<p>Questions:</p>\n<ol>\n<li>How can I add Codable to UserList to obtain model from json?</li>\n</ol>\n<pre><code>{&quot;privacy&quot;:&quot;friendsOnly&quot;,\n&quot;sharing&quot;:{\n    &quot;some_friends&quot;:\n          {&quot;ids&quot;:[&quot;id1&quot;,&quot;id2&quot;]}\n    }\n}\n</code></pre>\n<ol start=\"2\">\n<li>How do I add Codable to Core Data models? To be able to directly save models from json to Core Data?</li>\n<li>How do I init a UserList model from the Core Data UserListModel?</li>\n</ol>\n"}
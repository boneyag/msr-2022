{"tags": ["java", "regex"], "comments": [{"score": 0, "creation_date": 1547591485, "post_id": 54207793, "comment_id": 95242241, "body": "Try <code>&quot;Retrying for error:.*\\\\[u&#39;([^&#39;]+)&quot;</code>, see <a href=\"https://regex101.com/r/Dtg29v/1\" rel=\"nofollow noreferrer\">demo</a>."}, {"score": 0, "creation_date": 1547591487, "post_id": 54207793, "comment_id": 95242242, "body": "why did you put double slash in front of <code>.</code>?"}, {"score": 0, "creation_date": 1547591687, "post_id": 54207793, "comment_id": 95242322, "body": "That String can&#39;t even compile. You have an invalid escape sequence <code>\\\\\\</code>"}, {"score": 0, "creation_date": 1547591974, "post_id": 54207793, "comment_id": 95242417, "body": "@WiktorStribi\u017cew I got the following result: <code>Retrying for error: [[\\&quot;billing\\&quot;,\\\\\\{u&#39;non_field_errors&#39;: [u&#39;Invalid payment email provided</code> Is there any way I can get <code>Invalid payment email provided.</code> as the result?"}, {"score": 1, "creation_date": 1547592780, "post_id": 54207793, "comment_id": 95242694, "body": "You get <code>Invalid payment email provided.</code> <a href=\"https://ideone.com/hXo14b\" rel=\"nofollow noreferrer\">with my pattern</a>"}, {"score": 0, "creation_date": 1547594417, "post_id": 54207793, "comment_id": 95243118, "body": "Oh Yes. I was using group(0). Thanks!"}, {"score": 0, "creation_date": 1547595836, "post_id": 54207793, "comment_id": 95243449, "body": "I posted an answer below."}], "answers": [{"comments": [{"score": 0, "creation_date": 1547592772, "post_id": 54207953, "comment_id": 95242690, "body": "The expression <code>Retrying for error:</code> occurs only once in the log, however, this is not a single line. There are other lines to after this. Also, the stuff in the logs is not constant, it will change based on the scenario."}, {"score": 0, "creation_date": 1547592884, "post_id": 54207953, "comment_id": 95242729, "body": "hmm, ok. but will <code>Retrying for error:</code> always occur? even if the other stuff changes in the log? If so, the above approach will still work. by the way, how big are the logs?"}, {"score": 1, "creation_date": 1547593181, "post_id": 54207953, "comment_id": 95242815, "body": "Yes, the <code>Retrying fir error:</code> will always occur. I can test the code for multiple scenarios. I hope this works in all. Thanks!"}, {"score": 0, "creation_date": 1547593305, "post_id": 54207953, "comment_id": 95242848, "body": "sure, good luck. also, please share a snippet on how you are reading the log file."}], "score": 0, "last_activity_date": 1547592428, "answer_id": 54207953, "question_id": 54207793, "body": "<p>you dont have to use regex. how about this</p>\n\n<pre><code>        String x = \"Retrying for error: [[\\\"billing\\\",\\\\{u'non_field_errors': [u'Invalid payment email provided']}\\\"]]\";\n\n        String c = x.replace(\"Retrying for error: \",\"\");\n\n        String g = c.substring(c.lastIndexOf('[')+1);\n\n        String v = g.substring(0, g.indexOf(']'));\n\n        System.out.println(v);\n</code></pre>\n\n<p>this prints</p>\n\n<p><code>u'Invalid payment email provided'</code></p>\n\n<p>now do your logs have multiple instances of <code>Retrying for error:</code>? also, does this </p>\n\n<p><code>\"Retrying for error: [[\\\"billing\\\",\\\\{u'non_field_errors': [u'Invalid payment email provided']}\\\"]]\";</code></p>\n\n<p>represent a single line in your logs?</p>\n\n<p>The main idea is this:\nIf each line in your log file has just one instance of <code>Retrying for error:</code>, then you can easily parse the log one line at a time and iteratively strip away stuff that you dont need.</p>\n"}, {"score": 0, "last_activity_date": 1547595699, "answer_id": 54208413, "question_id": 54207793, "body": "<p>You may use the following regex:</p>\n\n<pre><code>Retrying for error:.*\\[u'([^']+)\n</code></pre>\n\n<p>See the <a href=\"https://regex101.com/r/Dtg29v/2\" rel=\"nofollow noreferrer\">regex demo</a>.</p>\n\n<p><strong>Details</strong></p>\n\n<ul>\n<li><code>Retrying for error:</code> - a literal substring</li>\n<li><code>.*</code> - any 0+ chars other than line break chars, as many as possible</li>\n<li><code>\\[u'</code> - a <code>[u'</code> substring</li>\n<li><code>([^']+)</code> - Capturing group #1 (<code>matcher.group(1)</code> value): 1+ chars other than <code>'</code>.</li>\n</ul>\n\n<p>See the <a href=\"https://ideone.com/hXo14b\" rel=\"nofollow noreferrer\">Java demo</a>:</p>\n\n<pre><code>String unescapedStr = \"Retrying for error: [[\\\"billing\\\",\\\\{u'non_field_errors': [u'Invalid payment email provided']}\\\"]]\";\nString pattern = \"Retrying for error:.*\\\\[u'([^']+)\";\nPattern r = Pattern.compile(pattern);\nMatcher m = r.matcher(unescapedStr);\nif (m.find()) {\n  System.out.println(m.group(1));\n}\n// =&gt; Invalid payment email provided\n</code></pre>\n"}], "is_answered": false, "answer_count": 2, "score": 2, "last_activity_date": 1547597834, "creation_date": 1547591348, "question_id": 54207793, "title": "Need help in extracting a expression from a log using regular expressions in Java", "body": "<p>I have a log as a string, and I am trying to capture the error message from it. the regex I tried did not work.</p>\n\n<blockquote>\n  <p>String = \"Retrying for error: [[\\\"billing\\\",\\{u'non_field_errors': [u'Invalid payment email\n  provided']}\\\"]]\"</p>\n</blockquote>\n\n<p>I need to extract the error message which is </p>\n\n<blockquote>\n  <p>Invalid payment email provided</p>\n</blockquote>\n\n<p>How I can extract this, using regex?</p>\n\n<p>I tried the pattern <code>Retrying for error: (\\\\.+)</code>, but it doesn't work:</p>\n\n<pre><code>String pattern = \"Retrying for error: (\\\\.+)\";\nPattern r = Pattern.compile(pattern);\nMatcher m = r.matcher(unescapedStr);\nif (m.find()) {\n  error = m.group(1);\n}\n</code></pre>\n\n<p>How can I get the expected result? </p>\n\n<blockquote>\n  <p>Invalid payment email provided, Actual: null</p>\n</blockquote>\n"}